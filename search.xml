<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>BigData 复习笔记 00：系统架构与常见业务</title>
    <url>/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/2df212192030/</url>
    <content><![CDATA[<p class="description">
数据行业常用工具及常见业务介绍
</p>
<figure>
<img data-src="https://image.alessa0.cn/132845.jpg" alt="stephen-dawson-qwtCeJ5cLYs-unsplash"><figcaption aria-hidden="true">stephen-dawson-qwtCeJ5cLYs-unsplash</figcaption>
</figure>
<span id="more"></span>
<blockquote class="blockquote-center">
<p>Chapter00. 软件架构与业务场景</p>

</blockquote>
<div class="text-center">
<a class="btn" href="http://data.stats.gov.cn/"><i class="fa fa-home fa-lg fa-fw"></i>国家数据</a>
</div>
<h1 id="系统架构">系统架构</h1>
<h2 id="系统工具">系统工具</h2>
<ul>
<li>底层架构：分布式文件系统</li>
<li>存储：分布式数据库</li>
<li>计算框架：离线批量 / 在线实时</li>
<li>工具：SQL 封装查询 / 机器学习</li>
<li>调度：分布式锁</li>
<li><strong>算法</strong></li>
</ul>
<figure>
<img data-src="https://image.alessa0.cn/145112.png" alt="系统架构"><figcaption aria-hidden="true">系统架构</figcaption>
</figure>
<h2 id="lambda架构">Lambda 架构</h2>
<blockquote>
<p>离线批量 + 实时处理</p>
</blockquote>
<p>批量计算：延时高，可使用复杂算法多次处理，结果相对精确</p>
<p>实时计算：延时低，能够对新 Item 进行处理，实时推荐</p>
<p>Lambda 架构结合批量计算和实时处理，能够给出相对完整的推荐结果</p>
<figure>
<img data-src="https://image.alessa0.cn/063438.png" alt="未命名文件"><figcaption aria-hidden="true">未命名文件</figcaption>
</figure>
<h2 id="数据">数据</h2>
<p>数据来源基本来自两类：</p>
<blockquote>
<p>PGC：专业机构</p>
<p>UGC：用户</p>
</blockquote>
<p>物品 (<strong>item</strong>) 数据拥有不同属性（名称 / 描述 /…），统称为<strong>元数据 (metadata)</strong></p>
<p>用户 (<strong>user</strong>) 数据拥有不同行为（点击 / 收藏 / 支付…）</p>
<h1 id="业务场景">业务场景</h1>
<h2 id="场景1推荐流程">场景 1：推荐流程</h2>
<p>第一阶段（<strong>召回</strong>）：用 Token 检索 Item / 用 Item 检索 Item，本质是找候选的过程【<strong>粗排</strong>】</p>
<p>第二阶段（<strong>过滤</strong>）：把候选集合中劣质的 Item 过滤掉</p>
<p>第三阶段（<strong>排序</strong>）：把好的 Item 排在前面【<strong>精排</strong>】</p>
<p>第四阶段（<strong>截断</strong>）：取 Top-N (和产品形态有关)</p>
<h3 id="简易版">简易版</h3>
<blockquote>
<ol type="1">
<li><p>用户 <strong>User</strong> 点击物品 <strong>ItemA</strong>，触发埋点</p></li>
<li><p>推荐系统引擎接收到埋点信息，发出请求，在<strong>索引</strong>数据库寻找<strong>与 ItemA 相关的</strong> ItemB、ItemC、ItemD…，并将结果<strong>取 Top-N</strong> 返回推荐给 User</p></li>
<li><p> 索引数据库 (NoSQL) 日常维护</p>
<ol type="1">
<li><p>使用分词技术，将物品库中 Item 划分出各个特征，构建出<strong>正排表</strong> Item -&gt; TokenA, TokenB, TokenC…</p></li>
<li><p> 根据正排表特征，构建出<strong>倒排表</strong> Token -&gt; ItemA, ItemB, ItermC…</p>
<blockquote>
<p>方式 1：将倒排表写入索引库（搜索引擎搜索时根据分词 token 实时计算得出相关 Item）</p>
<p>方式 2：根据正排表与倒排表，构建出 ItemA -&gt; ItemB, ItemC, ItermD… 写入索引库（索引库维护时根据 Item 分词 token 离线计算得出相关 Item）</p>
</blockquote></li>
</ol></li>
</ol>
</blockquote>
<h3 id="进阶版">进阶版</h3>
<blockquote>
<ol type="1">
<li><p>用户 User 点击物品 ItemA，触发埋点</p></li>
<li><p>推荐系统引擎接收到埋点信息，发出请求，在<strong>索引数据库 A</strong> 寻找与 ItemA 相关的 ItemB、ItemC、ItemD… <strong>以算法 1 打分排序取 Top-N1</strong>，在<strong>索引数据库 B</strong> 寻找与 ItemA 相关的 Item1、Item2、Item3… <strong>以算法 2 打分排序取 Top-N2</strong>，在<strong>索引数据库 C</strong> 寻找与 ItemA 相关的 Item-I、Item-II、Item-III…</p></li>
<li><p> 将不同索引库所得结果 Item <strong>去除分数</strong>放入<strong>打分模型</strong>，按打分高低<strong>取出 Top-N</strong> 结果返回推荐给 User</p></li>
<li><p><strong> 每个</strong>索引数据库 (NoSQL) 日常维护</p>
<ol type="1">
<li><p>使用分词技术，将物品库中 Item 划分出各个特征，<strong>按打分高低排序</strong>，构建出正排表 Item -&gt; <strong>TokenA: ScoreA</strong>, <strong>TokenB: ScoreB</strong>, <strong>TokenC: ScoreC</strong>…</p></li>
<li><p> 根据正排表特征，<strong>按打分高低排序</strong>，构建出倒排表 Token -&gt; <strong>ItemA: Score1</strong>, <strong>ItemB: Score2</strong>, <strong>ItermC: Score3</strong>…</p>
<blockquote>
<p>方式 1：将倒排表写入索引库（搜索引擎搜索时根据分词 token 实时计算得出相关 Item）</p>
<p>方式 2：根据正排表与倒排表，构建出 ItemA -&gt; <strong>ItemB: Score-I</strong>, <strong>ItemC: Score-II</strong>, <strong>ItermD: Score-III</strong>… 写入索引库（索引库维护时根据 Item 分词 token 离线计算得出相关 Item）</p>
</blockquote></li>
</ol></li>
</ol>
</blockquote>
<figure>
<img data-src="https://image.alessa0.cn/082726.png" alt="推荐流程"><figcaption aria-hidden="true">推荐流程</figcaption>
</figure>
<h2 id="场景2搜索引擎">场景 2：搜索引擎</h2>
<p>常用搜索场景：人与内容（PC 时代） -&gt; <strong>人与服务</strong>（移动时代）</p>
<blockquote>
<p>各大门户网站利用平台优势聚合大量信息，为用户提供桥梁，<strong>“有求必应”</strong></p>
<p>连接用户与内容，连接用户与服务</p>
</blockquote>
<p><strong>搜索引擎解决方案 Demo</strong>：使用的基于 MapReduce 的建库系统 (建库流)</p>
<ul>
<li>目的：构建供检索使用的索引和摘要</li>
<li>输入：网页</li>
<li>输出：索引和摘要</li>
<li>处理方法：多轮 Map-Reduce</li>
<li> 页面解析并处理</li>
<li>页面属性输出正排表</li>
<li>分析构建倒排表</li>
<li>结果分析 Merge 合并</li>
</ul>
<figure>
<img data-src="https://image.alessa0.cn/140821.png" alt="搜索引擎三段式结构"><figcaption aria-hidden="true">搜索引擎三段式结构</figcaption>
</figure>
<h2 id="场景3广告系统">场景 3：广告系统</h2>
<blockquote>
<ul>
<li>参与者：网民 / 广告主 / 平台</li>
<li>广告触发：Keyword Targeting
<ul>
<li>广告主 / 网民通过关键字表达需求</li>
<li>网民输入 query 与广告主购买的 Keyword 进行匹配</li>
</ul></li>
<li> CTR 点击率预估：机器学习
<ul>
<li>点击率用于广告排序</li>
<li>提升搜索引擎收益</li>
<li>保护网民利益</li>
</ul></li>
<li>广告排序：关键词广告拍卖
<ul>
<li>每次动态广告展现都是一次动态的拍卖</li>
<li>排序函数</li>
</ul></li>
</ul>
</blockquote>
<p>基本流程：</p>
<ol type="1">
<li>产品发布，广告主向平台购买相对应关键词 Token</li>
<li> 平台将产品加入广告库，同时更新广告索引库</li>
<li>索引库维护，更新倒排表中产品排序</li>
<li>平台根据索引库产品排序，在平台展现产品广告给网民</li>
<li>网民主动点击广告，或根据网民搜索输入的 query 与广告库索引进行匹配检索，展现给网民</li>
</ol>
<h1 id="项目结构demo">项目结构 Demo</h1>
<figure>
<img data-src="https://image.alessa0.cn/142106.png" alt="项目结构Demo"><figcaption aria-hidden="true">项目结构 Demo</figcaption>
</figure>
<p><br></p>
<p><meting-js id="30431364" server="netease" type="song" preload="none"></meting-js></p>
<hr>
]]></content>
      <categories>
        <category>技术</category>
        <category>大数据</category>
        <category>复习笔记</category>
      </categories>
      <tags>
        <tag>BigData</tag>
        <tag>业务</tag>
        <tag>架构</tag>
      </tags>
  </entry>
  <entry>
    <title>BigData 复习笔记 01：HDFS1.0 与 MapReduce</title>
    <url>/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/b2bff451d8c5/</url>
    <content><![CDATA[<p class="description">
HDFS1.0 与 MapReduce
</p>
<figure>
<img data-src="https://image.alessa0.cn/124000.jpg" alt="troy-t-9sQgt_cR50c-unsplash"><figcaption aria-hidden="true">troy-t-9sQgt_cR50c-unsplash</figcaption>
</figure>
<span id="more"></span>
<blockquote class="blockquote-center">
<p>Chapter01. MapReduce &amp; HDFS1.0</p>

</blockquote>
<h1 id="海量数据分流处理技术">海量数据分流处理技术</h1>
<blockquote>
<p>分而治之</p>
</blockquote>
<ul>
<li>大数据量
<ul>
<li>早期搜索引擎的网页存储系统，单机存储数千万网页，几十亿的网页需要通过几百台单机服务器存储，url 为 Key</li>
<li> 分布式文件系统，按 Block (64M-256M) 来划分组织文件
<ul>
<li>稳定性</li>
<li>容错能力</li>
<li>数据一致性</li>
</ul></li>
</ul></li>
<li>大流量
<ul>
<li>覆盖的大流量互联网服务</li>
<li>南方流量分到电信机房，北方流量分到联通机房</li>
<li>搜索引擎将 query 作为 Key 来分流</li>
</ul></li>
<li>大计算
<ul>
<li>根据输入数据划分计算任务</li>
<li> MapReduce 按输入数据来划分</li>
</ul></li>
</ul>
<h2 id="传统hash方法">传统 Hash 方法</h2>
<blockquote>
<p>如何将大数据流量均分到 N 台服务器，做到负载均衡？</p>
</blockquote>
<p>思路：</p>
<ul>
<li><p>找到合理的 Key，<strong>Hash(Key)</strong> 尽量分布均匀</p>
<ul>
<li><p>Hash (Key) mod N == 0 分到第 0 台</p></li>
<li><p> Hash (Key) mod N == 1 分到第 1 台</p></li>
<li><p>……</p></li>
<li><p>Hash (Key) mod N == i 分到第 i 台</p></li>
<li><p>……</p></li>
<li><p>Hash (Key) mod N == N - 1 分到第 N - 1 台</p></li>
</ul></li>
<li><p>一般以<strong>时间戳</strong>为 Key</p></li>
</ul>
<h2 id="随机划分">随机划分</h2>
<h2 id="一致性hash">一致性 Hash</h2>
<blockquote>
<p>支持动态增长， 更高级的划分方法，解决热点 (Hot spot) 问题</p>
</blockquote>
<p>案例：</p>
<ul>
<li>服务器 A 承压 50%</li>
<li> 服务器 B 承压 30%</li>
<li> 服务器 C 承压 20%</li>
</ul>
<p>如图，用户按 Hash (Key) 顺时针访问不同服务器。</p>
<ul>
<li><p>若服务器 B 挂掉，则</p>
<ul>
<li><p>服务器 B 承压 30% * 5/7 -&gt; 交付服务器 A</p></li>
<li><p> 服务器 B 承压 30% * 2/7 -&gt; 交付服务器 C</p></li>
</ul></li>
</ul>
<figure>
<img data-src="https://image.alessa0.cn/150046.png" alt="一致性Hash"><figcaption aria-hidden="true"> 一致性 Hash</figcaption>
</figure>
<h1 id="mapreduce">MapReduce</h1>
<blockquote>
<p>用于处理海量数据的<strong>分布式</strong>计算框架</p>
</blockquote>
<h2 id="前提分布式存储架构">前提：分布式存储架构</h2>
<p>角色：</p>
<ul>
<li>Master</li>
<li>Slave</li>
<li>Client</li>
</ul>
<figure>
<img data-src="https://image.alessa0.cn/062837.png" alt="GFS存储"><figcaption aria-hidden="true">GFS 存储</figcaption>
</figure>
<h2 id="mapreduce基本思想">MapReduce 基本思想</h2>
<blockquote>
<p>分而治之</p>
<blockquote>
<p>分解 &gt;&gt; 求解 &gt;&gt; 合并</p>
</blockquote>
</blockquote>
<p>案例 Demo：分面值数钞票</p>
<ul>
<li>方式 1: 单点策略
<ul>
<li>一个人数出所有的钞票，数出各面值各有多少张</li>
</ul></li>
<li>方式 2: 分治策略
<ul>
<li>每个人分得一部分钞票，数出各面值有多少张</li>
<li>汇总，每个人负责统计一种面值</li>
</ul></li>
</ul>
<h2 id="mapreduce计算流程">MapReduce 计算流程</h2>
<h3 id="步骤">步骤</h3>
<ol type="1">
<li>将数据输入到 HDFS 上</li>
<li>对输入数据进行处理</li>
<li>对处理的数据进行切片</li>
<li>根据就近原则，对切片数据进行对应节点的 Map 操作，结果暂存在内存缓冲区</li>
<li>当缓冲区数据大小到达阈值时
<ol type="1">
<li>锁住缓冲区</li>
<li>对切片结果按 partition 和 key 进行排序<strong>【默认快速排序，第一关键字为分区号，第二关键字为 key】</strong>，写入磁盘</li>
<li>将磁盘上的切片结果进行归并排序 {partition, key, value}</li>
</ol></li>
<li> 将 Map 结果按 partition 传输到对应 Reduce 节点</li>
<li> Reduce 节点将不同 Map 节点传输的数据按 partition 分区信息合并，进行 Reduce 操作</li>
<li>结果处理后输出到 HDFS</li>
</ol>
<h3 id="详解">详解</h3>
<ul>
<li>File
<ul>
<li>文件存储在 HDFS 中，每个文件切分成多个一定大小（默认 64M）的 Block，存储在多个 DataNode 节点上（默认 3 备份）</li>
<li>TextFile（明文标准输出）
<ul>
<li><code>hadoop fs -cat /xxx</code> 查看</li>
</ul></li>
<li> SequenceFile（二进制输出）
<ul>
<li><code>hadoop fs -text /xxx</code> 查看</li>
</ul></li>
</ul></li>
<li> InputFormat
<ul>
<li>MR 框架基础类之一（Java 接口）
<ul>
<li>数据分割（Data Splits）
<ul>
<li>每个 Split 包含后一个 Block 的开头部分的数据（解决记录跨 Block 问题）</li>
<li>如记录跨跃存储在两个 Block 中，这条记录属于前一个 Block 对应的 Split</li>
</ul></li>
<li> 记录读取器（Record Reader）
<ul>
<li>将读取到 Split 导入 Map</li>
<li> 每读取一条记录，将记录作为参数，调用一次 Map 函数</li>
<li>继续这个过程，读取下一条记录直到 Split 尾部</li>
</ul></li>
</ul></li>
</ul></li>
<li> Map</li>
<li>Shuffle
<ul>
<li>Partition， Sort， Spill， Merge， Combiner， Copy， Memory， Disk……</li>
<li><strong> 性能优化的重点</strong>
<ul>
<li> Partition
<ul>
<li>决定数据由哪个 Reducer 处理，从而分区（如 Hash 法）</li>
</ul></li>
<li>MemoryBuffer
<ul>
<li>内存缓冲区，每个 Map 的结果和 Partition 处理的 Key Value 结果都保存在缓存中</li>
<li>缓冲区大小：默认 100M</li>
<li> 溢写阈值：100M * 0.8 = 80M</li>
<li> 缓冲区中的数据：{partition, key, value} 三元组</li>
</ul></li>
<li> Spill
<ul>
<li>内存缓冲区达到阈值时，溢写 Spill 线程锁住这 80M 的缓冲区，开始将数据写到本地磁盘中，然后释放内存</li>
<li>每次溢写都生成一个数据文件</li>
<li>溢出的数据到磁盘前会对数据进行 Key 排序 Sort，以及合并 Combiner</li>
<li> 发送相同 Reduce 的 Key 数量，会拼接到一起，减少 Partition 的索引数量
<ul>
<li>Sort
<ul>
<li>缓冲区数据按照 Key 进行排序</li>
</ul></li>
<li> Combiner
<ul>
<li>数据合并，相同 Key 的数据，Value 值合并，减少输出传输量</li>
<li> Combiner 函数事实上是 Reducer 函数，满足 <strong>Combiner 处理不影响 {sum, max 等} 最终 Reduce 等结果时</strong>，可以极大提升性能</li>
</ul></li>
</ul></li>
</ul></li>
</ul></li>
</ul></li>
<li> Reduce
<ul>
<li>多个 Reduce 任务输入的数据都属于不同的 Partition，因此结果数据的 Key 不重复</li>
<li>合并 Reduce 输出文件即可得到最终的结果</li>
</ul></li>
</ul>
<h3 id="配置注意事项">配置注意事项</h3>
<ul>
<li>文件句柄个数
<ul>
<li>ulimit 命令</li>
<li>报错 “当前打开文件超出最大个数” 时使用</li>
</ul></li>
<li>合适的 slot
<ul>
<li>单机 map、reduce 个数【相互隔离】</li>
<li><code>mapred.tasktracker.map.tasks.maximum</code> 配置 Map 的 slot 数（默认 2）</li>
<li><code>mapreduce.tasktracker.tasks.reduce.maximum</code> 配置 Reduce 的 slot 数（默认 2）</li>
<li>内存限制</li>
<li> Slot 数 = CPU 核数 - 1</li>
<li> 多机集群分离</li>
</ul></li>
<li>磁盘情况
<ul>
<li>适合单机多磁盘（Raid 阵列）</li>
<li><code>mapred.local.dir</code>Map 中间结果存储路径</li>
<li><code>dfs.data.dir</code>HDFS 数据存储路径</li>
</ul></li>
<li>配置加载
<ul>
<li>简单配置通过提交作业时 - file 分发</li>
<li>复杂较大配置
<ul>
<li>传入 HDFS</li>
<li>Map 中打开文件读取</li>
<li>建立内存结构</li>
</ul></li>
</ul></li>
<li>确定 Map 任务数依次优先参考如下几个原则
<ul>
<li>每个 Map 任务使用的内存不超过 800M， 尽量在 500M 以下</li>
<li>每个 Map 任务运行时间控制在大约 20 分钟，最好 1-3 分钟</li>
<li>每个 Map 任务处理的最大数据量为一个 HDFS 块大小，一个 Map 任务处理的输入不能跨文件</li>
<li> Map 任务总数不能超过平台可用的任务槽位</li>
</ul></li>
<li> Map 要点
<ul>
<li>Map 个数为 Split 份数</li>
<li>压缩文件不可切分【通常压缩文件用于控制 Map 个数】</li>
<li>非压缩文件和 Sequence 文件可以切分</li>
<li><code>dfs.block.size</code> 决定 block 大小</li>
</ul></li>
<li>确定 Reduce 任务数依次优先参考如下几个原则
<ul>
<li>每个 Reduce 任务使用的内存不超过 800M， 尽量在 500M 以下</li>
<li>每个 Reduce 任务运行时间控制在大约 20 分钟，最好 1-3 分钟</li>
<li>整个 Reduce 阶段的输入数据总量</li>
<li>每个 Reduce 任务处理的数据量控制在 500M 以内</li>
<li> Map 任务数与 Reduce 任务数乘积</li>
<li>输出数据要求</li>
</ul></li>
<li> Reduce 个数设置
<ul>
<li><code>mapred.reduce.tasks</code> 默认为 1</li>
<li>Reduce 个数太少
<ul>
<li>单次执行慢</li>
<li>出错再试成本高</li>
</ul></li>
<li> Reduce 个数太大
<ul>
<li>Shuffle 开销大</li>
<li>输出大量小文件</li>
</ul></li>
</ul></li>
</ul>
<figure>
<img data-src="https://image.alessa0.cn/071824.png" alt="MapReduce"><figcaption aria-hidden="true"> MapReduce</figcaption>
</figure>
<h2 id="mapreduce重要进程hdfs1.0">MapReduce 重要进程（HDFS1.0）</h2>
<ul>
<li><strong>JobTracker</strong>
<ul>
<li> 主进程，负责接收客户作业提交，调度任务到作业节点上运行，并提供诸如监控工作节点状态及任务进度等管理功能，1 个 MapReduce 集群有 1 个 JobTracker，一般运行在可靠的硬件上</li>
<li> TaskTracker 是通过周期性的心跳来通知 JobTracker 其当前的健康状态，每一次心跳包含了可用的 map 和 reduce 任务数目，占用的数目及运行中任务的详细信息。JobTracker 利用一个<strong>线程池</strong>来<strong>同时</strong>处理心跳和客户请求。</li>
<li>等待 JobClient 提交作业</li>
</ul></li>
<li><strong> TaskTracker</strong>
<ul>
<li> 由 JobTracker 指派任务，实例化用户程序，在本地执行任务并周期性地向 JobTracker 汇报状态。在每一个工作节点上永远只会有 <strong>1 个</strong> TaskTracker。</li>
<li>每 3s 主动向 JobTracker 发送心跳询问有没有任务，如果有，让其派发任务给它执行</li>
</ul></li>
</ul>
<p>MapReduce 采用<strong>多进程</strong>并发</p>
<ul>
<li>优点：
<ul>
<li>方便任务资源控制和调配</li>
<li>运行稳定</li>
</ul></li>
<li>缺点：
<ul>
<li>消耗更多的启动时间【不适合低延时作业】</li>
</ul></li>
</ul>
<h2 id="mapreduce作业提交流程">MapReduce 作业提交流程</h2>
<ol type="1">
<li>客户端 Client 提交作业请求</li>
<li> Master 的 JobTracker 接收请求分配 Job ID</li>
<li> 客户端在 HDFS 对应 Job ID 目录上传资源</li>
<li> Client 向 JobTracker 正式提交任务</li>
<li> JobTracker 对任务进行初始化</li>
<li> JobTracker 将 HDFS 对应 Job ID 目录文件分发到各个 TaskTracker 节点</li>
<li> TaskTracker 向 JobTracker 发送心跳</li>
<li> TaskTracker 向 HDFS 分发 Job 资源</li>
<li> TaskTracker 执行任务</li>
</ol>
<h2 id="mapreduce作业调度">MapReduce 作业调度</h2>
<ul>
<li>默认<strong>先进先出（FIFO）</strong>队列调度模式
<ul>
<li>优先级：very_high, high, normal, low, very low</li>
</ul></li>
</ul>
<h2 id="streaming">Streaming</h2>
<blockquote>
<p>MapReduce 和 HDFS 采用 Java 实现，默认提供 Java 编程接口</p>
<p>Streaming 框架允许任何程序语言实现的程序在 Hadoop MapReduce 中使用</p>
<p>Streaming 方便已有程序向 Hadoop 平台移植</p>
</blockquote>
<h3 id="优点">优点</h3>
<ul>
<li>开发效率高
<ul>
<li>方便移植 Hadoop 平台，仅需按照一定的格式从标准输入读取数据，向标准输出写数据</li>
<li>原有单机程序稍加改动即可在 Hadoop 平台进行分布式处理</li>
<li>容易单机调试
<ul>
<li><code>cat input | mapper | sort | reducer &gt; output</code></li>
</ul></li>
</ul></li>
<li>便于平台进行资源控制
<ul>
<li>Streaming 框架中通过 limit 等方式可以灵活地限制应用程序使用的内存等资源</li>
</ul></li>
</ul>
<h3 id="缺点">缺点</h3>
<ul>
<li>Streaming 默认仅能处理文本数据，如要对二进制数据进行处理，比较好的方法是将二进制的 key 和 value 进行 base64 的编码转换成文本</li>
<li>两次数据拷贝和解析（分割），带来一定开销</li>
</ul>
<h3 id="命令行要点">命令行要点</h3>
<ul>
<li>input
<ul>
<li>指定作业的输入文件 HDFS 路径，支持使用 * 通配符，支持指定多个文件或目录，可多次使用</li>
</ul></li>
<li> output
<ul>
<li>指定作业的输出文件 HDFS 路径，路径必须不存在，并且执行作业用户需要具备创建该目录的权限，只能使用一次</li>
</ul></li>
<li> mapper
<ul>
<li>用户自己写的 Map 程序</li>
</ul></li>
<li> reducer
<ul>
<li>用户自己写的 Reduce 程序</li>
</ul></li>
<li> file
<ul>
<li>打包本地文件到提交的 Job 中
<ul>
<li>map 和 reduce 的执行文件</li>
<li> map 和 reduce 要用输入的文件，如配置文件</li>
</ul></li>
<li>类似的配置还有
<ul>
<li>cacheFile 提交 HDFS 文件到提交的 Job 中</li>
<li> cacheArchive 提交 HDFS 压缩文件到提交的 Job 中</li>
</ul></li>
</ul></li>
<li> jobconf
<ul>
<li>提交作业的一些配置属性</li>
<li>常见配置
<ul>
<li><code>mapred.map.tasks</code>map task 数目</li>
<li><code>mapred.reduce.tasks</code>reduce task 数目</li>
<li><code>stream.num.map.output.key.field</code> 指定 map task 输出记录中 key 所占的域数目</li>
<li><code>num.key.dields.for.partition</code> 指定对 key 分出来的前几部分做 partition 而不是整个 key</li>
</ul></li>
</ul></li>
</ul>
<h1 id="hdfs1.0">HDFS1.0</h1>
<h2 id="hdfs1.0基础">HDFS1.0 基础</h2>
<ul>
<li>HDFS1.0 系统架构
<ul>
<li>Master
<ul>
<li>NameNode
<ul>
<li>管理着文件系统命名空间
<ul>
<li>维护着文件系统树及树中的所有文件和目录</li>
</ul></li>
<li>存储元数据
<ul>
<li>NameNode 保存元信息的种类
<ul>
<li>文件名目录名及它们之间的层级关系</li>
<li>文件目录的所有者及其权限</li>
<li>每个文件块的名及文件有哪些块组成</li>
</ul></li>
</ul></li>
<li><strong>元数据保存在内存中</strong>
<ul>
<li> NameNode 元信息并不包含每个块的位置信息</li>
</ul></li>
<li>保存文件 / Block/DataNode 之间的<strong>映射</strong>关系
<ul>
<li>文件名 -&gt; Block</li>
<li>Block -&gt; DataNode</li>
</ul></li>
<li> 运行 NameNode 会占用大量内存和 I/O 资源，一般 NameNode 不会存储用户数据或执行 MapReduce 任务</li>
<li>全 Hadoop 系统仅一个 NameNode
<ul>
<li>单点问题
<ul>
<li>方案 1：将 Hadoop 元数据写入到本地文件系统时同步到远程挂载的网络文件系统 NFS</li>
<li> 方案 2：运行 SecondaryNameNode 进程，持久化到磁盘</li>
</ul></li>
</ul></li>
</ul></li>
<li> SecondaryNameNode
<ul>
<li><strong>并不是 NameNode</strong>，不取代 NameNode 也不是 NameNode 的备份</li>
<li>作用是与 NameNode 交互，定期通过编辑日志文件合并命名空间镜像</li>
<li>当 NameNode 发生故障，NameNode 会通过自己合并的命名空间镜像副本来恢复数据</li>
<li> SecondaryNameNode 保存的 NameNode 元信息总是<strong>滞后于 NameNode</strong> 的，会导致部分数据丢失</li>
</ul></li>
</ul></li>
<li> Worker
<ul>
<li>DataNode
<ul>
<li>保存 Block -&gt; Path 的映射关系</li>
<li>负责存储数据块，负责为系统客户端提供数据块的读写服务</li>
<li>根据 NameNode 的指示进行创建 / 删除和复制等操作</li>
<li>心跳机制，定期报告文件块列表信息</li>
<li> DataNode 间通信，进行块的副本处理
<ul>
<li>数据块
<ul>
<li>HDFS 默认数据块大小为 64M</li>
<li> 磁盘块一般为 512B</li>
<li> 块增大可以减少寻址时间，降低寻址时间 / 文件传输时间</li>
<li>数据块过大导致整体任务量过小，降低作业处理速度</li>
</ul></li>
</ul></li>
</ul></li>
</ul></li>
</ul></li>
<li> Hadoop 更倾向存储大文件
<ul>
<li>一般来说，一条元信息记录会占用 200byte 内存空间。</li>
<li>假设块大小为 64M，备份数量是 3，那么一个 1G 大小的文件将占用 16 * 3 = 48 个文件块</li>
<li>如现在有 1000 个 1M 大小的文件，则会占用 1000 * 3 = 3000 个文件块（多个文件不能放到一个块中）</li>
<li>如果文件越小，存储同等大小的文件所需要的元信息就越多</li>
</ul></li>
<li>元信息持久化
<ul>
<li>在 NameNode 中存放元信息的文件是 fsimage</li>
<li> 在系统运行期间所有对元信息的操作都保存在内存中并被持久化到另一个文件 edits 中</li>
<li> fsimage 文件与 edits 文件会被 SecondaryNameNode 进程周期性合并</li>
</ul></li>
</ul>
<figure>
<img data-src="https://image.alessa0.cn/141922.png" alt="SecondaryNameNode"><figcaption aria-hidden="true"> SecondaryNameNode</figcaption>
</figure>
<h2 id="机架感知策略">机架感知策略</h2>
<blockquote>
<p>默认 3 副本</p>
</blockquote>
<ul>
<li>第一个副本，放在与客户端相同的节点（如客户端是集群外的一台机器，就随机算节点，但是系统会避免挑选太满或太忙的节点）</li>
<li>第二个副本，放在不同机架（随机选择）的节点</li>
<li>第三个副本，放在与第二个副本同机架但是不同节点上</li>
<li> distance
<ul>
<li>distance = 0, 相同 DataNode</li>
<li>distance = 2, 相同 Rack 下的不同 DataNode</li>
<li>distance = 4, 相同 IDC 下的不同 DataNode</li>
<li>distance = 6, 不同 IDC 下的 DataNode</li>
</ul></li>
</ul>
<h2 id="数据完整性校验">数据完整性校验</h2>
<ul>
<li><p>不希望在存储和处理数据时丢失或损坏任何数据</p></li>
<li><p> HDFS 会对写入的数据计算校验和，并在读取时验证校验和</p></li>
<li><p>两种校验方法</p>
<ul>
<li>校验和
<ul>
<li>检测损坏数据的常用方法时在第一次写入系统时计算数据的校验和，在通道传输过程中，如果新生成的校验和不完全匹配原始的校验和，那么数据就会被认定为是被损坏的（<strong>默认 512 字节创建 1 个校验码</strong>）</li>
</ul></li>
<li>数据块检测程序 DataBlockScanner
<ul>
<li>在 DataNode 节点上开启一个后台进程，来定期验证存储在它上的所有块，这个是防止物理介质出现损减情况而造成的数据损坏（损坏数据从其他 DataNode 拷贝）</li>
</ul></li>
</ul></li>
</ul>
<h2 id="可靠性措施">可靠性措施</h2>
<ul>
<li>一个名字节点和多个数据节点</li>
<li>数据复制（冗余机制）
<ul>
<li>存放位置（机架感知策略）</li>
<li>并不是 3 副本写完才返回 ack，三副本中有 1 个写成功就返回 ack</li>
</ul></li>
<li> 故障检测
<ul>
<li>数据节点
<ul>
<li>心跳包（检测是否宕机）</li>
<li>块报告（安全模式下检测）</li>
<li>数据完整性检测（校验和比较）</li>
</ul></li>
<li>名字节点
<ul>
<li>日志文件</li>
<li>镜像文件</li>
</ul></li>
</ul></li>
<li>空间回收机制
<ul>
<li>Trash 目录（修改 core-site.xml）</li>
</ul></li>
</ul>
<h2 id="hdfsmapreduce本地模式">HDFS&amp;MapReduce 本地模式</h2>
<ul>
<li>Master（小集群）
<ul>
<li>NameNode</li>
<li>JobTracker</li>
</ul></li>
<li>Slave
<ul>
<li>DataNode</li>
<li>TaskTracker</li>
</ul></li>
</ul>
<h1 id="案例代码">案例代码</h1>
<blockquote>
<p>常见实践有：</p>
<blockquote>
<p>数据统计</p>
<blockquote>
<p>WordCount</p>
</blockquote>
<p>数据过滤（清洗）</p>
<blockquote>
<p>从日志查找某一个条件等数据</p>
<p>除去非法数据，保留合法数据</p>
<p>数据格式整理</p>
</blockquote>
<p>同类汇聚</p>
<blockquote>
<p>多份日志，相同时间点、用户行为日志 Join</p>
<p>类表格文件存储中，相同主键拼接相关属性</p>
<p>历史的主数据与新增，修改数据合并</p>
</blockquote>
<p>全局排序</p>
<blockquote>
<p>混合日志，按时间排列好顺序</p>
<p>按某个或多个字段有序</p>
</blockquote>
<p>容错框架</p>
<blockquote>
<p>测试集群状态：在集群上运行一个错误代码 Job，进行观察</p>
<p>使用易出错的服务，365 * 24 运行</p>
<p>计算规模经常变化调整的服务</p>
<p>单进程程序，迅速提升执行计算效率</p>
</blockquote>
</blockquote>
</blockquote>
<h2 id="wordcount">WordCount</h2>
<h3 id="python3">Python3</h3>
<h4 id="map.py">map.py</h4>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> sys.stdin:</span><br><span class="line">    ss = line.strip().split(<span class="string">' '</span>)</span><br><span class="line">    <span class="keyword">for</span> word <span class="keyword">in</span> ss:</span><br><span class="line">        <span class="built_in">print</span>(word.strip() + <span class="string">'\t'</span> + <span class="string">'1'</span>)</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>
<h4 id="reduce.py">reduce.py</h4>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">current_word = <span class="literal">None</span></span><br><span class="line">cnt_sum = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> sys.stdin:</span><br><span class="line">    ss = line.strip().split(<span class="string">'\t'</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(ss) != <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    word, cnt = ss</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> current_word <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        current_word = word</span><br><span class="line">    <span class="keyword">if</span> current_word != word:</span><br><span class="line">        <span class="built_in">print</span>(current_word.strip() + <span class="string">'\t'</span> + <span class="built_in">str</span>(cnt_sum))</span><br><span class="line">        current_word = word</span><br><span class="line">        cnt_sum = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    cnt_sum += <span class="built_in">int</span>(cnt)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(current_word.strip() + <span class="string">'\t'</span> + <span class="built_in">str</span>(cnt_sum))</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>
<h4 id="the_man_of_property.txt">The_Man_of_Property.txt</h4>
<figure class="highlight pgsql"><table><tbody><tr><td class="code"><pre><span class="line">“The Forsyte Saga” was the title originally destined <span class="keyword">for</span> that part <span class="keyword">of</span> it which <span class="keyword">is</span> <span class="keyword">called</span> “The Man <span class="keyword">of</span> Property”; <span class="keyword">and</span> <span class="keyword">to</span> adopt it <span class="keyword">for</span> the collected chronicles <span class="keyword">of</span> the Forsyte <span class="keyword">family</span> has indulged the Forsytean tenacity that <span class="keyword">is</span> <span class="keyword">in</span> <span class="keyword">all</span> <span class="keyword">of</span> us. The word Saga might be objected <span class="keyword">to</span> <span class="keyword">on</span> the ground that it connotes the heroic <span class="keyword">and</span> that there <span class="keyword">is</span> little heroism <span class="keyword">in</span> these pages. But it <span class="keyword">is</span> used <span class="keyword">with</span> a suitable irony; <span class="keyword">and</span>, <span class="keyword">after</span> <span class="keyword">all</span>, this long tale, though it may deal <span class="keyword">with</span> folk <span class="keyword">in</span> frock coats, furbelows, <span class="keyword">and</span> a gilt-edged period, <span class="keyword">is</span> <span class="keyword">not</span> devoid <span class="keyword">of</span> the essential heat <span class="keyword">of</span> <span class="keyword">conflict</span>. Discounting <span class="keyword">for</span> the gigantic stature <span class="keyword">and</span> blood-thirstiness <span class="keyword">of</span> <span class="built_in">old</span> days, <span class="keyword">as</span> they have come down <span class="keyword">to</span> us <span class="keyword">in</span> fairy-tale <span class="keyword">and</span> legend, the folk <span class="keyword">of</span> the <span class="built_in">old</span> Sagas were Forsytes, assuredly, <span class="keyword">in</span> their possessive instincts, <span class="keyword">and</span> <span class="keyword">as</span> little proof against the inroads <span class="keyword">of</span> beauty <span class="keyword">and</span> passion <span class="keyword">as</span> Swithin, Soames, <span class="keyword">or</span> even Young Jolyon. <span class="keyword">And</span> <span class="keyword">if</span> heroic figures, <span class="keyword">in</span> days that never were, seem <span class="keyword">to</span> startle <span class="keyword">out</span> <span class="keyword">from</span> their surroundings <span class="keyword">in</span> fashion unbecoming <span class="keyword">to</span> a Forsyte <span class="keyword">of</span> the Victorian era, we may be sure that tribal instinct was even <span class="keyword">then</span> the prime force, <span class="keyword">and</span> that “<span class="keyword">family</span>” <span class="keyword">and</span> the sense <span class="keyword">of</span> home <span class="keyword">and</span> property counted <span class="keyword">as</span> they <span class="keyword">do</span> <span class="keyword">to</span> this day, <span class="keyword">for</span> <span class="keyword">all</span> the recent efforts <span class="keyword">to</span> “talk them <span class="keyword">out</span>.”</span><br></pre></td></tr></tbody></table></figure>
<h4 id="run.sh">run.sh</h4>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># hadoop命令地址</span></span><br><span class="line">HADOOP_CMD=<span class="string">"/usr/local/src/hadoop-2.8.5/bin/hadoop"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># hadoop streaming jar包地址</span></span><br><span class="line">STREAM_JAR_PATH=<span class="string">"/usr/local/src/hadoop-2.8.5/share/hadoop/tools/lib/hadoop-streaming-2.8.5.jar"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># HDFS 输入文件路径</span></span><br><span class="line">INPUT_FILE_PATH=<span class="string">"/week01/01_mr_wordcount/The_Man_of_Property.txt"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># HDFS 输出文件路径</span></span><br><span class="line">OUTPUT_PATH=<span class="string">"/week01/01_mr_wordcount/output/python3"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 输入文件本地路径</span></span><br><span class="line">LOCAL_FILE_PATH=<span class="string">"/mnt/hgfs/Code/week01/01_mr_wordcount/The_Man_of_Property.txt"</span></span><br><span class="line"><span class="comment"># 输入文件 HDFS上传路径</span></span><br><span class="line">UPLOAD_PATH=<span class="string">"/week01/01_mr_wordcount"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除HDFS存在目录</span></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> fs -rm -r -skipTrash <span class="variable">${INPUT_FILE_PATH}</span></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> fs -rm -r -skipTrash <span class="variable">${OUTPUT_PATH}</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建HDFS 上传目录</span></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> fs -mkdir -p <span class="variable">${UPLOAD_PATH}</span></span><br><span class="line"><span class="comment"># 将本地输入文件上传到HDFS目录</span></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> fs -put <span class="variable">${LOCAL_FILE_PATH}</span> <span class="variable">${UPLOAD_PATH}</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 命令行</span></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> jar <span class="variable">${STREAM_JAR_PATH}</span> \</span><br><span class="line">    -files map.py,red.py \</span><br><span class="line">    -input <span class="variable">${INPUT_FILE_PATH}</span> \</span><br><span class="line">    -output <span class="variable">${OUTPUT_PATH}</span> \</span><br><span class="line">    -mapper <span class="string">"python map.py"</span> \</span><br><span class="line">    -reducer <span class="string">"python red.py"</span> \</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># -file 过时了，2.8.5用-files代替，作为可选参数需放在-input等参数前面</span></span><br><span class="line"> </span><br></pre></td></tr></tbody></table></figure>
<h2 id="allsort_1reduce">AllSort_1Reduce</h2>
<h3 id="version-1">Version 1</h3>
<h4 id="python3-1">Python3</h4>
<h5 id="map_sort.py">map_sort.py</h5>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">base_count = <span class="number">10000</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> sys.stdin:</span><br><span class="line">    ss = line.strip().split(<span class="string">'\t'</span>)</span><br><span class="line">    key, val = ss</span><br><span class="line"></span><br><span class="line">    new_key = base_count + <span class="built_in">int</span>(key)</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">str</span>(new_key) + <span class="string">'\t'</span> + val)</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>
<h5 id="red_sort.py">red_sort.py</h5>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">base_count = <span class="number">10000</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> sys.stdin:</span><br><span class="line">    new_key, val = line.strip().split(<span class="string">'\t'</span>)</span><br><span class="line"></span><br><span class="line">    key = <span class="built_in">int</span>(new_key) - base_count</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'%s\t%s'</span> % (key, val))</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>
<h5 id="a.txt">a.txt</h5>
<figure class="highlight"><table><tbody><tr><td class="code"><pre><span class="line">1	hadoop</span><br><span class="line">3	hadoop</span><br><span class="line">5	hadoop</span><br><span class="line">7	hadoop</span><br><span class="line">9	hadoop</span><br></pre></td></tr></tbody></table></figure>
<h5 id="b.txt">b.txt</h5>
<figure class="highlight mipsasm"><table><tbody><tr><td class="code"><pre><span class="line"><span class="number">0</span>	<span class="keyword">java</span></span><br><span class="line"><span class="keyword"></span><span class="number">2</span>	<span class="keyword">java</span></span><br><span class="line"><span class="keyword"></span><span class="number">4</span>	<span class="keyword">java</span></span><br><span class="line"><span class="keyword"></span><span class="number">6</span>	<span class="keyword">java</span></span><br><span class="line"><span class="keyword"></span><span class="number">8</span>	<span class="keyword">java</span></span><br></pre></td></tr></tbody></table></figure>
<h5 id="run.sh-1">run.sh</h5>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env bash</span></span><br><span class="line"></span><br><span class="line">HADOOP_CMD=<span class="string">"/usr/local/src/hadoop-2.8.5/bin/hadoop"</span></span><br><span class="line">STREAM_JAR_PATH=<span class="string">"/usr/local/src/hadoop-2.8.5/share/hadoop/tools/lib/hadoop-streaming-2.8.5.jar"</span></span><br><span class="line"></span><br><span class="line">INPUT_FILE_PATH_A=<span class="string">"/week01/02_mr_allsort_1reduce/a.txt"</span></span><br><span class="line">INPUT_FILE_PATH_B=<span class="string">"/week01/02_mr_allsort_1reduce/b.txt"</span></span><br><span class="line"></span><br><span class="line">OUTPUT_PATH=<span class="string">"/week01/02_mr_allsort_1reduce/version1/output/python3"</span></span><br><span class="line"></span><br><span class="line">LOCAL_FILE_PATH_A=<span class="string">"/mnt/hgfs/Code/week01/02_mr_allsort_1reduce/a.txt"</span></span><br><span class="line">LOCAL_FILE_PATH_B=<span class="string">"/mnt/hgfs/Code/week01/02_mr_allsort_1reduce/b.txt"</span></span><br><span class="line">UPLOAD_PATH=<span class="string">"/week01/02_mr_allsort_1reduce/"</span></span><br><span class="line"></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> fs -rm -r -skipTrash <span class="variable">${INPUT_FILE_PATH_A}</span></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> fs -rm -r -skipTrash <span class="variable">${INPUT_FILE_PATH_B}</span></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> fs -rm -r -skipTrash <span class="variable">${OUTPUT_PATH}</span></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> fs -mkdir -p <span class="variable">${UPLOAD_PATH}</span></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> fs -put <span class="variable">${LOCAL_FILE_PATH_A}</span> <span class="variable">${LOCAL_FILE_PATH_B}</span> <span class="variable">${UPLOAD_PATH}</span></span><br><span class="line"></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> jar <span class="variable">${STREAM_JAR_PATH}</span> \</span><br><span class="line">    -D mapreduce.job.reduces=1 \</span><br><span class="line">    -files map_sort.py,red_sort.py \</span><br><span class="line">    -input <span class="variable">${INPUT_FILE_PATH_A}</span>,<span class="variable">${INPUT_FILE_PATH_B}</span> \</span><br><span class="line">    -output <span class="variable">${OUTPUT_PATH}</span> \</span><br><span class="line">    -mapper <span class="string">"python map_sort.py"</span> \</span><br><span class="line">    -reducer <span class="string">"python red_sort.py"</span> \</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 依赖MapReduce框架自身的sort功能：</span></span><br><span class="line">    <span class="comment"># -D mapreduce.job.reduces=1</span></span><br><span class="line">    <span class="comment"># -jobconf 可用-D 替代，作为可选参数放在-input等前面</span></span><br><span class="line">    </span><br></pre></td></tr></tbody></table></figure>
<h3 id="version-2">Version 2</h3>
<h4 id="python3-2">Python3</h4>
<h5 id="map_sort.py-1">map_sort.py</h5>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> sys.stdin:</span><br><span class="line">    <span class="built_in">print</span>(line.strip())</span><br><span class="line">    </span><br></pre></td></tr></tbody></table></figure>
<h5 id="red_sort.py-1">red_sort.py</h5>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> sys.stdin:</span><br><span class="line">    <span class="built_in">print</span>(line.strip())</span><br><span class="line">    </span><br></pre></td></tr></tbody></table></figure>
<h5 id="a.txt-1">a.txt</h5>
<figure class="highlight"><table><tbody><tr><td class="code"><pre><span class="line">1	hadoop</span><br><span class="line">3	hadoop</span><br><span class="line">5	hadoop</span><br><span class="line">7	hadoop</span><br><span class="line">9	hadoop</span><br></pre></td></tr></tbody></table></figure>
<h5 id="b.txt-1">b.txt</h5>
<figure class="highlight mipsasm"><table><tbody><tr><td class="code"><pre><span class="line"><span class="number">0</span>	<span class="keyword">java</span></span><br><span class="line"><span class="keyword"></span><span class="number">2</span>	<span class="keyword">java</span></span><br><span class="line"><span class="keyword"></span><span class="number">4</span>	<span class="keyword">java</span></span><br><span class="line"><span class="keyword"></span><span class="number">6</span>	<span class="keyword">java</span></span><br><span class="line"><span class="keyword"></span><span class="number">8</span>	<span class="keyword">java</span></span><br></pre></td></tr></tbody></table></figure>
<h5 id="run.sh-2">run.sh</h5>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env bash</span></span><br><span class="line"></span><br><span class="line">HADOOP_CMD=<span class="string">"/usr/local/src/hadoop-2.8.5/bin/hadoop"</span></span><br><span class="line">STREAM_JAR_PATH=<span class="string">"/usr/local/src/hadoop-2.8.5/share/hadoop/tools/lib/hadoop-streaming-2.8.5.jar"</span></span><br><span class="line"></span><br><span class="line">INPUT_FILE_PATH_A=<span class="string">"/week01/02_mr_allsort_1reduce/a.txt"</span></span><br><span class="line">INPUT_FILE_PATH_B=<span class="string">"/week01/02_mr_allsort_1reduce/b.txt"</span></span><br><span class="line"></span><br><span class="line">OUTPUT_PATH=<span class="string">"/week01/02_mr_allsort_1reduce/version2/output/python3"</span></span><br><span class="line"></span><br><span class="line">LOCAL_FILE_PATH_A=<span class="string">"/mnt/hgfs/Code/week01/02_mr_allsort_1reduce/a.txt"</span></span><br><span class="line">LOCAL_FILE_PATH_B=<span class="string">"/mnt/hgfs/Code/week01/02_mr_allsort_1reduce/b.txt"</span></span><br><span class="line">UPLOAD_PATH=<span class="string">"/week01/02_mr_allsort_1reduce/"</span></span><br><span class="line"></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> fs -rm -r -skipTrash <span class="variable">${INPUT_FILE_PATH_A}</span></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> fs -rm -r -skipTrash <span class="variable">${INPUT_FILE_PATH_B}</span></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> fs -rm -r -skipTrash <span class="variable">${OUTPUT_PATH}</span></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> fs -mkdir -p <span class="variable">${UPLOAD_PATH}</span></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> fs -put <span class="variable">${LOCAL_FILE_PATH_A}</span> <span class="variable">${LOCAL_FILE_PATH_B}</span> <span class="variable">${UPLOAD_PATH}</span></span><br><span class="line"></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> jar <span class="variable">${STREAM_JAR_PATH}</span> \</span><br><span class="line">    -D mapreduce.job.output.key.comparator.class=org.apache.hadoop.mapred.lib.KeyFieldBasedComparator \</span><br><span class="line">    -D stream.num.map.output.key.fields=1 \</span><br><span class="line">    -D mapreduce.partition.keypartitioner.options=<span class="string">"-k1,1"</span> \</span><br><span class="line">    -D mapreduce.partition.keycomparator.options=<span class="string">"-k1,1n"</span> \</span><br><span class="line">    -D mapreduce.job.reduces=1 \</span><br><span class="line">    -files map_sort.py,red_sort.py \</span><br><span class="line">    -input <span class="variable">${INPUT_FILE_PATH_A}</span>,<span class="variable">${INPUT_FILE_PATH_B}</span> \</span><br><span class="line">    -output <span class="variable">${OUTPUT_PATH}</span> \</span><br><span class="line">    -mapper <span class="string">"python map_sort.py"</span> \</span><br><span class="line">    -reducer <span class="string">"python red_sort.py"</span> \</span><br><span class="line">    -partitioner org.apache.hadoop.mapred.lib.KeyFieldBasedPartitioner \</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 设置单reduce：</span></span><br><span class="line">    <span class="comment"># -D mapreduce.job.reduces=1 \</span></span><br><span class="line">    <span class="comment"># 控制分发，完成二次排序：</span></span><br><span class="line">    <span class="comment"># -partitioner org.apache.hadoop.mapred.lib.KeyFieldBasedPartitioner \</span></span><br><span class="line">    <span class="comment"># 完成key排序：</span></span><br><span class="line">    <span class="comment"># -D mapreduce.job.output.key.comparator.class=org.apache.hadoop.mapred.lib.KeyFieldBasedComparator \</span></span><br><span class="line">    <span class="comment"># 设置分隔符位置（默认\t）,分隔符之前为key，之后为value</span></span><br><span class="line">    <span class="comment"># -D stream.num.map.output.key.fields=1 \</span></span><br><span class="line">    <span class="comment"># 选择哪一部分做partition，-k1,1表示partition的key范围是（1，1），即第1列</span></span><br><span class="line">    <span class="comment"># -D mapreduce.partition.keypartitioner.options="-k1,1" \</span></span><br><span class="line">    <span class="comment"># 设置key中需要比较的字段或字节范围，-k1,1表示sort的key范围是（1，1），即第1列，n表示按数字number类型排序</span></span><br><span class="line">    <span class="comment"># -D mapreduce.partition.keycomparator.options="-k1,1n" \</span></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>
<h2 id="allsort">AllSort</h2>
<h3 id="python3-3">Python3</h3>
<h4 id="map_sort.py-2">map_sort.py</h4>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">base_count = <span class="number">10000</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> sys.stdin:</span><br><span class="line">    ss = line.strip().split(<span class="string">'\t'</span>)</span><br><span class="line">    key, val = ss</span><br><span class="line"></span><br><span class="line">    new_key = base_count + <span class="built_in">int</span>(key)</span><br><span class="line"></span><br><span class="line">    partition_index = <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> new_key &lt; (<span class="number">10100</span> + <span class="number">10000</span>) / <span class="number">2</span>:</span><br><span class="line">        partition_index = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"%s\t%s\t%s"</span> % (partition_index, new_key, val))</span><br><span class="line">    </span><br></pre></td></tr></tbody></table></figure>
<h4 id="red_sort.py-2">red_sort.py</h4>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">base_count = <span class="number">10000</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> sys.stdin:</span><br><span class="line">    partition_index, new_key, val = line.strip().split(<span class="string">'\t'</span>)</span><br><span class="line"></span><br><span class="line">    key = <span class="built_in">int</span>(new_key) - base_count</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'\t'</span>.join([<span class="built_in">str</span>(key), val]))</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>
<h4 id="a.txt-2">a.txt</h4>
<figure class="highlight"><table><tbody><tr><td class="code"><pre><span class="line">1	hadoop</span><br><span class="line">3	hadoop</span><br><span class="line">5	hadoop</span><br><span class="line">7	hadoop</span><br><span class="line">9	hadoop</span><br></pre></td></tr></tbody></table></figure>
<h4 id="b.txt-2">b.txt</h4>
<figure class="highlight mipsasm"><table><tbody><tr><td class="code"><pre><span class="line"><span class="number">0</span>	<span class="keyword">java</span></span><br><span class="line"><span class="keyword"></span><span class="number">2</span>	<span class="keyword">java</span></span><br><span class="line"><span class="keyword"></span><span class="number">4</span>	<span class="keyword">java</span></span><br><span class="line"><span class="keyword"></span><span class="number">6</span>	<span class="keyword">java</span></span><br><span class="line"><span class="keyword"></span><span class="number">8</span>	<span class="keyword">java</span></span><br></pre></td></tr></tbody></table></figure>
<h4 id="run.sh-3">run.sh</h4>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env bash</span></span><br><span class="line"></span><br><span class="line">HADOOP_CMD=<span class="string">"/usr/local/src/hadoop-2.8.5/bin/hadoop"</span></span><br><span class="line">STREAM_JAR_PATH=<span class="string">"/usr/local/src/hadoop-2.8.5/share/hadoop/tools/lib/hadoop-streaming-2.8.5.jar"</span></span><br><span class="line"></span><br><span class="line">INPUT_FILE_PATH_A=<span class="string">"/week01/03_mr_allsort/a.txt"</span></span><br><span class="line">INPUT_FILE_PATH_B=<span class="string">"/week01/03_mr_allsort/b.txt"</span></span><br><span class="line"></span><br><span class="line">OUTPUT_PATH=<span class="string">"/week01/03_mr_allsort/output/python3"</span></span><br><span class="line"></span><br><span class="line">LOCAL_FILE_PATH_A=<span class="string">"/mnt/hgfs/Code/week01/03_mr_allsort/a.txt"</span></span><br><span class="line">LOCAL_FILE_PATH_B=<span class="string">"/mnt/hgfs/Code/week01/03_mr_allsort/b.txt"</span></span><br><span class="line">UPLOAD_PATH=<span class="string">"/week01/03_mr_allsort/"</span></span><br><span class="line"></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> fs -rm -r -skipTrash <span class="variable">${INPUT_FILE_PATH_A}</span></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> fs -rm -r -skipTrash <span class="variable">${INPUT_FILE_PATH_B}</span></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> fs -rm -r -skipTrash <span class="variable">${OUTPUT_PATH}</span></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> fs -mkdir -p <span class="variable">${UPLOAD_PATH}</span></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> fs -put <span class="variable">${LOCAL_FILE_PATH_A}</span> <span class="variable">${LOCAL_FILE_PATH_B}</span> <span class="variable">${UPLOAD_PATH}</span></span><br><span class="line"></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> jar <span class="variable">${STREAM_JAR_PATH}</span> \</span><br><span class="line">    -D mapreduce.job.reduces=2 \</span><br><span class="line">    -D stream.num.map.output.key.fields=2 \</span><br><span class="line">    -D num.key.fields.for.partition=1 \</span><br><span class="line">    -files map_sort.py,red_sort.py \</span><br><span class="line">    -input <span class="variable">${INPUT_FILE_PATH_A}</span>,<span class="variable">${INPUT_FILE_PATH_B}</span> \</span><br><span class="line">    -output <span class="variable">${OUTPUT_PATH}</span> \</span><br><span class="line">    -mapper <span class="string">"python map_sort.py"</span> \</span><br><span class="line">    -reducer <span class="string">"python red_sort.py"</span> \</span><br><span class="line">    -partitioner org.apache.hadoop.mapred.lib.KeyFieldBasedPartitioner</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 设置分隔符位置（默认\t）,分隔符之前为key，之后为value，此处以前2列为key</span></span><br><span class="line">    <span class="comment"># -D stream.num.map.output.key.fields=2 \</span></span><br><span class="line">    <span class="comment"># 设置partition key（仅能从头顺序选取范围）用来做分发，此处以第1列做partition</span></span><br><span class="line">    <span class="comment"># -D num.key.fields.for.partition=1 \</span></span><br><span class="line">    <span class="comment"># 设置partition key（可选择中间范围）用来做分发</span></span><br><span class="line">    <span class="comment"># -D mapreduce.partition.keypartitioner.options="-k1,1" \</span></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>
<h2 id="file_broadcast">File_Broadcast</h2>
<h3 id="file">File</h3>
<h4 id="python3-4">Python3</h4>
<h5 id="map.py-1">map.py</h5>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read_local_file_func</span>(<span class="params">f</span>):</span></span><br><span class="line">    word_set = <span class="built_in">set</span>()</span><br><span class="line">    file_in = <span class="built_in">open</span>(f, <span class="string">'r'</span>)</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> file_in:</span><br><span class="line">        word = line.strip()</span><br><span class="line">        word_set.add(word)</span><br><span class="line">    <span class="keyword">return</span> word_set</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mapper_func</span>(<span class="params">white_list_fd</span>):</span></span><br><span class="line">    word_set = read_local_file_func(white_list_fd)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> sys.stdin:</span><br><span class="line">        ss = line.strip().split(<span class="string">' '</span>)</span><br><span class="line">        <span class="keyword">for</span> s <span class="keyword">in</span> ss:</span><br><span class="line">            word = s.strip()</span><br><span class="line">            <span class="keyword">if</span> word != <span class="string">""</span> <span class="keyword">and</span> (word <span class="keyword">in</span> word_set):</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">"%s\t%s"</span> % (s, <span class="number">1</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    module = sys.modules[__name__]</span><br><span class="line">    func = <span class="built_in">getattr</span>(module, sys.argv[<span class="number">1</span>])</span><br><span class="line">    args = <span class="literal">None</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(sys.argv) &gt; <span class="number">1</span>:</span><br><span class="line">        args = sys.argv[<span class="number">2</span>:]</span><br><span class="line">    func(*args)</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>
<h5 id="red.py">red.py</h5>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">reducer_func</span>():</span></span><br><span class="line">    current_word = <span class="literal">None</span></span><br><span class="line">    count_pool = []</span><br><span class="line">    <span class="built_in">sum</span> = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> sys.stdin:</span><br><span class="line">        word, val = line.strip().split(<span class="string">'\t'</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> current_word <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            current_word = word</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> current_word != word:</span><br><span class="line">            <span class="keyword">for</span> count <span class="keyword">in</span> count_pool:</span><br><span class="line">                <span class="built_in">sum</span> += count</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">"%s\t%s"</span> % (current_word, <span class="built_in">sum</span>))</span><br><span class="line">            current_word = word</span><br><span class="line">            count_pool = []</span><br><span class="line">            <span class="built_in">sum</span> = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">        count_pool.append(<span class="built_in">int</span>(val))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> count <span class="keyword">in</span> count_pool:</span><br><span class="line">        <span class="built_in">sum</span> += count</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"%s\t%s"</span> % (current_word, <span class="built_in">str</span>(<span class="built_in">sum</span>)))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    module = sys.modules[__name__]</span><br><span class="line">    func = <span class="built_in">getattr</span>(module, sys.argv[<span class="number">1</span>])</span><br><span class="line">    args = <span class="literal">None</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(sys.argv) &gt; <span class="number">1</span>:</span><br><span class="line">        args = sys.argv[<span class="number">2</span>:]</span><br><span class="line">    func(*args)</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>
<h5 id="the_man_of_property.txt-1">The_Man_of_Property.txt</h5>
<figure class="highlight pgsql"><table><tbody><tr><td class="code"><pre><span class="line">“The Forsyte Saga” was the title originally destined <span class="keyword">for</span> that part <span class="keyword">of</span> it which <span class="keyword">is</span> <span class="keyword">called</span> “The Man <span class="keyword">of</span> Property”; <span class="keyword">and</span> <span class="keyword">to</span> adopt it <span class="keyword">for</span> the collected chronicles <span class="keyword">of</span> the Forsyte <span class="keyword">family</span> has indulged the Forsytean tenacity that <span class="keyword">is</span> <span class="keyword">in</span> <span class="keyword">all</span> <span class="keyword">of</span> us. The word Saga might be objected <span class="keyword">to</span> <span class="keyword">on</span> the ground that it connotes the heroic <span class="keyword">and</span> that there <span class="keyword">is</span> little heroism <span class="keyword">in</span> these pages. But it <span class="keyword">is</span> used <span class="keyword">with</span> a suitable irony; <span class="keyword">and</span>, <span class="keyword">after</span> <span class="keyword">all</span>, this long tale, though it may deal <span class="keyword">with</span> folk <span class="keyword">in</span> frock coats, furbelows, <span class="keyword">and</span> a gilt-edged period, <span class="keyword">is</span> <span class="keyword">not</span> devoid <span class="keyword">of</span> the essential heat <span class="keyword">of</span> <span class="keyword">conflict</span>. Discounting <span class="keyword">for</span> the gigantic stature <span class="keyword">and</span> blood-thirstiness <span class="keyword">of</span> <span class="built_in">old</span> days, <span class="keyword">as</span> they have come down <span class="keyword">to</span> us <span class="keyword">in</span> fairy-tale <span class="keyword">and</span> legend, the folk <span class="keyword">of</span> the <span class="built_in">old</span> Sagas were Forsytes, assuredly, <span class="keyword">in</span> their possessive instincts, <span class="keyword">and</span> <span class="keyword">as</span> little proof against the inroads <span class="keyword">of</span> beauty <span class="keyword">and</span> passion <span class="keyword">as</span> Swithin, Soames, <span class="keyword">or</span> even Young Jolyon. <span class="keyword">And</span> <span class="keyword">if</span> heroic figures, <span class="keyword">in</span> days that never were, seem <span class="keyword">to</span> startle <span class="keyword">out</span> <span class="keyword">from</span> their surroundings <span class="keyword">in</span> fashion unbecoming <span class="keyword">to</span> a Forsyte <span class="keyword">of</span> the Victorian era, we may be sure that tribal instinct was even <span class="keyword">then</span> the prime force, <span class="keyword">and</span> that “<span class="keyword">family</span>” <span class="keyword">and</span> the sense <span class="keyword">of</span> home <span class="keyword">and</span> property counted <span class="keyword">as</span> they <span class="keyword">do</span> <span class="keyword">to</span> this day, <span class="keyword">for</span> <span class="keyword">all</span> the recent efforts <span class="keyword">to</span> “talk them <span class="keyword">out</span>.”</span><br></pre></td></tr></tbody></table></figure>
<h5 id="white_list">white_list</h5>
<figure class="highlight ebnf"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attribute">the</span></span><br></pre></td></tr></tbody></table></figure>
<h5 id="run.sh-4">run.sh</h5>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env bash</span></span><br><span class="line"></span><br><span class="line">HADOOP_CMD=<span class="string">"/usr/local/src/hadoop-2.8.5/bin/hadoop"</span></span><br><span class="line">STREAM_JAR_PATH=<span class="string">"/usr/local/src/hadoop-2.8.5/share/hadoop/tools/lib/hadoop-streaming-2.8.5.jar"</span></span><br><span class="line"></span><br><span class="line">INPUT_FILE_PATH=<span class="string">"/week01/04_mr_file_broadcast/The_Man_of_Property.txt"</span></span><br><span class="line">OUTPUT_PATH=<span class="string">"/week01/04_mr_file_broadcast/file/output/python3"</span></span><br><span class="line"></span><br><span class="line">LOCAL_FILE_PATH=<span class="string">"/mnt/hgfs/Code/week01/04_mr_file_broadcast/The_Man_of_Property.txt"</span></span><br><span class="line">UPLOAD_PATH=<span class="string">"/week01/04_mr_file_broadcast/"</span></span><br><span class="line"></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> fs -rm -r -skipTrash <span class="variable">${INPUT_FILE_PATH}</span></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> fs -rm -r -skipTrash <span class="variable">${OUTPUT_PATH}</span></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> fs -mkdir -p <span class="variable">${UPLOAD_PATH}</span></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> fs -put <span class="variable">${LOCAL_FILE_PATH}</span> <span class="variable">${UPLOAD_PATH}</span></span><br><span class="line"></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> jar <span class="variable">${STREAM_JAR_PATH}</span> \</span><br><span class="line">    -D mapreduce.job.reduces=2 \</span><br><span class="line">    -files map.py,red.py,white_list \</span><br><span class="line">    -input <span class="variable">${INPUT_FILE_PATH}</span> \</span><br><span class="line">    -output <span class="variable">${OUTPUT_PATH}</span> \</span><br><span class="line">    -mapper <span class="string">"python map.py mapper_func white_list"</span> \</span><br><span class="line">    -reducer <span class="string">"python red.py reducer_func"</span> \</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>
<h3 id="cachefile">cacheFile</h3>
<h4 id="python3-5">Python3</h4>
<h5 id="map.py-2">map.py</h5>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read_local_file_func</span>(<span class="params">file</span>):</span></span><br><span class="line">    word_set = <span class="built_in">set</span>()</span><br><span class="line">    file_in = <span class="built_in">open</span>(file, <span class="string">'r'</span>)</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> file_in:</span><br><span class="line">        word = line.strip()</span><br><span class="line">        word_set.add(word)</span><br><span class="line">    <span class="keyword">return</span> word_set</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mapper_func</span>(<span class="params">white_list</span>):</span></span><br><span class="line">    word_set = read_local_file_func(white_list)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> sys.stdin:</span><br><span class="line">        ss = line.strip().split(<span class="string">' '</span>)</span><br><span class="line">        <span class="keyword">for</span> s <span class="keyword">in</span> ss:</span><br><span class="line">            word = s.strip()</span><br><span class="line">            <span class="keyword">if</span> word != <span class="string">""</span> <span class="keyword">and</span> (word <span class="keyword">in</span> word_set):</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">"%s\t%s"</span> % (s, <span class="number">1</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    module = sys.modules[__name__]</span><br><span class="line">    func = <span class="built_in">getattr</span>(module, sys.argv[<span class="number">1</span>])</span><br><span class="line">    args = <span class="literal">None</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(sys.argv) &gt; <span class="number">1</span>:</span><br><span class="line">        args = sys.argv[<span class="number">2</span>:]</span><br><span class="line">    func(*args)</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>
<h5 id="red.py-1">red.py</h5>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">reducer_func</span>():</span></span><br><span class="line">    current_word = <span class="literal">None</span></span><br><span class="line">    cnt_sum = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> sys.stdin:</span><br><span class="line">        ss = line.strip().split(<span class="string">'\t'</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(ss) != <span class="number">2</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        word, cnt = ss</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> current_word <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            current_word = word</span><br><span class="line">        <span class="keyword">if</span> current_word != word:</span><br><span class="line">            <span class="built_in">print</span>(current_word.strip() + <span class="string">'\t'</span> + <span class="built_in">str</span>(cnt_sum))</span><br><span class="line">            current_word = word</span><br><span class="line">            cnt_sum = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">        cnt_sum += <span class="built_in">int</span>(cnt)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(current_word.strip() + <span class="string">'\t'</span> + <span class="built_in">str</span>(cnt_sum))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    module = sys.modules[__name__]</span><br><span class="line">    func = <span class="built_in">getattr</span>(module, sys.argv[<span class="number">1</span>])</span><br><span class="line">    args = <span class="literal">None</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(sys.argv) &gt; <span class="number">1</span>:</span><br><span class="line">        args = sys.argv[<span class="number">2</span>:]</span><br><span class="line">    func(*args)</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>
<h5 id="the_man_of_property.txt-2">The_Man_of_Property.txt</h5>
<figure class="highlight pgsql"><table><tbody><tr><td class="code"><pre><span class="line">“The Forsyte Saga” was the title originally destined <span class="keyword">for</span> that part <span class="keyword">of</span> it which <span class="keyword">is</span> <span class="keyword">called</span> “The Man <span class="keyword">of</span> Property”; <span class="keyword">and</span> <span class="keyword">to</span> adopt it <span class="keyword">for</span> the collected chronicles <span class="keyword">of</span> the Forsyte <span class="keyword">family</span> has indulged the Forsytean tenacity that <span class="keyword">is</span> <span class="keyword">in</span> <span class="keyword">all</span> <span class="keyword">of</span> us. The word Saga might be objected <span class="keyword">to</span> <span class="keyword">on</span> the ground that it connotes the heroic <span class="keyword">and</span> that there <span class="keyword">is</span> little heroism <span class="keyword">in</span> these pages. But it <span class="keyword">is</span> used <span class="keyword">with</span> a suitable irony; <span class="keyword">and</span>, <span class="keyword">after</span> <span class="keyword">all</span>, this long tale, though it may deal <span class="keyword">with</span> folk <span class="keyword">in</span> frock coats, furbelows, <span class="keyword">and</span> a gilt-edged period, <span class="keyword">is</span> <span class="keyword">not</span> devoid <span class="keyword">of</span> the essential heat <span class="keyword">of</span> <span class="keyword">conflict</span>. Discounting <span class="keyword">for</span> the gigantic stature <span class="keyword">and</span> blood-thirstiness <span class="keyword">of</span> <span class="built_in">old</span> days, <span class="keyword">as</span> they have come down <span class="keyword">to</span> us <span class="keyword">in</span> fairy-tale <span class="keyword">and</span> legend, the folk <span class="keyword">of</span> the <span class="built_in">old</span> Sagas were Forsytes, assuredly, <span class="keyword">in</span> their possessive instincts, <span class="keyword">and</span> <span class="keyword">as</span> little proof against the inroads <span class="keyword">of</span> beauty <span class="keyword">and</span> passion <span class="keyword">as</span> Swithin, Soames, <span class="keyword">or</span> even Young Jolyon. <span class="keyword">And</span> <span class="keyword">if</span> heroic figures, <span class="keyword">in</span> days that never were, seem <span class="keyword">to</span> startle <span class="keyword">out</span> <span class="keyword">from</span> their surroundings <span class="keyword">in</span> fashion unbecoming <span class="keyword">to</span> a Forsyte <span class="keyword">of</span> the Victorian era, we may be sure that tribal instinct was even <span class="keyword">then</span> the prime force, <span class="keyword">and</span> that “<span class="keyword">family</span>” <span class="keyword">and</span> the sense <span class="keyword">of</span> home <span class="keyword">and</span> property counted <span class="keyword">as</span> they <span class="keyword">do</span> <span class="keyword">to</span> this day, <span class="keyword">for</span> <span class="keyword">all</span> the recent efforts <span class="keyword">to</span> “talk them <span class="keyword">out</span>.”</span><br></pre></td></tr></tbody></table></figure>
<h5 id="white_list-1">white_list</h5>
<figure class="highlight ebnf"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attribute">the</span></span><br></pre></td></tr></tbody></table></figure>
<h5 id="run.sh-5">run.sh</h5>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env bash</span></span><br><span class="line"></span><br><span class="line">HADOOP_CMD=<span class="string">"/usr/local/src/hadoop-2.8.5/bin/hadoop"</span></span><br><span class="line">STREAM_JAR_PATH=<span class="string">"/usr/local/src/hadoop-2.8.5/share/hadoop/tools/lib/hadoop-streaming-2.8.5.jar"</span></span><br><span class="line"></span><br><span class="line">INPUT_FILE_PATH=<span class="string">"/week01/04_mr_file_broadcast/The_Man_of_Property.txt"</span></span><br><span class="line">OUTPUT_PATH=<span class="string">"/week01/04_mr_file_broadcast/cachefile/output/python3"</span></span><br><span class="line"></span><br><span class="line">LOCAL_FILE_PATH_A=<span class="string">"/mnt/hgfs/Code/week01/04_mr_file_broadcast/The_Man_of_Property.txt"</span></span><br><span class="line">LOCAL_FILE_PATH_B=<span class="string">"/mnt/hgfs/Code/week01/04_mr_file_broadcast/white_list"</span></span><br><span class="line">UPLOAD_PATH_A=<span class="string">"/week01/04_mr_file_broadcast/"</span></span><br><span class="line">UPLOAD_PATH_B=<span class="string">"/week01/04_mr_file_broadcast/cachefile/"</span></span><br><span class="line"></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> fs -rm -r -skipTrash <span class="variable">${INPUT_FILE_PATH}</span></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> fs -rm -r -skipTrash <span class="variable">${OUTPUT_PATH}</span></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> fs -mkdir -p <span class="variable">${UPLOAD_PATH_B}</span></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> fs -put <span class="variable">${LOCAL_FILE_PATH_A}</span> <span class="variable">${UPLOAD_PATH_A}</span></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> fs -put <span class="variable">${LOCAL_FILE_PATH_B}</span> <span class="variable">${UPLOAD_PATH_B}</span></span><br><span class="line"></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> jar <span class="variable">${STREAM_JAR_PATH}</span> \</span><br><span class="line">    -D mapreduce.job.reduces=2 \</span><br><span class="line">    -D mapreduce.job.name=cachefile_demo \</span><br><span class="line">    -files map.py,red.py,<span class="string">"hdfs://master:9000/week01/04_mr_file_broadcast/cachefile/white_list#WH"</span> \</span><br><span class="line">    -input <span class="variable">${INPUT_FILE_PATH}</span> \</span><br><span class="line">    -output <span class="variable">${OUTPUT_PATH}</span> \</span><br><span class="line">    -mapper <span class="string">"python map.py mapper_func WH"</span> \</span><br><span class="line">    -reducer <span class="string">"python red.py reducer_func"</span> \</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 过时了</span></span><br><span class="line">    <span class="comment"># -cacheFile "hdfs://master:9000/week01/04_mr_file_broadcast/cachefile</span></span><br><span class="line">    <span class="comment"># /white_list#WWWHHH" \</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#-cacheFile "${HDFS_FILE_PATH}#WH" \</span></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>
<h3 id="cachearchive">cacheArchive</h3>
<h4 id="python3-6">Python3</h4>
<h5 id="map.py-3">map.py</h5>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> gzip</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_file_handler</span>(<span class="params">f</span>):</span></span><br><span class="line">    file_in = <span class="built_in">open</span>(f, <span class="string">'r'</span>)</span><br><span class="line">    <span class="keyword">return</span> file_in</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_cachefile_handlers</span>(<span class="params">f</span>):</span></span><br><span class="line">    f_handlers_list = []</span><br><span class="line">    <span class="keyword">if</span> os.path.isdir(f):</span><br><span class="line">        <span class="keyword">for</span> fd <span class="keyword">in</span> os.listdir(f):</span><br><span class="line">            f_handlers_list.append(get_file_handler(f + <span class="string">'/'</span> + fd))</span><br><span class="line">    <span class="keyword">return</span> f_handlers_list</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read_local_file_func</span>(<span class="params">f</span>):</span></span><br><span class="line">    word_set = <span class="built_in">set</span>()</span><br><span class="line">    <span class="keyword">for</span> cachefile <span class="keyword">in</span> get_cachefile_handlers(f):</span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> cachefile:</span><br><span class="line">            word = line.strip()</span><br><span class="line">            word_set.add(word)</span><br><span class="line">    <span class="keyword">return</span> word_set</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mapper_func</span>(<span class="params">white_list_fd</span>):</span></span><br><span class="line">    word_set = read_local_file_func(white_list_fd)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> sys.stdin:</span><br><span class="line">        ss = line.strip().split(<span class="string">' '</span>)</span><br><span class="line">        <span class="keyword">for</span> s <span class="keyword">in</span> ss:</span><br><span class="line">            word = s.strip()</span><br><span class="line">            <span class="keyword">if</span> word != <span class="string">""</span> <span class="keyword">and</span> (word <span class="keyword">in</span> word_set):</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">"%s\t%s"</span> % (s, <span class="number">1</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    module = sys.modules[__name__]</span><br><span class="line">    func = <span class="built_in">getattr</span>(module, sys.argv[<span class="number">1</span>])</span><br><span class="line">    args = <span class="literal">None</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(sys.argv) &gt; <span class="number">1</span>:</span><br><span class="line">        args = sys.argv[<span class="number">2</span>:]</span><br><span class="line">    func(*args)</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>
<h5 id="red.py-2">red.py</h5>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">reducer_func</span>():</span></span><br><span class="line">    current_word = <span class="literal">None</span></span><br><span class="line">    count_pool = []</span><br><span class="line">    <span class="built_in">sum</span> = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> sys.stdin:</span><br><span class="line">        word, val = line.strip().split(<span class="string">'\t'</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> current_word <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            current_word = word</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> current_word != word:</span><br><span class="line">            <span class="keyword">for</span> count <span class="keyword">in</span> count_pool:</span><br><span class="line">                <span class="built_in">sum</span> += count</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">"%s\t%s"</span> % (current_word, <span class="built_in">sum</span>))</span><br><span class="line">            current_word = word</span><br><span class="line">            count_pool = []</span><br><span class="line">            <span class="built_in">sum</span> = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">        count_pool.append(<span class="built_in">int</span>(val))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> count <span class="keyword">in</span> count_pool:</span><br><span class="line">        <span class="built_in">sum</span> += count</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"%s\t%s"</span> % (current_word, <span class="built_in">str</span>(<span class="built_in">sum</span>)))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    module = sys.modules[__name__]</span><br><span class="line">    func = <span class="built_in">getattr</span>(module, sys.argv[<span class="number">1</span>])</span><br><span class="line">    args = <span class="literal">None</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(sys.argv) &gt; <span class="number">1</span>:</span><br><span class="line">        args = sys.argv[<span class="number">2</span>:]</span><br><span class="line">    func(*args)</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>
<h5 id="the_man_of_property.txt-3">The_Man_of_Property.txt</h5>
<figure class="highlight pgsql"><table><tbody><tr><td class="code"><pre><span class="line">“The Forsyte Saga” was the title originally destined <span class="keyword">for</span> that part <span class="keyword">of</span> it which <span class="keyword">is</span> <span class="keyword">called</span> “The Man <span class="keyword">of</span> Property”; <span class="keyword">and</span> <span class="keyword">to</span> adopt it <span class="keyword">for</span> the collected chronicles <span class="keyword">of</span> the Forsyte <span class="keyword">family</span> has indulged the Forsytean tenacity that <span class="keyword">is</span> <span class="keyword">in</span> <span class="keyword">all</span> <span class="keyword">of</span> us. The word Saga might be objected <span class="keyword">to</span> <span class="keyword">on</span> the ground that it connotes the heroic <span class="keyword">and</span> that there <span class="keyword">is</span> little heroism <span class="keyword">in</span> these pages. But it <span class="keyword">is</span> used <span class="keyword">with</span> a suitable irony; <span class="keyword">and</span>, <span class="keyword">after</span> <span class="keyword">all</span>, this long tale, though it may deal <span class="keyword">with</span> folk <span class="keyword">in</span> frock coats, furbelows, <span class="keyword">and</span> a gilt-edged period, <span class="keyword">is</span> <span class="keyword">not</span> devoid <span class="keyword">of</span> the essential heat <span class="keyword">of</span> <span class="keyword">conflict</span>. Discounting <span class="keyword">for</span> the gigantic stature <span class="keyword">and</span> blood-thirstiness <span class="keyword">of</span> <span class="built_in">old</span> days, <span class="keyword">as</span> they have come down <span class="keyword">to</span> us <span class="keyword">in</span> fairy-tale <span class="keyword">and</span> legend, the folk <span class="keyword">of</span> the <span class="built_in">old</span> Sagas were Forsytes, assuredly, <span class="keyword">in</span> their possessive instincts, <span class="keyword">and</span> <span class="keyword">as</span> little proof against the inroads <span class="keyword">of</span> beauty <span class="keyword">and</span> passion <span class="keyword">as</span> Swithin, Soames, <span class="keyword">or</span> even Young Jolyon. <span class="keyword">And</span> <span class="keyword">if</span> heroic figures, <span class="keyword">in</span> days that never were, seem <span class="keyword">to</span> startle <span class="keyword">out</span> <span class="keyword">from</span> their surroundings <span class="keyword">in</span> fashion unbecoming <span class="keyword">to</span> a Forsyte <span class="keyword">of</span> the Victorian era, we may be sure that tribal instinct was even <span class="keyword">then</span> the prime force, <span class="keyword">and</span> that “<span class="keyword">family</span>” <span class="keyword">and</span> the sense <span class="keyword">of</span> home <span class="keyword">and</span> property counted <span class="keyword">as</span> they <span class="keyword">do</span> <span class="keyword">to</span> this day, <span class="keyword">for</span> <span class="keyword">all</span> the recent efforts <span class="keyword">to</span> “talk them <span class="keyword">out</span>.”</span><br></pre></td></tr></tbody></table></figure>
<h5 id="w.tar.gz">w.tar.gz</h5>
<h6 id="white_list_1">white_list_1</h6>
<figure class="highlight ebnf"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attribute">the</span></span><br></pre></td></tr></tbody></table></figure>
<h6 id="white_list_2">white_list_2</h6>
<figure class="highlight css"><table><tbody><tr><td class="code"><pre><span class="line"><span class="selector-tag">a</span></span><br></pre></td></tr></tbody></table></figure>
<h5 id="run.sh-6">run.sh</h5>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env bash</span></span><br><span class="line"></span><br><span class="line">HADOOP_CMD=<span class="string">"/usr/local/src/hadoop-2.8.5/bin/hadoop"</span></span><br><span class="line">STREAM_JAR_PATH=<span class="string">"/usr/local/src/hadoop-2.8.5/share/hadoop/tools/lib/hadoop-streaming-2.8.5.jar"</span></span><br><span class="line"></span><br><span class="line">INPUT_FILE_PATH=<span class="string">"/week01/04_mr_file_broadcast/The_Man_of_Property.txt"</span></span><br><span class="line">OUTPUT_PATH=<span class="string">"/week01/04_mr_file_broadcast/cachearchive/output/python3"</span></span><br><span class="line"></span><br><span class="line">LOCAL_FILE_PATH_A=<span class="string">"/mnt/hgfs/Code/week01/04_mr_file_broadcast/The_Man_of_Property.txt"</span></span><br><span class="line">LOCAL_FILE_PATH_B=<span class="string">"/mnt/hgfs/Code/week01/04_mr_file_broadcast/w.tar.gz"</span></span><br><span class="line">UPLOAD_PATH_A=<span class="string">"/week01/04_mr_file_broadcast/"</span></span><br><span class="line">UPLOAD_PATH_B=<span class="string">"/week01/04_mr_file_broadcast/cachearchive/"</span></span><br><span class="line"></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> fs -rm -r -skipTrash <span class="variable">${INPUT_FILE_PATH}</span></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> fs -rm -r -skipTrash <span class="variable">${OUTPUT_PATH}</span></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> fs -mkdir -p <span class="variable">${UPLOAD_PATH_B}</span></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> fs -put <span class="variable">${LOCAL_FILE_PATH_A}</span> <span class="variable">${UPLOAD_PATH_A}</span></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> fs -put <span class="variable">${LOCAL_FILE_PATH_B}</span> <span class="variable">${UPLOAD_PATH_B}</span></span><br><span class="line"></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> jar <span class="variable">${STREAM_JAR_PATH}</span> \</span><br><span class="line">    -D mapreduce.job.reduces=2 \</span><br><span class="line">    -D mapreduce.job.name=cachearchive_demo \</span><br><span class="line">    -files map.py,red.py \</span><br><span class="line">    -archives <span class="string">"hdfs://master:9000/week01/04_mr_file_broadcast/cachearchive/w.tar.gz#WH.gz"</span> \</span><br><span class="line">    -input <span class="variable">${INPUT_FILE_PATH}</span> \</span><br><span class="line">    -output <span class="variable">${OUTPUT_PATH}</span> \</span><br><span class="line">    -mapper <span class="string">"python map.py mapper_func WH.gz"</span> \</span><br><span class="line">    -reducer <span class="string">"python red.py reducer_func"</span> \</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>
<h2 id="compression">Compression</h2>
<h3 id="python3-7">Python3</h3>
<h4 id="map.py-4">map.py</h4>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> gzip</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_file_handler</span>(<span class="params">f</span>):</span></span><br><span class="line">    file_in = <span class="built_in">open</span>(f, <span class="string">'r'</span>)</span><br><span class="line">    <span class="keyword">return</span> file_in</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_cachefile_handlers</span>(<span class="params">f</span>):</span></span><br><span class="line">    f_handlers_list = []</span><br><span class="line">    <span class="keyword">if</span> os.path.isdir(f):</span><br><span class="line">        <span class="keyword">for</span> fd <span class="keyword">in</span> os.listdir(f):</span><br><span class="line">            f_handlers_list.append(get_file_handler(f + <span class="string">'/'</span> + fd))</span><br><span class="line">    <span class="keyword">return</span> f_handlers_list</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read_local_file_func</span>(<span class="params">f</span>):</span></span><br><span class="line">    word_set = <span class="built_in">set</span>()</span><br><span class="line">    <span class="keyword">for</span> cachefile <span class="keyword">in</span> get_cachefile_handlers(f):</span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> cachefile:</span><br><span class="line">            word = line.strip()</span><br><span class="line">            word_set.add(word)</span><br><span class="line">    <span class="keyword">return</span> word_set</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mapper_func</span>(<span class="params">white_list_fd</span>):</span></span><br><span class="line">    word_set = read_local_file_func(white_list_fd)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> sys.stdin:</span><br><span class="line">        ss = line.strip().split(<span class="string">' '</span>)</span><br><span class="line">        <span class="keyword">for</span> s <span class="keyword">in</span> ss:</span><br><span class="line">            word = s.strip()</span><br><span class="line">            <span class="keyword">if</span> word != <span class="string">""</span> <span class="keyword">and</span> (word <span class="keyword">in</span> word_set):</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">"%s\t%s"</span> % (s, <span class="number">1</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    module = sys.modules[__name__]</span><br><span class="line">    func = <span class="built_in">getattr</span>(module, sys.argv[<span class="number">1</span>])</span><br><span class="line">    args = <span class="literal">None</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(sys.argv) &gt; <span class="number">1</span>:</span><br><span class="line">        args = sys.argv[<span class="number">2</span>:]</span><br><span class="line">    func(*args)</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>
<h4 id="red.py-3">red.py</h4>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">reducer_func</span>():</span></span><br><span class="line">    current_word = <span class="literal">None</span></span><br><span class="line">    count_pool = []</span><br><span class="line">    <span class="built_in">sum</span> = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> sys.stdin:</span><br><span class="line">        word, val = line.strip().split(<span class="string">'\t'</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> current_word <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            current_word = word</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> current_word != word:</span><br><span class="line">            <span class="keyword">for</span> count <span class="keyword">in</span> count_pool:</span><br><span class="line">                <span class="built_in">sum</span> += count</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">"%s\t%s"</span> % (current_word, <span class="built_in">sum</span>))</span><br><span class="line">            current_word = word</span><br><span class="line">            count_pool = []</span><br><span class="line">            <span class="built_in">sum</span> = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">        count_pool.append(<span class="built_in">int</span>(val))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> count <span class="keyword">in</span> count_pool:</span><br><span class="line">        <span class="built_in">sum</span> += count</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"%s\t%s"</span> % (current_word, <span class="built_in">str</span>(<span class="built_in">sum</span>)))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    module = sys.modules[__name__]</span><br><span class="line">    func = <span class="built_in">getattr</span>(module, sys.argv[<span class="number">1</span>])</span><br><span class="line">    args = <span class="literal">None</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(sys.argv) &gt; <span class="number">1</span>:</span><br><span class="line">        args = sys.argv[<span class="number">2</span>:]</span><br><span class="line">    func(*args)</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>
<h4 id="the_man_of_property.txt-4">The_Man_of_Property.txt</h4>
<figure class="highlight pgsql"><table><tbody><tr><td class="code"><pre><span class="line">“The Forsyte Saga” was the title originally destined <span class="keyword">for</span> that part <span class="keyword">of</span> it which <span class="keyword">is</span> <span class="keyword">called</span> “The Man <span class="keyword">of</span> Property”; <span class="keyword">and</span> <span class="keyword">to</span> adopt it <span class="keyword">for</span> the collected chronicles <span class="keyword">of</span> the Forsyte <span class="keyword">family</span> has indulged the Forsytean tenacity that <span class="keyword">is</span> <span class="keyword">in</span> <span class="keyword">all</span> <span class="keyword">of</span> us. The word Saga might be objected <span class="keyword">to</span> <span class="keyword">on</span> the ground that it connotes the heroic <span class="keyword">and</span> that there <span class="keyword">is</span> little heroism <span class="keyword">in</span> these pages. But it <span class="keyword">is</span> used <span class="keyword">with</span> a suitable irony; <span class="keyword">and</span>, <span class="keyword">after</span> <span class="keyword">all</span>, this long tale, though it may deal <span class="keyword">with</span> folk <span class="keyword">in</span> frock coats, furbelows, <span class="keyword">and</span> a gilt-edged period, <span class="keyword">is</span> <span class="keyword">not</span> devoid <span class="keyword">of</span> the essential heat <span class="keyword">of</span> <span class="keyword">conflict</span>. Discounting <span class="keyword">for</span> the gigantic stature <span class="keyword">and</span> blood-thirstiness <span class="keyword">of</span> <span class="built_in">old</span> days, <span class="keyword">as</span> they have come down <span class="keyword">to</span> us <span class="keyword">in</span> fairy-tale <span class="keyword">and</span> legend, the folk <span class="keyword">of</span> the <span class="built_in">old</span> Sagas were Forsytes, assuredly, <span class="keyword">in</span> their possessive instincts, <span class="keyword">and</span> <span class="keyword">as</span> little proof against the inroads <span class="keyword">of</span> beauty <span class="keyword">and</span> passion <span class="keyword">as</span> Swithin, Soames, <span class="keyword">or</span> even Young Jolyon. <span class="keyword">And</span> <span class="keyword">if</span> heroic figures, <span class="keyword">in</span> days that never were, seem <span class="keyword">to</span> startle <span class="keyword">out</span> <span class="keyword">from</span> their surroundings <span class="keyword">in</span> fashion unbecoming <span class="keyword">to</span> a Forsyte <span class="keyword">of</span> the Victorian era, we may be sure that tribal instinct was even <span class="keyword">then</span> the prime force, <span class="keyword">and</span> that “<span class="keyword">family</span>” <span class="keyword">and</span> the sense <span class="keyword">of</span> home <span class="keyword">and</span> property counted <span class="keyword">as</span> they <span class="keyword">do</span> <span class="keyword">to</span> this day, <span class="keyword">for</span> <span class="keyword">all</span> the recent efforts <span class="keyword">to</span> “talk them <span class="keyword">out</span>.”</span><br></pre></td></tr></tbody></table></figure>
<h4 id="white_list_dir.tar.gz">white_list_dir.tar.gz</h4>
<h5 id="white_list_1-1">white_list_1</h5>
<figure class="highlight ebnf"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attribute">the</span></span><br></pre></td></tr></tbody></table></figure>
<h5 id="white_list_2-1">white_list_2</h5>
<figure class="highlight css"><table><tbody><tr><td class="code"><pre><span class="line"><span class="selector-tag">a</span></span><br></pre></td></tr></tbody></table></figure>
<h4 id="run.sh-7">run.sh</h4>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env bash</span></span><br><span class="line"></span><br><span class="line">HADOOP_CMD=<span class="string">"/usr/local/src/hadoop-2.8.5/bin/hadoop"</span></span><br><span class="line">STREAM_JAR_PATH=<span class="string">"/usr/local/src/hadoop-2.8.5/share/hadoop/tools/lib/hadoop-streaming-2.8.5.jar"</span></span><br><span class="line"></span><br><span class="line">INPUT_FILE_PATH=<span class="string">"/week01/05_mr_compression/The_Man_of_Property.txt"</span></span><br><span class="line">OUTPUT_PATH=<span class="string">"/week01/05_mr_compression/run_1/output/python3"</span></span><br><span class="line"></span><br><span class="line">LOCAL_FILE_PATH_A=<span class="string">"/mnt/hgfs/Code/week01/05_mr_compression/The_Man_of_Property.txt"</span></span><br><span class="line">LOCAL_FILE_PATH_B=<span class="string">"/mnt/hgfs/Code/week01/05_mr_compression/white_list_dir.tar.gz"</span></span><br><span class="line">UPLOAD_PATH=<span class="string">"/week01/05_mr_compression/"</span></span><br><span class="line"></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> fs -rm -r -skipTrash <span class="variable">${INPUT_FILE_PATH}</span></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> fs -rm -r -skipTrash <span class="variable">${OUTPUT_PATH}</span></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> fs -mkdir -p <span class="variable">${UPLOAD_PATH}</span></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> fs -put <span class="variable">${LOCAL_FILE_PATH_A}</span> <span class="variable">${LOCAL_FILE_PATH_B}</span> <span class="variable">${UPLOAD_PATH}</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Step 1.</span></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> jar <span class="variable">${STREAM_JAR_PATH}</span> \</span><br><span class="line">    -D mapreduce.job.reduces=2 \</span><br><span class="line">    -D mapreduce.job.name=compression_run_1_demo \</span><br><span class="line">    -D mapreduce.map.output.compress=<span class="literal">true</span> \</span><br><span class="line">    -D mapreduce.map.output.compress.codec=org.apache.hadoop.io.compress.GzipCodec \</span><br><span class="line">    -D mapreduce.output.fileoutputformat.compress=<span class="literal">true</span> \</span><br><span class="line">    -D mapreduce.output.fileoutputformat.compress.codec=org.apache.hadoop.io.compress.GzipCodec \</span><br><span class="line">    -files map.py,red.py \</span><br><span class="line">    -archives <span class="string">"hdfs://master:9000/week01/05_mr_compression/white_list_dir.tar.gz#WH.gz"</span> \</span><br><span class="line">    -input <span class="variable">${INPUT_FILE_PATH}</span> \</span><br><span class="line">    -output <span class="variable">${OUTPUT_PATH}</span> \</span><br><span class="line">    -mapper <span class="string">"python map.py mapper_func WH.gz"</span> \</span><br><span class="line">    -reducer <span class="string">"python red.py reducer_func"</span> \</span><br><span class="line">    </span><br></pre></td></tr></tbody></table></figure>
<h2 id="join">Join</h2>
<h3 id="python3-8">Python3</h3>
<h4 id="map_a.py">map_a.py</h4>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> sys.stdin:</span><br><span class="line">    key, val = line.strip().split(<span class="string">'	'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"%s\t1\t%s"</span> % (key, val))</span><br><span class="line">    </span><br></pre></td></tr></tbody></table></figure>
<h4 id="a.txt-3">a.txt</h4>
<figure class="highlight apache"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attribute">aaa1</span>	<span class="number">123</span></span><br><span class="line"><span class="attribute">aaa2</span>	<span class="number">123</span></span><br><span class="line"><span class="attribute">aaa3</span>	<span class="number">123</span></span><br><span class="line"><span class="attribute">aaa4</span>	<span class="number">123</span></span><br><span class="line"><span class="attribute">aaa5</span>	<span class="number">123</span></span><br></pre></td></tr></tbody></table></figure>
<h4 id="map_b.py">map_b.py</h4>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> sys.stdin:</span><br><span class="line">    key, val = line.strip().split(<span class="string">'	'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"%s\t2\t%s"</span> % (key, val))</span><br><span class="line">    </span><br></pre></td></tr></tbody></table></figure>
<h4 id="b.txt-3">b.txt</h4>
<figure class="highlight nginx"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attribute">aaa1</span>	hadoop</span><br><span class="line">aaa2	hadoop</span><br><span class="line">aaa3	hadoop</span><br><span class="line">aaa4	hadoop</span><br><span class="line">aaa5	hadoop</span><br></pre></td></tr></tbody></table></figure>
<h4 id="red_join.py">red_join.py</h4>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">val_1 = <span class="string">""</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> sys.stdin:</span><br><span class="line">    key, flag, val = line.strip().split(<span class="string">'\t'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> flag == <span class="string">'1'</span>:</span><br><span class="line">        val_1 = val</span><br><span class="line">    <span class="keyword">elif</span> flag == <span class="string">'2'</span>:</span><br><span class="line">        val_2 = val</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"%s\t%s\t%s"</span> % (key, val_1, val_2))</span><br><span class="line">        val_1 = <span class="string">""</span></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>
<h4 id="run.sh-8">run.sh</h4>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env bash</span></span><br><span class="line"></span><br><span class="line">HADOOP_CMD=<span class="string">"/usr/local/src/hadoop-2.8.5/bin/hadoop"</span></span><br><span class="line">STREAM_JAR_PATH=<span class="string">"/usr/local/src/hadoop-2.8.5/share/hadoop/tools/lib/hadoop-streaming-2.8.5.jar"</span></span><br><span class="line"></span><br><span class="line">INPUT_FILE_PATH_A=<span class="string">"/week01/06_mr_join/a.txt"</span></span><br><span class="line">INPUT_FILE_PATH_B=<span class="string">"/week01/06_mr_join/b.txt"</span></span><br><span class="line"></span><br><span class="line">OUTPUT_PATH_A=<span class="string">"/week01/06_mr_join/output/a/python3"</span></span><br><span class="line">OUTPUT_PATH_B=<span class="string">"/week01/06_mr_join/output/b/python3"</span></span><br><span class="line"></span><br><span class="line">OUTPUT_PATH_JOIN=<span class="string">"/week01/06_mr_join/output/join/python3"</span></span><br><span class="line"></span><br><span class="line">LOCAL_FILE_PATH_A=<span class="string">"/mnt/hgfs/Code/week01/06_mr_join/a.txt"</span></span><br><span class="line">LOCAL_FILE_PATH_B=<span class="string">"/mnt/hgfs/Code/week01/06_mr_join/b.txt"</span></span><br><span class="line">UPLOAD_PATH=<span class="string">"/week01/06_mr_join/"</span></span><br><span class="line"></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> fs -rm -r -skipTrash <span class="variable">${INPUT_FILE_PATH_A}</span> <span class="variable">${INPUT_FILE_PATH_B}</span> <span class="variable">${OUTPUT_PATH_A}</span> <span class="variable">${OUTPUT_PATH_B}</span> <span class="variable">${OUTPUT_PATH_JOIN}</span></span><br><span class="line"></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> fs -mkdir -p <span class="variable">${UPLOAD_PATH}</span></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> fs -put <span class="variable">${LOCAL_FILE_PATH_A}</span> <span class="variable">${LOCAL_FILE_PATH_B}</span> <span class="variable">${UPLOAD_PATH}</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Step 1.</span></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> jar <span class="variable">${STREAM_JAR_PATH}</span> \</span><br><span class="line">    -files map_a.py \</span><br><span class="line">    -input <span class="variable">${INPUT_FILE_PATH_A}</span> \</span><br><span class="line">    -output <span class="variable">${OUTPUT_PATH_A}</span> \</span><br><span class="line">    -mapper <span class="string">"python map_a.py"</span> \</span><br><span class="line"></span><br><span class="line"><span class="comment"># Step 2.</span></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> jar <span class="variable">${STREAM_JAR_PATH}</span> \</span><br><span class="line">    -files map_b.py \</span><br><span class="line">    -input <span class="variable">${INPUT_FILE_PATH_B}</span> \</span><br><span class="line">    -output <span class="variable">${OUTPUT_PATH_B}</span> \</span><br><span class="line">    -mapper <span class="string">"python map_b.py"</span> \</span><br><span class="line"></span><br><span class="line"><span class="comment"># Step 3.</span></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> jar <span class="variable">${STREAM_JAR_PATH}</span> \</span><br><span class="line">    -D stream.num.map.output.key.fields=2 \</span><br><span class="line">    -D num.key.fields.for.partition=1 \</span><br><span class="line">    -files red_join.py \</span><br><span class="line">    -input <span class="variable">${OUTPUT_PATH_A}</span>,<span class="variable">${OUTPUT_PATH_B}</span> \</span><br><span class="line">    -output <span class="variable">${OUTPUT_PATH_JOIN}</span> \</span><br><span class="line">    -mapper <span class="string">"cat"</span> \</span><br><span class="line">    -reducer <span class="string">"python red_join.py"</span> \</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>
<h2 id="附加项目pyweb">附加项目：pyweb</h2>
<h3 id="python3-9">Python3</h3>
<p><strong>首先</strong>请确保使用 <code>pip install web.py==0.40-dev1</code></p>
<h4 id="main.py">main.py</h4>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> web</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">urls = (</span><br><span class="line">    <span class="string">'/'</span>, <span class="string">'index'</span>,</span><br><span class="line">    <span class="string">'/test'</span>, <span class="string">'test'</span>,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">app = web.application(urls, <span class="built_in">globals</span>())</span><br><span class="line"></span><br><span class="line">userid_rec_dict = {}</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">'file.test'</span>, <span class="string">'r'</span>) <span class="keyword">as</span> fd:</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> fd:</span><br><span class="line">        ss = line.strip().split(<span class="string">'\t'</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(ss) != <span class="number">2</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        userid = ss[<span class="number">0</span>].strip()</span><br><span class="line">        items = ss[<span class="number">1</span>].strip()</span><br><span class="line">        userid_rec_dict[userid] = items</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">index</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">GET</span>(<span class="params">self</span>):</span></span><br><span class="line">        params = web.<span class="built_in">input</span>()</span><br><span class="line">        userid = params.get(<span class="string">'userid'</span>, <span class="string">''</span>)</span><br><span class="line">        <span class="keyword">if</span> userid <span class="keyword">not</span> <span class="keyword">in</span> userid_rec_dict:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">'no rec!'</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">'\n'</span>.join(userid_rec_dict[userid].strip().split(<span class="string">''</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">GET</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(web.<span class="built_in">input</span>())</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'222'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    app.run()</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>
<h4 id="file.test">file.test</h4>
<figure class="highlight apache"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attribute">zhangsan</span>	<span class="number">1</span></span><br><span class="line"><span class="attribute">lisi</span>	<span class="number">2</span></span><br><span class="line"><span class="attribute">wangwu</span>	<span class="number">3</span></span><br></pre></td></tr></tbody></table></figure>
<p>在<strong>终端</strong>输入 <code>python main.py 12345</code> 启动 web 服务器</p>
<ul>
<li><p>如遇到报错信息</p></li>
<li><p> ``` Traceback (most recent call last): File "D:Files-packages.py", line 526, in take yield next(seq) StopIteration The above exception was the direct cause of the following exception: Traceback (most recent call last): File "D:.py", line 6, in <module> app = web.application(urls, globals(),True) File "D:Files-packages.py", line 62, in <strong>init</strong> self.init_mapping(mapping) File "D:Files-packages.py", line 130, in init_mapping self.mapping = list(utils.group(mapping, 2)) File "D:Files-packages.py", line 531, in group x = list(take(seq, size)) RuntimeError: generator raised StopIteration </module></p><figure class="highlight nim"><table><tbody><tr><td class="code"><pre><span class="line"></span><br><span class="line">修改<span class="type">Lib</span>\site-packages\web 下的utils.py文件</span><br><span class="line"></span><br><span class="line">```diff</span><br><span class="line">+ <span class="keyword">try</span>:</span><br><span class="line">      <span class="keyword">yield</span> next(<span class="built_in">seq</span>) <span class="comment"># 526行</span></span><br><span class="line">+ <span class="keyword">except</span> <span class="type">StopIteration</span>:</span><br><span class="line">+     <span class="keyword">return</span></span><br></pre></td></tr></tbody></table></figure><p></p></li>
</ul>
<p>在<strong>网页</strong>打开 <code>http://0.0.0.0:12345/</code> 即可访问页面</p>
<p>输入<strong>网址</strong><code>http://0.0.0.0:12345/?userid=zhangsan</code> 页面显示 <strong>1</strong></p>
<p>未来可拓展推荐系统 远程分词服务等</p>
<p><br></p>
<p><meting-js id="506092035" server="netease" type="song" preload="none"></meting-js></p>
<hr>
]]></content>
      <categories>
        <category>技术</category>
        <category>大数据</category>
        <category>复习笔记</category>
      </categories>
      <tags>
        <tag>BigData</tag>
        <tag>HDFS1.0</tag>
        <tag>MapReduce</tag>
      </tags>
  </entry>
  <entry>
    <title>BigData 复习笔记 02：TFIDF, LCS 与中文分词</title>
    <url>/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/998c29cc79e2/</url>
    <content><![CDATA[<p class="description">
TF-IDF, LCS, HMM
</p>
<figure>
<img data-src="https://image.alessa0.cn/122942.jpg" alt="ole-witt-vp7gEXuon08-unsplash"><figcaption aria-hidden="true">ole-witt-vp7gEXuon08-unsplash</figcaption>
</figure>
<span id="more"></span>
<blockquote class="blockquote-center">
<p>Chapter02. 中文分词</p>

</blockquote>
<h1 id="nlp文本相似度">NLP 文本相似度</h1>
<blockquote>
<p>文本相似度</p>
<blockquote>
<p>语义相似（从人的角度理解语句含义）</p>
<p>字面相似（中文分词）</p>
</blockquote>
</blockquote>
<h2 id="余弦相似度向量空间模型">余弦相似度 / 向量空间模型</h2>
<h3 id="相似度度量">相似度度量</h3>
<ul>
<li>计算个体间相似程度</li>
</ul>
<h3 id="余弦相似度">余弦相似度</h3>
<ul>
<li>一个向量空间中两个向量夹角的余弦值作为衡量两个个体之间差异的大小</li>
<li>余弦值接近 1，夹角趋于 0，表明两个向量越相似</li>
</ul>
<p><span class="math display"><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -6.27ex" xmlns="http://www.w3.org/2000/svg" width="37.721ex" height="13.672ex" role="img" focusable="false" viewBox="0 -3271.5 16672.6 6042.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mtable"><g data-mml-node="mtr" transform="translate(0,1678.5)"><g data-mml-node="mtd"><g data-mml-node="mi"><path data-c="63" d="M370 305T349 305T313 320T297 358Q297 381 312 396Q317 401 317 402T307 404Q281 408 258 408Q209 408 178 376Q131 329 131 219Q131 137 162 90Q203 29 272 29Q313 29 338 55T374 117Q376 125 379 127T395 129H409Q415 123 415 120Q415 116 411 104T395 71T366 33T318 2T249 -11Q163 -11 99 53T34 214Q34 318 99 383T250 448T370 421T404 357Q404 334 387 320Z"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(444,0)"></path><path data-c="73" d="M295 316Q295 356 268 385T190 414Q154 414 128 401Q98 382 98 349Q97 344 98 336T114 312T157 287Q175 282 201 278T245 269T277 256Q294 248 310 236T342 195T359 133Q359 71 321 31T198 -10H190Q138 -10 94 26L86 19L77 10Q71 4 65 -1L54 -11H46H42Q39 -11 33 -5V74V132Q33 153 35 157T45 162H54Q66 162 70 158T75 146T82 119T101 77Q136 26 198 26Q295 26 295 104Q295 133 277 151Q257 175 194 187T111 210Q75 227 54 256T33 318Q33 357 50 384T93 424T143 442T187 447H198Q238 447 268 432L283 424L292 431Q302 440 314 448H322H326Q329 448 335 442V310L329 304H301Q295 310 295 316Z" transform="translate(944,0)"></path></g><g data-mml-node="mo" transform="translate(1338,0)"><path data-c="2061" d=""></path></g><g data-mml-node="mo" transform="translate(1338,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1727,0)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="mo" transform="translate(2196,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mtd" transform="translate(2585,0)"><g data-mml-node="mi"></g><g data-mml-node="mo" transform="translate(277.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mfrac" transform="translate(1333.6,0)"><g data-mml-node="mrow" transform="translate(3292.2,803.3)"><g data-mml-node="munderover"><g data-mml-node="mo"><path data-c="2211" d="M61 748Q64 750 489 750H913L954 640Q965 609 976 579T993 533T999 516H979L959 517Q936 579 886 621T777 682Q724 700 655 705T436 710H319Q183 710 183 709Q186 706 348 484T511 259Q517 250 513 244L490 216Q466 188 420 134T330 27L149 -187Q149 -188 362 -188Q388 -188 436 -188T506 -189Q679 -189 778 -162T936 -43Q946 -27 959 6H999L913 -249L489 -250Q65 -250 62 -248Q56 -246 56 -239Q56 -234 118 -161Q186 -81 245 -11L428 206Q428 207 242 462L57 717L56 728Q56 744 61 748Z"></path></g><g data-mml-node="TeXAtom" transform="translate(1089,477.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(1089,-285.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1123,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mrow" transform="translate(2453.3,0)"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(389,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1510.2,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="msub" transform="translate(2510.4,0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(523,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(3327.3,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mrow" transform="translate(220,-1289.8)"><g data-mml-node="msqrt"><g transform="translate(1020,0)"><g data-mml-node="munderover"><g data-mml-node="mo"><path data-c="2211" d="M61 748Q64 750 489 750H913L954 640Q965 609 976 579T993 533T999 516H979L959 517Q936 579 886 621T777 682Q724 700 655 705T436 710H319Q183 710 183 709Q186 706 348 484T511 259Q517 250 513 244L490 216Q466 188 420 134T330 27L149 -187Q149 -188 362 -188Q388 -188 436 -188T506 -189Q679 -189 778 -162T936 -43Q946 -27 959 6H999L913 -249L489 -250Q65 -250 62 -248Q56 -246 56 -239Q56 -234 118 -161Q186 -81 245 -11L428 206Q428 207 242 462L57 717L56 728Q56 744 61 748Z"></path></g><g data-mml-node="TeXAtom" transform="translate(1089,477.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(1089,-285.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1123,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="msup" transform="translate(2453.3,0)"><g data-mml-node="mrow"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(389,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1288,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(1710,477.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g><g data-mml-node="mo" transform="translate(0,119.8)"><path data-c="221A" d="M1001 1150Q1017 1150 1020 1132Q1020 1127 741 244L460 -643Q453 -650 436 -650H424Q423 -647 423 -645T421 -640T419 -631T415 -617T408 -594T399 -560T385 -512T367 -448T343 -364T312 -259L203 119L138 41L111 67L212 188L264 248L472 -474L983 1140Q988 1150 1001 1150Z"></path></g><rect width="4566.8" height="60" x="1020" y="1209.8"></rect></g><g data-mml-node="mo" transform="translate(5809,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="msqrt" transform="translate(6809.3,0)"><g transform="translate(1020,0)"><g data-mml-node="munderover"><g data-mml-node="mo"><path data-c="2211" d="M61 748Q64 750 489 750H913L954 640Q965 609 976 579T993 533T999 516H979L959 517Q936 579 886 621T777 682Q724 700 655 705T436 710H319Q183 710 183 709Q186 706 348 484T511 259Q517 250 513 244L490 216Q466 188 420 134T330 27L149 -187Q149 -188 362 -188Q388 -188 436 -188T506 -189Q679 -189 778 -162T936 -43Q946 -27 959 6H999L913 -249L489 -250Q65 -250 62 -248Q56 -246 56 -239Q56 -234 118 -161Q186 -81 245 -11L428 206Q428 207 242 462L57 717L56 728Q56 744 61 748Z"></path></g><g data-mml-node="TeXAtom" transform="translate(1089,477.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(1089,-285.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1123,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="msup" transform="translate(2453.3,0)"><g data-mml-node="mrow"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(389,0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(523,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1206,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(1628,477.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g><g data-mml-node="mo" transform="translate(0,119.8)"><path data-c="221A" d="M1001 1150Q1017 1150 1020 1132Q1020 1127 741 244L460 -643Q453 -650 436 -650H424Q423 -647 423 -645T421 -640T419 -631T415 -617T408 -594T399 -560T385 -512T367 -448T343 -364T312 -259L203 119L138 41L111 67L212 188L264 248L472 -474L983 1140Q988 1150 1001 1150Z"></path></g><rect width="4484.8" height="60" x="1020" y="1209.8"></rect></g></g><rect width="12514.1" height="60" x="120" y="220"></rect></g></g></g><g data-mml-node="mtr" transform="translate(0,-1811.5)"><g data-mml-node="mtd" transform="translate(2585,0)"></g><g data-mml-node="mtd" transform="translate(2585,0)"><g data-mml-node="mi"></g><g data-mml-node="mo" transform="translate(277.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mfrac" transform="translate(1333.6,0)"><g data-mml-node="mrow" transform="translate(1228.8,676)"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mo" transform="translate(751.2,0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="mi" transform="translate(1251.4,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g></g><g data-mml-node="mrow" transform="translate(220,-710)"><g data-mml-node="mo"><path data-c="2225" d="M133 736Q138 750 153 750Q164 750 170 739Q172 735 172 250T170 -239Q164 -250 152 -250Q144 -250 138 -244L137 -243Q133 -241 133 -179T132 250Q132 731 133 736ZM329 739Q334 750 346 750Q353 750 361 744L362 743Q366 741 366 679T367 250T367 -178T362 -243L361 -244Q355 -250 347 -250Q335 -250 329 -239Q327 -235 327 250T329 739Z"></path></g><g data-mml-node="mi" transform="translate(500,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mo" transform="translate(1029,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mo" transform="translate(1307,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(1585,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(2157,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mo" transform="translate(2435,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(2713,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mo" transform="translate(3142,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mo" transform="translate(3420,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g></g><rect width="3898" height="60" x="120" y="220"></rect></g></g></g></g></g></g></svg></mjx-container></span></p>
<ul>
<li>案例：
<ul>
<li>步骤 0
<ul>
<li>句子 A: 这只皮鞋号码大了，那只号码合适</li>
<li>句子 B: 这只皮鞋号码不小，那只更合适</li>
</ul></li>
<li>步骤 1: 分词
<ul>
<li>句子 A: 这只 / 皮鞋 / 号码 / 大了，那只 / 号码 / 合适</li>
<li>句子 B: 这只 / 皮鞋 / 号码 / 不 / 小，那只 / 更 / 合适</li>
</ul></li>
<li>步骤 2: 列出所有词
<ul>
<li>这只，皮鞋，号码，大了，那只，合适，不，小，更</li>
</ul></li>
<li>步骤 3: 计算词频
<ul>
<li>句子 A: 这只 1, 皮鞋 1, 号码 2, 大了 1, 那只 1, 合适 1, 不 0, 小 0, 更 0</li>
<li> 句子 B: 这只 1, 皮鞋 1, 号码 1, 大了 0, 那只 1, 合适 1, 不 1, 小 1, 更 1</li>
</ul></li>
<li> 步骤 4: 词频向量化
<ul>
<li>句子 A: (1, 1, 2, 1, 1, 1, 0, 0, 0)</li>
<li> 句子 B: (1, 1, 1, 0, 1, 1, 1, 1, 1)</li>
</ul></li>
<li> 步骤 5: 套公式计算</li>
</ul></li>
</ul>
<p><span class="math display"><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -4.77ex" xmlns="http://www.w3.org/2000/svg" width="59.354ex" height="10.671ex" role="img" focusable="false" viewBox="0 -2608.2 26234.3 4716.5"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mtable"><g data-mml-node="mtr" transform="translate(0,1739.3)"><g data-mml-node="mtd"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="63" d="M370 305T349 305T313 320T297 358Q297 381 312 396Q317 401 317 402T307 404Q281 408 258 408Q209 408 178 376Q131 329 131 219Q131 137 162 90Q203 29 272 29Q313 29 338 55T374 117Q376 125 379 127T395 129H409Q415 123 415 120Q415 116 411 104T395 71T366 33T318 2T249 -11Q163 -11 99 53T34 214Q34 318 99 383T250 448T370 421T404 357Q404 334 387 320Z"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(444,0)"></path><path data-c="73" d="M295 316Q295 356 268 385T190 414Q154 414 128 401Q98 382 98 349Q97 344 98 336T114 312T157 287Q175 282 201 278T245 269T277 256Q294 248 310 236T342 195T359 133Q359 71 321 31T198 -10H190Q138 -10 94 26L86 19L77 10Q71 4 65 -1L54 -11H46H42Q39 -11 33 -5V74V132Q33 153 35 157T45 162H54Q66 162 70 158T75 146T82 119T101 77Q136 26 198 26Q295 26 295 104Q295 133 277 151Q257 175 194 187T111 210Q75 227 54 256T33 318Q33 357 50 384T93 424T143 442T187 447H198Q238 447 268 432L283 424L292 431Q302 440 314 448H322H326Q329 448 335 442V310L329 304H301Q295 310 295 316Z" transform="translate(944,0)"></path></g><g data-mml-node="mo" transform="translate(1338,0)"><path data-c="2061" d=""></path></g><g data-mml-node="mo" transform="translate(1338,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1727,0)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="mo" transform="translate(2196,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2862.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mfrac" transform="translate(3918.6,0)"><g data-mml-node="mrow" transform="translate(3299.8,398) scale(0.707)"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(500,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mn" transform="translate(1278,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(1778,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(2556,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(3056,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mn" transform="translate(3834,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(4334,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(5112,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(5612,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mn" transform="translate(6390,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(6890,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(7668,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(8168,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mn" transform="translate(8946,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mo" transform="translate(9446,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(10224,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(10724,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mn" transform="translate(11502,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(12002,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(12780,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(13280,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mn" transform="translate(14058,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(14558,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(15336,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mo" transform="translate(15836,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mn" transform="translate(16614,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(17114,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(17892,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mo" transform="translate(18392,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mn" transform="translate(19170,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(19670,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(20448,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mo" transform="translate(20948,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mn" transform="translate(21726,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="msqrt" transform="translate(220,-523.4) scale(0.707)"><g transform="translate(853,0)"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,289) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mo" transform="translate(936.6,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msup" transform="translate(1714.6,0)"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,289) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2651.1,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msup" transform="translate(3429.1,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,289) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mo" transform="translate(4365.7,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msup" transform="translate(5143.7,0)"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,289) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mo" transform="translate(6080.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msup" transform="translate(6858.2,0)"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,289) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mo" transform="translate(7794.8,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msup" transform="translate(8572.8,0)"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,289) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mo" transform="translate(9509.3,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msup" transform="translate(10287.3,0)"><g data-mml-node="mn"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,289) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mo" transform="translate(11223.9,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msup" transform="translate(12001.9,0)"><g data-mml-node="mn"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,289) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mo" transform="translate(12938.4,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msup" transform="translate(13716.4,0)"><g data-mml-node="mn"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,289) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mo" transform="translate(14653,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msup" transform="translate(15431,0)"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,289) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mo" transform="translate(16367.5,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msup" transform="translate(17145.5,0)"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,289) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mo" transform="translate(18082.1,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msup" transform="translate(18860.1,0)"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,289) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mo" transform="translate(19796.6,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msup" transform="translate(20574.6,0)"><g data-mml-node="mn"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,289) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mo" transform="translate(21511.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msup" transform="translate(22289.2,0)"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,289) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mo" transform="translate(23225.7,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msup" transform="translate(24003.7,0)"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,289) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mo" transform="translate(24940.3,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msup" transform="translate(25718.3,0)"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,289) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mo" transform="translate(26654.9,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msup" transform="translate(27432.9,0)"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,289) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mo" transform="translate(28369.4,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msup" transform="translate(29147.4,0)"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,289) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g><g data-mml-node="mo" transform="translate(0,124)"><path data-c="221A" d="M95 178Q89 178 81 186T72 200T103 230T169 280T207 309Q209 311 212 311H213Q219 311 227 294T281 177Q300 134 312 108L397 -77Q398 -77 501 136T707 565T814 786Q820 800 834 800Q841 800 846 794T853 782V776L620 293L385 -193Q381 -200 366 -200Q357 -200 354 -197Q352 -195 256 15L160 225L144 214Q129 202 113 190T95 178Z"></path></g><rect width="30084" height="42.4" x="853" y="881.6"></rect></g><rect width="22075.7" height="60" x="120" y="220"></rect></g></g></g></g><g data-mml-node="mtr" transform="translate(0,-115.2)"><g data-mml-node="mtd"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mfrac" transform="translate(1055.8,0)"><g data-mml-node="mn" transform="translate(1275,394) scale(0.707)"><path data-c="36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z"></path></g><g data-mml-node="mrow" transform="translate(220,-514.9) scale(0.707)"><g data-mml-node="msqrt"><g transform="translate(853,0)"><g data-mml-node="mn"><path data-c="37" d="M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z"></path></g></g><g data-mml-node="mo" transform="translate(0,112.1)"><path data-c="221A" d="M95 178Q89 178 81 186T72 200T103 230T169 280T207 309Q209 311 212 311H213Q219 311 227 294T281 177Q300 134 312 108L397 -77Q398 -77 501 136T707 565T814 786Q820 800 834 800Q841 800 846 794T853 782V776L620 293L385 -193Q381 -200 366 -200Q357 -200 354 -197Q352 -195 256 15L160 225L144 214Q129 202 113 190T95 178Z"></path></g><rect width="500" height="42.4" x="853" y="869.6"></rect></g><g data-mml-node="mo" transform="translate(1353,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="msqrt" transform="translate(2131,0)"><g transform="translate(853,0)"><g data-mml-node="mn"><path data-c="38" d="M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z"></path></g></g><g data-mml-node="mo" transform="translate(0,107.1)"><path data-c="221A" d="M95 178Q89 178 81 186T72 200T103 230T169 280T207 309Q209 311 212 311H213Q219 311 227 294T281 177Q300 134 312 108L397 -77Q398 -77 501 136T707 565T814 786Q820 800 834 800Q841 800 846 794T853 782V776L620 293L385 -193Q381 -200 366 -200Q357 -200 354 -197Q352 -195 256 15L160 225L144 214Q129 202 113 190T95 178Z"></path></g><rect width="500" height="42.4" x="853" y="864.6"></rect></g></g><rect width="2663.6" height="60" x="120" y="220"></rect></g></g></g></g><g data-mml-node="mtr" transform="translate(0,-1858.2)"><g data-mml-node="mtd"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1055.8,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(500,0)"></path><path data-c="38" d="M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z" transform="translate(778,0)"></path><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" transform="translate(1278,0)"></path></g></g></g></g></g></g></g></svg></mjx-container></span></p>
<h3 id="文本相似度计算的处理流程">文本相似度计算的处理流程</h3>
<ol start="0" type="1">
<li>【依据】<strong>词袋模型</strong> B.O.W</li>
<li> 找出两篇文章的关键词</li>
<li>每篇文章各取出若干个关键词，合并成一个集合，计算每篇文章对于这个集合中的词的词频</li>
<li>生成两篇文章各自的词频向量</li>
<li>计算两个向量的余弦相似度，值越大越相似</li>
</ol>
<h2 id="td-idf">TD-IDF</h2>
<h3 id="词频tf">词频 TF</h3>
<blockquote>
<p>假设：如果一个词很重要，应该会在文章中多次出现</p>
</blockquote>
<ul>
<li>词频：一个词在文章中出现的次数
<ul>
<li><strong>停用词</strong>：类似 “的”, “地”, “得” 对结果毫无帮助，必须过滤掉</li>
</ul></li>
</ul>
<h3 id="反文档频率idf">反文档频率 IDF</h3>
<blockquote>
<p>假设：如果某个词比较少见，但是它在这篇文章中多次出现，那么它很可能反应了这篇文章的特性，正是我们所需要的关键词</p>
</blockquote>
<ul>
<li>在词频的基础上，赋予每一个词的权重，进一步体现该词的重要性
<ul>
<li>最少见的词（“的”、“是”、“在”）给予最小的权重</li>
<li>较常见的词（“国内”、“中国”、“报道”）给予较小的权重</li>
<li>较少见的词（“养殖”、“维基”、” 涨停 “）</li>
</ul></li>
<li>将 <strong>TF</strong> 和 <strong>IDF</strong> 进行<strong>相乘</strong>，就得到了一个词的 <strong>TF-IDF 值</strong>，某个词对文章重要性越高，该值越大，于是排在前面的几个词，就是这篇文章的关键词。</li>
</ul>
<h3 id="计算步骤">计算步骤</h3>
<ol start="0" type="1">
<li>【前提】准备<strong>语料库</strong></li>
<li>计算 <strong>TF</strong>：某个词在文章中出现的次数
<ul>
<li>词频标准化（任选一种）
<ul>
<li>TF = 某个词在文章中出现的次数 / <strong>文章的总次数</strong></li>
<li> TF = 某个词在文章中出现的次数 / <strong>该文章出现次数最多的词的出现次数</strong></li>
</ul></li>
</ul></li>
<li>计算 <strong>IDF</strong>
<ul>
<li> 标准化
<ul>
<li>IDF = <strong>log (语料库的文档总数 / ( 包含该词的文档数 + 1) )</strong></li>
</ul></li>
</ul></li>
<li> 计算 <strong>TF-IDF</strong>
<ul>
<li>TF-IDF = 词频（TF）* 反文档频率（IDF）</li>
<li>TF-IDF 与一个词在文档中的出现次数成<strong>正比</strong>，与包含该词的文档数成<strong>反比</strong></li>
</ul></li>
</ol>
<h3 id="demo判断相似文章">【Demo】判断相似文章</h3>
<ul>
<li>步骤 1: 使用 TF-IDF 算法，找出两篇文章的关键词</li>
<li>步骤 2: 每篇文章各取出若干个关键词，合并成一个集合，计算每篇文章对于这个集合中的词的词频（为了避免文章长度的差异，可以使用<strong>相对词频</strong>）</li>
<li>步骤 3: 生成两篇文章各自的词频向量</li>
<li>步骤 4: 计算两个向量的余弦相似度，值越大越相似</li>
</ul>
<h3 id="demo自动摘要">【Demo】自动摘要</h3>
<blockquote>
<p>文章的信息都包含在句子中，有些句子包含的信息多，有些句子包含的信息少。“自动摘要” 就是要找出那些包含信息最多的句子。</p>
<p>句子的信息量用 “关键词” 来衡量。如果包含的关键词越多，就说明这个句子越重要。</p>
<p>只要关键词之间的距离小于 “门槛值”，它们就被认为处于同一个簇之中，如果两个关键词之间有超过 “门槛值” 个数以上的其他词，就可以把这两个关键词分在两个簇。</p>
<p>下一步，对于每个簇，都计算它的重要性分值。</p>
<blockquote>
<p>簇的重要性 = （包含的关键词数量）^2 / 簇的长度</p>
<blockquote>
<p>简化：不再区分 “簇”，只考虑句子包含的关键词</p>
</blockquote>
</blockquote>
</blockquote>
<ol type="1">
<li>确定关键词集合
<ul>
<li>取有限的次数（如 Top-10）</li>
<li>如：按 TF-IDF 分数 &gt; 0.7 截断</li>
</ul></li>
<li>找出包含关键词的句子</li>
<li>把句子做排序，对每个句子划分等级
<ul>
<li>包含关键词越多越重要</li>
<li>关键词分越高越重要</li>
</ul></li>
<li>把等级高的句子取出来，形成摘要</li>
</ol>
<ul>
<li>优点
<ul>
<li>简单快速，结果比较符合实际情况</li>
</ul></li>
<li>缺点
<ul>
<li>单纯以 “词频” 做衡量标准，不够全面，有时重要的词可能出现的次数并不多</li>
<li>该算法无法体现词的位置信息，出现位置靠前的词与出现位置靠后的词，都被视为重要性相同，这是不正确的
<ul>
<li>解决方法：对全文的第一段和每一段的第一句话给予较大权重。</li>
</ul></li>
</ul></li>
</ul>
<h3 id="案例代码tf-idf">【案例代码】TF-IDF</h3>
<ol type="1">
<li><p>TF</p>
<ol type="1">
<li><p>Map</p>
<figure class="highlight python"><figcaption><span>map_tf.py</span></figcaption><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">cnt = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> sys.stdin:</span><br><span class="line">    ss = line.strip().split(<span class="string">'\t'</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(ss) != <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    file_name, file_content = ss</span><br><span class="line">    word_list = file_content.strip().split(<span class="string">' '</span>)</span><br><span class="line">    <span class="keyword">for</span> word <span class="keyword">in</span> word_list:</span><br><span class="line">        cnt += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    file_count = file_name + <span class="string">':'</span> + <span class="built_in">str</span>(cnt)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> word <span class="keyword">in</span> word_list:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">'%s\t%s\t%s'</span> % (file_count, word, <span class="number">1</span>))</span><br><span class="line">    cnt = <span class="number">0</span></span><br></pre></td></tr></tbody></table></figure></li>
<li><p>Reduce</p>
<figure class="highlight python"><figcaption><span>red_tf.py</span></figcaption><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"></span><br><span class="line">current_file = <span class="literal">None</span></span><br><span class="line">current_word = <span class="literal">None</span></span><br><span class="line">current_count = <span class="number">0</span></span><br><span class="line"><span class="built_in">sum</span> = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> sys.stdin:</span><br><span class="line">    ss = line.strip().split(<span class="string">'\t'</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(ss) != <span class="number">3</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    file_count, word, val = ss</span><br><span class="line">    file_name, count = file_count.strip().split(<span class="string">':'</span>)</span><br><span class="line">    <span class="keyword">if</span> current_word <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        current_word = word</span><br><span class="line">    <span class="keyword">if</span> current_word != word:</span><br><span class="line">        tf = math.log(<span class="built_in">float</span>(<span class="built_in">sum</span>) / <span class="built_in">float</span>(current_count))</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">'%s\t%s\t%s'</span> % (current_file, current_word, tf))</span><br><span class="line">        current_word = word</span><br><span class="line">        <span class="built_in">sum</span> = <span class="number">0</span></span><br><span class="line">    <span class="built_in">sum</span> += <span class="built_in">int</span>(val)</span><br><span class="line">    current_file = file_name</span><br><span class="line">    current_count = count</span><br><span class="line"></span><br><span class="line">tf = math.log(<span class="built_in">float</span>(<span class="built_in">sum</span>) / <span class="built_in">float</span>(current_count))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'%s\t%s\t%s'</span> % (current_file, current_word, tf))</span><br></pre></td></tr></tbody></table></figure></li>
</ol></li>
<li><p>IDF</p>
<ol type="1">
<li><p>Map</p>
<figure class="highlight python"><figcaption><span>map_idf.py</span></figcaption><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> sys.stdin:</span><br><span class="line">    ss = line.strip().split(<span class="string">'\t'</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(ss) != <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    file_name, file_content = ss</span><br><span class="line">    word_list = file_content.strip().split(<span class="string">' '</span>)</span><br><span class="line"></span><br><span class="line">    word_set = <span class="built_in">set</span>(word_list)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> word <span class="keyword">in</span> word_set:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">'\t'</span>.join([word, <span class="string">'1'</span>]))</span><br></pre></td></tr></tbody></table></figure></li>
<li><p>Reduce</p>
<figure class="highlight python"><figcaption><span>red_idf.py</span></figcaption><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"></span><br><span class="line">current_word = <span class="literal">None</span></span><br><span class="line"><span class="built_in">sum</span> = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">docs_cnt = <span class="number">508</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> sys.stdin:</span><br><span class="line">    ss = line.strip().split(<span class="string">'\t'</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(ss) != <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    word, val = ss</span><br><span class="line">    <span class="keyword">if</span> current_word <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        current_word = word</span><br><span class="line">    <span class="keyword">if</span> current_word != word:</span><br><span class="line">        idf = math.log(<span class="built_in">float</span>(docs_cnt) / (<span class="built_in">float</span>(<span class="built_in">sum</span>) + <span class="number">1.0</span>))</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">'\t'</span>.join([current_word, <span class="built_in">str</span>(idf)]))</span><br><span class="line">        current_word = word</span><br><span class="line">        <span class="built_in">sum</span> = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">sum</span> += <span class="built_in">int</span>(val)</span><br><span class="line"></span><br><span class="line">idf = math.log(<span class="built_in">float</span>(docs_cnt) / (<span class="built_in">float</span>(<span class="built_in">sum</span>) + <span class="number">1.0</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'\t'</span>.join([current_word, <span class="built_in">str</span>(idf)]))</span><br></pre></td></tr></tbody></table></figure></li>
</ol></li>
<li><p>TF-IDF</p>
<ol type="1">
<li><p>Map</p>
<figure class="highlight python"><figcaption><span>map.py</span></figcaption><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read_local_file_func</span>(<span class="params">file</span>):</span></span><br><span class="line">    word_map = {}</span><br><span class="line">    file_in = <span class="built_in">open</span>(file, <span class="string">'r'</span>)</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> file_in:</span><br><span class="line">        ss = line.strip().split(<span class="string">'\t'</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(ss) != <span class="number">2</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        word, idf = ss</span><br><span class="line">        word_map[word] = idf</span><br><span class="line">    <span class="keyword">return</span> word_map</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mapper_func</span>(<span class="params">white_list_fd</span>):</span></span><br><span class="line">    word_map = read_local_file_func(white_list_fd)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> sys.stdin:</span><br><span class="line">        ss = line.strip().split(<span class="string">'\t'</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(ss) != <span class="number">3</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        file, word, tf = ss</span><br><span class="line">        <span class="keyword">if</span> word != <span class="string">""</span> <span class="keyword">and</span> (word <span class="keyword">in</span> word_map.keys()):</span><br><span class="line">            idf = word_map[word]</span><br><span class="line">            tfidf = <span class="built_in">float</span>(<span class="built_in">float</span>(tf) + <span class="built_in">float</span>(idf))</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">"%s\t%s\t%s"</span> % (file, tfidf, word))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    module = sys.modules[__name__]</span><br><span class="line">    func = <span class="built_in">getattr</span>(module, sys.argv[<span class="number">1</span>])</span><br><span class="line">    args = <span class="literal">None</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(sys.argv) &gt; <span class="number">1</span>:</span><br><span class="line">        args = sys.argv[<span class="number">2</span>:]</span><br><span class="line">    func(*args)</span><br></pre></td></tr></tbody></table></figure></li>
<li><p>Reduce</p>
<figure class="highlight python"><figcaption><span>red.py</span></figcaption><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">current_file = <span class="literal">None</span></span><br><span class="line">result = <span class="string">''</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> sys.stdin:</span><br><span class="line">    ss = line.strip().split(<span class="string">'\t'</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(ss) != <span class="number">3</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    file, tfidf, word = ss</span><br><span class="line">    <span class="keyword">if</span> current_file <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        current_file = file</span><br><span class="line">        result = current_file + <span class="string">'\t'</span></span><br><span class="line">    <span class="keyword">if</span> current_file != file:</span><br><span class="line">        <span class="built_in">print</span>(result[:-<span class="number">1</span>])</span><br><span class="line">        current_file = file</span><br><span class="line">        result = current_file + <span class="string">'\t'</span></span><br><span class="line"></span><br><span class="line">    result += word + <span class="string">':'</span> + tfidf + <span class="string">' '</span></span><br><span class="line"><span class="built_in">print</span>(result[:-<span class="number">1</span>])</span><br></pre></td></tr></tbody></table></figure></li>
</ol></li>
<li><p>【Hadoop Streaming 脚本】</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env bash</span></span><br><span class="line"></span><br><span class="line">HADOOP_CMD=<span class="string">"/usr/local/src/hadoop-2.8.5/bin/hadoop"</span></span><br><span class="line">STREAM_JAR_PATH=<span class="string">"/usr/local/src/hadoop-2.8.5/share/hadoop/tools/lib/hadoop-streaming-2.8.5.jar"</span></span><br><span class="line"></span><br><span class="line">INPUT_FILE_PATH=<span class="string">"/chapter02/01_tfidf/tfidf_input.data"</span></span><br><span class="line">OUTPUT_PATH_TF=<span class="string">"/chapter02/01_tfidf/output/python3/tf"</span></span><br><span class="line">OUTPUT_PATH_IDF=<span class="string">"/chapter02/01_tfidf/output/python3/idf"</span></span><br><span class="line">OUTPUT_PATH_TFIDF=<span class="string">"/chapter02/01_tfidf/output/python3/tfidf"</span></span><br><span class="line">LOCAL_FILE_PATH=<span class="string">"/mnt/hgfs/Code/chapter02/01_tfidf/tfidf_input.data"</span></span><br><span class="line">UPLOAD_PATH=<span class="string">"/chapter02/01_tfidf"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> fs -rm -r -skipTrash <span class="variable">${INPUT_FILE_PATH}</span></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> fs -rm -r -skipTrash <span class="variable">${OUTPUT_PATH_TF}</span></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> fs -rm -r -skipTrash <span class="variable">${OUTPUT_PATH_IDF}</span></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> fs -rm -r -skipTrash <span class="variable">${OUTPUT_PATH_TFIDF}</span></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> fs -mkdir -p <span class="variable">${UPLOAD_PATH}</span></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> fs -put <span class="variable">${LOCAL_FILE_PATH}</span> <span class="variable">${UPLOAD_PATH}</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Step 1. tf</span></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> jar <span class="variable">${STREAM_JAR_PATH}</span> \</span><br><span class="line">    -D stream.num.map.output.key.fields=2 \</span><br><span class="line">    -D num.key.fields.for.partition=1 \</span><br><span class="line">    -files map_tf.py,red_tf.py \</span><br><span class="line">    -input <span class="variable">${INPUT_FILE_PATH}</span> \</span><br><span class="line">    -output <span class="variable">${OUTPUT_PATH_TF}</span> \</span><br><span class="line">    -mapper <span class="string">"python map_tf.py"</span> \</span><br><span class="line">    -reducer <span class="string">"python red_tf.py"</span> \</span><br><span class="line">    -partitioner org.apache.hadoop.mapred.lib.KeyFieldBasedPartitioner \</span><br><span class="line"></span><br><span class="line"><span class="comment"># Step 2. idf</span></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> jar <span class="variable">${STREAM_JAR_PATH}</span> \</span><br><span class="line">    -files map_idf.py,red_idf.py \</span><br><span class="line">    -input <span class="variable">${INPUT_FILE_PATH}</span> \</span><br><span class="line">    -output <span class="variable">${OUTPUT_PATH_IDF}</span> \</span><br><span class="line">    -mapper <span class="string">"python map_idf.py"</span> \</span><br><span class="line">    -reducer <span class="string">"python red_idf.py"</span> \</span><br><span class="line"></span><br><span class="line"><span class="comment"># Step 3. tf-idf</span></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> jar <span class="variable">${STREAM_JAR_PATH}</span> \</span><br><span class="line">    -D stream.num.map.output.key.fields=2 \</span><br><span class="line">    -D num.key.fields.for.partition=1 \</span><br><span class="line">    -files map.py,red.py,<span class="string">"hdfs://master:9000/chapter02/01_tfidf/output/python3/idf/part-00000#WH"</span>  \</span><br><span class="line">    -input <span class="variable">${OUTPUT_PATH_TF}</span> \</span><br><span class="line">    -output <span class="variable">${OUTPUT_PATH_TFIDF}</span> \</span><br><span class="line">    -mapper <span class="string">"python map.py mapper_func WH"</span> \</span><br><span class="line">    -reducer <span class="string">"python red.py"</span> \</span><br><span class="line">    -partitioner org.apache.hadoop.mapred.lib.KeyFieldBasedPartitioner \</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure></li>
</ol>
<h2 id="lcs">LCS</h2>
<blockquote>
<p>LCS：最长公共子序列 (Longest Common Subsequence)</p>
</blockquote>
<ul>
<li>注意区别最长公共子串 (Longest Common Substring)
<ul>
<li>最长公共子串要求连续</li>
</ul></li>
<li>用于描述两段文字之间的 “相似度”
<ul>
<li>辨别抄袭，对一段文字进行修改后，计算改动前后文字的最长公共子序列。将除此子序列外的部分提取出来，用该方法判断修改的部分</li>
</ul></li>
<li>可用于推荐结果过滤（相似项目）</li>
</ul>
<h3 id="解法1暴力穷举">解法 1：暴力穷举</h3>
<blockquote>
<p>假设字符串 X, Y 长度分别为 m, n</p>
</blockquote>
<p>X 的一个子序列，即下标序列 {1, 2, …, m} 严格递增子序列</p>
<ul>
<li>X 共有 2^m 个不同子序列</li>
<li> Y 共有 2^n 个不同子序列</li>
</ul>
<p><strong>时间复杂度: O (2^m * 2^n)</strong>, 基本不可用</p>
<h3 id="解法2动态规划dp">解法 2：动态规划 DP</h3>
<p><span class="math display"><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.149ex" xmlns="http://www.w3.org/2000/svg" width="68.453ex" height="5.43ex" role="img" focusable="false" viewBox="0 -1450 30256.2 2400"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43F" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g><g data-mml-node="mi" transform="translate(681,0)"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g><g data-mml-node="mi" transform="translate(1441,0)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g><g data-mml-node="mrow" transform="translate(2252.7,0)"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(389,0)"><g data-mml-node="mi"><path data-c="1D44B" d="M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z"></path></g><g data-mml-node="TeXAtom" transform="translate(861,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1920.8,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(2365.5,0)"><g data-mml-node="mi"><path data-c="1D44C" d="M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z"></path></g><g data-mml-node="TeXAtom" transform="translate(614,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(3453.8,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mo" transform="translate(6373.2,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mrow" transform="translate(7429,0)"><g data-mml-node="mo" transform="translate(0 -0.5)"><path data-c="7B" d="M618 -943L612 -949H582L568 -943Q472 -903 411 -841T332 -703Q327 -682 327 -653T325 -350Q324 -28 323 -18Q317 24 301 61T264 124T221 171T179 205T147 225T132 234Q130 238 130 250Q130 255 130 258T131 264T132 267T134 269T139 272T144 275Q207 308 256 367Q310 436 323 519Q324 529 325 851Q326 1124 326 1154T332 1205Q369 1358 566 1443L582 1450H612L618 1444V1429Q618 1413 616 1411L608 1406Q599 1402 585 1393T552 1372T515 1343T479 1305T449 1257T429 1200Q425 1180 425 1152T423 851Q422 579 422 549T416 498Q407 459 388 424T346 364T297 318T250 284T214 264T197 254L188 251L205 242Q290 200 345 138T416 3Q421 -18 421 -48T423 -349Q423 -397 423 -472Q424 -677 428 -694Q429 -697 429 -699Q434 -722 443 -743T465 -782T491 -816T519 -845T548 -868T574 -886T595 -899T610 -908L616 -910Q618 -912 618 -928V-943Z"></path></g><g data-mml-node="mtable" transform="translate(750,0)"><g data-mml-node="mtr" transform="translate(0,700)"><g data-mml-node="mtd"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D43F" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g><g data-mml-node="mi" transform="translate(681,0)"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g><g data-mml-node="mi" transform="translate(1441,0)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g><g data-mml-node="mrow" transform="translate(2252.7,0)"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(389,0)"><g data-mml-node="mi"><path data-c="1D44B" d="M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z"></path></g><g data-mml-node="TeXAtom" transform="translate(861,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(878,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1656,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2824.5,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(3269.2,0)"><g data-mml-node="mi"><path data-c="1D44C" d="M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z"></path></g><g data-mml-node="TeXAtom" transform="translate(614,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(600,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1378,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(5261.1,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mo" transform="translate(8125,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msub" transform="translate(9125.2,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g></g></g><g data-mml-node="mtd" transform="translate(18470.6,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1553.6,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msub" transform="translate(2609.4,0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(523,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></g></g></g><g data-mml-node="mtr" transform="translate(0,-700)"><g data-mml-node="mtd"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="6D" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z"></path><path data-c="61" d="M137 305T115 305T78 320T63 359Q63 394 97 421T218 448Q291 448 336 416T396 340Q401 326 401 309T402 194V124Q402 76 407 58T428 40Q443 40 448 56T453 109V145H493V106Q492 66 490 59Q481 29 455 12T400 -6T353 12T329 54V58L327 55Q325 52 322 49T314 40T302 29T287 17T269 6T247 -2T221 -8T190 -11Q130 -11 82 20T34 107Q34 128 41 147T68 188T116 225T194 253T304 268H318V290Q318 324 312 340Q290 411 215 411Q197 411 181 410T156 406T148 403Q170 388 170 359Q170 334 154 320ZM126 106Q126 75 150 51T209 26Q247 26 276 49T315 109Q317 116 318 175Q318 233 317 233Q309 233 296 232T251 223T193 203T147 166T126 106Z" transform="translate(833,0)"></path><path data-c="78" d="M201 0Q189 3 102 3Q26 3 17 0H11V46H25Q48 47 67 52T96 61T121 78T139 96T160 122T180 150L226 210L168 288Q159 301 149 315T133 336T122 351T113 363T107 370T100 376T94 379T88 381T80 383Q74 383 44 385H16V431H23Q59 429 126 429Q219 429 229 431H237V385Q201 381 201 369Q201 367 211 353T239 315T268 274L272 270L297 304Q329 345 329 358Q329 364 327 369T322 376T317 380T310 384L307 385H302V431H309Q324 428 408 428Q487 428 493 431H499V385H492Q443 385 411 368Q394 360 377 341T312 257L296 236L358 151Q424 61 429 57T446 50Q464 46 499 46H516V0H510H502Q494 1 482 1T457 2T432 2T414 3Q403 3 377 3T327 1L304 0H295V46H298Q309 46 320 51T331 63Q331 65 291 120L250 175Q249 174 219 133T185 88Q181 83 181 74Q181 63 188 55T206 46Q208 46 208 23V0H201Z" transform="translate(1333,0)"></path></g><g data-mml-node="mrow" transform="translate(2027.7,0)"><g data-mml-node="mo"><path data-c="7B" d="M434 -231Q434 -244 428 -250H410Q281 -250 230 -184Q225 -177 222 -172T217 -161T213 -148T211 -133T210 -111T209 -84T209 -47T209 0Q209 21 209 53Q208 142 204 153Q203 154 203 155Q189 191 153 211T82 231Q71 231 68 234T65 250T68 266T82 269Q116 269 152 289T203 345Q208 356 208 377T209 529V579Q209 634 215 656T244 698Q270 724 324 740Q361 748 377 749Q379 749 390 749T408 750H428Q434 744 434 732Q434 719 431 716Q429 713 415 713Q362 710 332 689T296 647Q291 634 291 499V417Q291 370 288 353T271 314Q240 271 184 255L170 250L184 245Q202 239 220 230T262 196T290 137Q291 131 291 1Q291 -134 296 -147Q306 -174 339 -192T415 -213Q429 -213 431 -216Q434 -219 434 -231Z"></path></g><g data-mml-node="mi" transform="translate(500,0)"><path data-c="1D43F" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g><g data-mml-node="mi" transform="translate(1181,0)"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g><g data-mml-node="mi" transform="translate(1941,0)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g><g data-mml-node="mrow" transform="translate(2752.7,0)"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(389,0)"><g data-mml-node="mi"><path data-c="1D44B" d="M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z"></path></g><g data-mml-node="TeXAtom" transform="translate(861,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(878,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1656,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2824.5,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(3269.2,0)"><g data-mml-node="mi"><path data-c="1D44C" d="M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z"></path></g><g data-mml-node="TeXAtom" transform="translate(614,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(4357.5,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mo" transform="translate(7499.1,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(7943.8,0)"><path data-c="1D43F" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g><g data-mml-node="mi" transform="translate(8624.8,0)"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g><g data-mml-node="mi" transform="translate(9384.8,0)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g><g data-mml-node="mrow" transform="translate(10196.5,0)"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(389,0)"><g data-mml-node="mi"><path data-c="1D44B" d="M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z"></path></g><g data-mml-node="TeXAtom" transform="translate(861,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1920.8,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(2365.5,0)"><g data-mml-node="mi"><path data-c="1D44C" d="M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z"></path></g><g data-mml-node="TeXAtom" transform="translate(614,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(600,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1378,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(4357.5,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mo" transform="translate(14942.9,0)"><path data-c="7D" d="M65 731Q65 745 68 747T88 750Q171 750 216 725T279 670Q288 649 289 635T291 501Q292 362 293 357Q306 312 345 291T417 269Q428 269 431 266T434 250T431 234T417 231Q380 231 345 210T298 157Q293 143 292 121T291 -28V-79Q291 -134 285 -156T256 -198Q202 -250 89 -250Q71 -250 68 -247T65 -230Q65 -224 65 -223T66 -218T69 -214T77 -213Q91 -213 108 -210T146 -200T183 -177T207 -139Q208 -134 209 3L210 139Q223 196 280 230Q315 247 330 250Q305 257 280 270Q225 304 212 352L210 362L209 498Q208 635 207 640Q195 680 154 696T77 713Q68 713 67 716T65 731Z"></path></g></g></g></g><g data-mml-node="mtd" transform="translate(18470.6,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1553.6,0)"><path data-c="2260" d="M166 -215T159 -215T147 -212T141 -204T139 -197Q139 -190 144 -183L306 133H70Q56 140 56 153Q56 168 72 173H327L406 327H72Q56 332 56 347Q56 360 70 367H426Q597 702 602 707Q605 716 618 716Q625 716 630 712T636 703T638 696Q638 692 471 367H707Q722 359 722 347Q722 336 708 328L451 327L371 173H708Q722 163 722 153Q722 140 707 133H351Q175 -210 170 -212Q166 -215 159 -215Z"></path></g><g data-mml-node="msub" transform="translate(2609.4,0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(523,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></g></g></g></g><g data-mml-node="mo" transform="translate(22827.2,0) translate(0 250)"></g></g></g></g></svg></mjx-container></span></p>
<ul>
<li>使用二维数组 C [m, n]</li>
<li>C [i, j] 记录序列 Xi 和 Yj 的最长公共子序列的长度
<ul>
<li>当 i = 0 或 j = 0 时，空序列时 Xi 和 Yj 的最长公共子序列，故 C [i, j] = 0</li>
</ul></li>
</ul>
<p><span class="math display"><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -3.833ex" xmlns="http://www.w3.org/2000/svg" width="61.823ex" height="8.798ex" role="img" focusable="false" viewBox="0 -2194.2 27325.7 3888.5"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mo" transform="translate(433,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(822,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(1167,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(1611.7,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(2023.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2690.4,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mrow" transform="translate(3746.2,0)"><g data-mml-node="mo"><path data-c="23A7" d="M712 899L718 893V876V865Q718 854 704 846Q627 793 577 710T510 525Q510 524 509 521Q505 493 504 349Q504 345 504 334Q504 277 504 240Q504 -2 503 -4Q502 -8 494 -9T444 -10Q392 -10 390 -9Q387 -8 386 -5Q384 5 384 230Q384 262 384 312T383 382Q383 481 392 535T434 656Q510 806 664 892L677 899H712Z" transform="translate(0,1295.2)"></path><path data-c="23A9" d="M718 -893L712 -899H677L666 -893Q542 -825 468 -714T385 -476Q384 -466 384 -282Q384 3 385 5L389 9Q392 10 444 10Q486 10 494 9T503 4Q504 2 504 -239V-310V-366Q504 -470 508 -513T530 -609Q546 -657 569 -698T617 -767T661 -812T699 -843T717 -856T718 -876V-893Z" transform="translate(0,-795.2)"></path><path data-c="23A8" d="M389 1159Q391 1160 455 1160Q496 1160 498 1159Q501 1158 502 1155Q504 1145 504 924Q504 691 503 682Q494 549 425 439T243 259L229 250L243 241Q349 175 421 66T503 -182Q504 -191 504 -424Q504 -600 504 -629T499 -659H498Q496 -660 444 -660T390 -659Q387 -658 386 -655Q384 -645 384 -425V-282Q384 -176 377 -116T342 10Q325 54 301 92T255 155T214 196T183 222T171 232Q170 233 170 250T171 268Q171 269 191 284T240 331T300 407T354 524T383 679Q384 691 384 925Q384 1152 385 1155L389 1159Z" transform="translate(0,0)"></path><svg width="889" height="325.2" y="1060" x="0" viewBox="0 57.3 889 325.2"><path data-c="23AA" d="M384 150V266Q384 304 389 309Q391 310 455 310Q496 310 498 309Q502 308 503 298Q504 283 504 150Q504 32 504 12T499 -9H498Q496 -10 444 -10T390 -9Q386 -8 385 2Q384 17 384 150Z" transform="scale(1,1.6)"></path></svg><svg width="889" height="325.2" y="-885.2" x="0" viewBox="0 57.3 889 325.2"><path data-c="23AA" d="M384 150V266Q384 304 389 309Q391 310 455 310Q496 310 498 309Q502 308 503 298Q504 283 504 150Q504 32 504 12T499 -9H498Q496 -10 444 -10T390 -9Q386 -8 385 2Q384 17 384 150Z" transform="scale(1,1.6)"></path></svg></g><g data-mml-node="mtable" transform="translate(889,0)"><g data-mml-node="mtr" transform="translate(0,1444.2)"><g data-mml-node="mtd" transform="translate(5537.9,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g><g data-mml-node="mtd" transform="translate(14703.1,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(622.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1678.6,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mtext" transform="translate(2178.6,0)"><path data-c="A0" d=""></path></g><g data-mml-node="mi" transform="translate(2428.6,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(2913.6,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mtext" transform="translate(3364.6,0)"><path data-c="A0" d=""></path></g><g data-mml-node="mi" transform="translate(3614.6,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(4304.3,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(5360.1,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g></g><g data-mml-node="mtr" transform="translate(0,44.2)"><g data-mml-node="mtd" transform="translate(1997.9,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mo" transform="translate(433,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(822,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(1389.2,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(2389.4,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(2889.4,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(3334.1,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(3968.3,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(4968.6,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(5468.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(6079.8,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(7080,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mtd" transform="translate(12575.9,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(622.8,0)"><path data-c="3E" d="M84 520Q84 528 88 533T96 539L99 540Q106 540 253 471T544 334L687 265Q694 260 694 250T687 235Q685 233 395 96L107 -40H101Q83 -38 83 -20Q83 -19 83 -17Q82 -10 98 -1Q117 9 248 71Q326 108 378 132L626 250L378 368Q90 504 86 509Q84 513 84 520Z"></path></g><g data-mml-node="mn" transform="translate(1678.6,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mo" transform="translate(2178.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(2623.2,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(3313,0)"><path data-c="3E" d="M84 520Q84 528 88 533T96 539L99 540Q106 540 253 471T544 334L687 265Q694 260 694 250T687 235Q685 233 395 96L107 -40H101Q83 -38 83 -20Q83 -19 83 -17Q82 -10 98 -1Q117 9 248 71Q326 108 378 132L626 250L378 368Q90 504 86 509Q84 513 84 520Z"></path></g><g data-mml-node="mn" transform="translate(4368.8,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mtext" transform="translate(4868.8,0)"><path data-c="A0" d=""></path></g><g data-mml-node="mi" transform="translate(5118.8,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(5647.8,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(6247.8,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mtext" transform="translate(6767.8,0)"><path data-c="A0" d=""></path></g><g data-mml-node="msub" transform="translate(7017.8,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(8194.5,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msub" transform="translate(9250.3,0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(523,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g></g></g></g><g data-mml-node="mtr" transform="translate(0,-1400)"><g data-mml-node="mtd"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="6D" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z"></path><path data-c="61" d="M137 305T115 305T78 320T63 359Q63 394 97 421T218 448Q291 448 336 416T396 340Q401 326 401 309T402 194V124Q402 76 407 58T428 40Q443 40 448 56T453 109V145H493V106Q492 66 490 59Q481 29 455 12T400 -6T353 12T329 54V58L327 55Q325 52 322 49T314 40T302 29T287 17T269 6T247 -2T221 -8T190 -11Q130 -11 82 20T34 107Q34 128 41 147T68 188T116 225T194 253T304 268H318V290Q318 324 312 340Q290 411 215 411Q197 411 181 410T156 406T148 403Q170 388 170 359Q170 334 154 320ZM126 106Q126 75 150 51T209 26Q247 26 276 49T315 109Q317 116 318 175Q318 233 317 233Q309 233 296 232T251 223T193 203T147 166T126 106Z" transform="translate(833,0)"></path><path data-c="78" d="M201 0Q189 3 102 3Q26 3 17 0H11V46H25Q48 47 67 52T96 61T121 78T139 96T160 122T180 150L226 210L168 288Q159 301 149 315T133 336T122 351T113 363T107 370T100 376T94 379T88 381T80 383Q74 383 44 385H16V431H23Q59 429 126 429Q219 429 229 431H237V385Q201 381 201 369Q201 367 211 353T239 315T268 274L272 270L297 304Q329 345 329 358Q329 364 327 369T322 376T317 380T310 384L307 385H302V431H309Q324 428 408 428Q487 428 493 431H499V385H492Q443 385 411 368Q394 360 377 341T312 257L296 236L358 151Q424 61 429 57T446 50Q464 46 499 46H516V0H510H502Q494 1 482 1T457 2T432 2T414 3Q403 3 377 3T327 1L304 0H295V46H298Q309 46 320 51T331 63Q331 65 291 120L250 175Q249 174 219 133T185 88Q181 83 181 74Q181 63 188 55T206 46Q208 46 208 23V0H201Z" transform="translate(1333,0)"></path></g><g data-mml-node="mo" transform="translate(1861,0)"><path data-c="7B" d="M434 -231Q434 -244 428 -250H410Q281 -250 230 -184Q225 -177 222 -172T217 -161T213 -148T211 -133T210 -111T209 -84T209 -47T209 0Q209 21 209 53Q208 142 204 153Q203 154 203 155Q189 191 153 211T82 231Q71 231 68 234T65 250T68 266T82 269Q116 269 152 289T203 345Q208 356 208 377T209 529V579Q209 634 215 656T244 698Q270 724 324 740Q361 748 377 749Q379 749 390 749T408 750H428Q434 744 434 732Q434 719 431 716Q429 713 415 713Q362 710 332 689T296 647Q291 634 291 499V417Q291 370 288 353T271 314Q240 271 184 255L170 250L184 245Q202 239 220 230T262 196T290 137Q291 131 291 1Q291 -134 296 -147Q306 -174 339 -192T415 -213Q429 -213 431 -216Q434 -219 434 -231Z"></path></g><g data-mml-node="mi" transform="translate(2361,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mo" transform="translate(2794,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(3183,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(3750.2,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(4750.4,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(5250.4,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(5695.1,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(6107.1,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(6496.1,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(6940.8,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mo" transform="translate(7373.8,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(7762.8,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(8107.8,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(8552.4,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(9186.7,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(10186.9,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(10686.9,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(11075.9,0)"><path data-c="7D" d="M65 731Q65 745 68 747T88 750Q171 750 216 725T279 670Q288 649 289 635T291 501Q292 362 293 357Q306 312 345 291T417 269Q428 269 431 266T434 250T431 234T417 231Q380 231 345 210T298 157Q293 143 292 121T291 -28V-79Q291 -134 285 -156T256 -198Q202 -250 89 -250Q71 -250 68 -247T65 -230Q65 -224 65 -223T66 -218T69 -214T77 -213Q91 -213 108 -210T146 -200T183 -177T207 -139Q208 -134 209 3L210 139Q223 196 280 230Q315 247 330 250Q305 257 280 270Q225 304 212 352L210 362L209 498Q208 635 207 640Q195 680 154 696T77 713Q68 713 67 716T65 731Z"></path></g></g></g><g data-mml-node="mtd" transform="translate(12575.9,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(622.8,0)"><path data-c="3E" d="M84 520Q84 528 88 533T96 539L99 540Q106 540 253 471T544 334L687 265Q694 260 694 250T687 235Q685 233 395 96L107 -40H101Q83 -38 83 -20Q83 -19 83 -17Q82 -10 98 -1Q117 9 248 71Q326 108 378 132L626 250L378 368Q90 504 86 509Q84 513 84 520Z"></path></g><g data-mml-node="mn" transform="translate(1678.6,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mo" transform="translate(2178.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(2623.2,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(3313,0)"><path data-c="3E" d="M84 520Q84 528 88 533T96 539L99 540Q106 540 253 471T544 334L687 265Q694 260 694 250T687 235Q685 233 395 96L107 -40H101Q83 -38 83 -20Q83 -19 83 -17Q82 -10 98 -1Q117 9 248 71Q326 108 378 132L626 250L378 368Q90 504 86 509Q84 513 84 520Z"></path></g><g data-mml-node="mn" transform="translate(4368.8,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mtext" transform="translate(4868.8,0)"><path data-c="A0" d=""></path></g><g data-mml-node="mi" transform="translate(5118.8,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(5647.8,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(6247.8,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mtext" transform="translate(6767.8,0)"><path data-c="A0" d=""></path></g><g data-mml-node="msub" transform="translate(7017.8,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(8194.5,0)"><path data-c="2260" d="M166 -215T159 -215T147 -212T141 -204T139 -197Q139 -190 144 -183L306 133H70Q56 140 56 153Q56 168 72 173H327L406 327H72Q56 332 56 347Q56 360 70 367H426Q597 702 602 707Q605 716 618 716Q625 716 630 712T636 703T638 696Q638 692 471 367H707Q722 359 722 347Q722 336 708 328L451 327L371 173H708Q722 163 722 153Q722 140 707 133H351Q175 -210 170 -212Q166 -215 159 -215Z"></path></g><g data-mml-node="msub" transform="translate(9250.3,0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(523,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g></g></g></g></g><g data-mml-node="mo" transform="translate(23579.5,0) translate(0 250)"></g></g></g></g></svg></mjx-container></span></p>
<h3 id="案例代码lcs">【案例代码】LCS</h3>
<ol type="1">
<li><p>Map</p>
<figure class="highlight python"><figcaption><span>map.py</span></figcaption><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cal_lcs</span>(<span class="params">str_1, str_2</span>):</span></span><br><span class="line">    len_1 = <span class="built_in">len</span>(str_1.strip())</span><br><span class="line">    len_2 = <span class="built_in">len</span>(str_2.strip())</span><br><span class="line"></span><br><span class="line">    tmp = <span class="built_in">max</span>(len_1, len_2) + <span class="number">10</span></span><br><span class="line"></span><br><span class="line">    len_vv = [[<span class="number">0</span>] * tmp] * tmp</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, len_1 + <span class="number">1</span>):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, len_2 + <span class="number">1</span>):</span><br><span class="line">            <span class="keyword">if</span> str_1[i - <span class="number">1</span>] == str_2[j - <span class="number">1</span>]:</span><br><span class="line">                len_vv[i][j] = len_vv[i - <span class="number">1</span>][j - <span class="number">1</span>] + <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                len_vv[i][j] = <span class="built_in">max</span>(len_vv[i - <span class="number">1</span>][j], len_vv[i][j - <span class="number">1</span>])</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">float</span>(<span class="built_in">float</span>(len_vv[len_1][len_2] * <span class="number">2</span>) / <span class="built_in">float</span>(len_1 + len_2))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> sys.stdin:</span><br><span class="line">    ss = line.strip().split(<span class="string">'\t'</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(ss) != <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    str_1, str_2 = ss</span><br><span class="line"></span><br><span class="line">    cos_score = cal_lcs(str_1, str_2)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'%s\t%s\t%s'</span> % (str_1, str_2, cos_score))</span><br></pre></td></tr></tbody></table></figure></li>
<li><p>【Hadoop Streaming 脚本】</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env bash</span></span><br><span class="line"></span><br><span class="line">HADOOP_CMD=<span class="string">"/usr/local/src/hadoop-2.8.5/bin/hadoop"</span></span><br><span class="line">STREAM_JAR_PATH=<span class="string">"/usr/local/src/hadoop-2.8.5/share/hadoop/tools/lib/hadoop-streaming-2.8.5.jar"</span></span><br><span class="line"></span><br><span class="line">INPUT_FILE_PATH=<span class="string">"/chapter02/02_lcs/lcs_input.data"</span></span><br><span class="line">OUTPUT_PATH=<span class="string">"/chapter02/02_lcs/output/python3"</span></span><br><span class="line">LOCAL_FILE_PATH=<span class="string">"/mnt/hgfs/Code/chapter02/02_lcs/lcs_input.data"</span></span><br><span class="line">UPLOAD_PATH=<span class="string">"/chapter02/02_lcs"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> fs -rm -r -skipTrash <span class="variable">${INPUT_FILE_PATH}</span></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> fs -rm -r -skipTrash <span class="variable">${OUTPUT_PATH}</span></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> fs -mkdir -p <span class="variable">${UPLOAD_PATH}</span></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> fs -put <span class="variable">${LOCAL_FILE_PATH}</span> <span class="variable">${UPLOAD_PATH}</span></span><br><span class="line"></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> jar <span class="variable">${STREAM_JAR_PATH}</span> \</span><br><span class="line">    -D mapreduce.job.reduces=0 \</span><br><span class="line">    -D mapreduce.job.name=lcs_demo \</span><br><span class="line">    -files map.py \</span><br><span class="line">    -input <span class="variable">${INPUT_FILE_PATH}</span> \</span><br><span class="line">    -output <span class="variable">${OUTPUT_PATH}</span> \</span><br><span class="line">    -mapper <span class="string">"python map.py"</span> \</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure></li>
</ol>
<h1 id="中文分词">中文分词</h1>
<h2 id="中文分词基础">中文分词基础</h2>
<h3 id="背景">背景</h3>
<blockquote>
<p>一段文字不仅仅在于字面上是什么，还在于怎么切分和理解</p>
</blockquote>
<p>与英文不同，中文词之间没有空格，所以实现中文搜索引擎，比英文多了项分词的任务</p>
<ul>
<li>分词粒度
<ul>
<li>粗粒度：推荐场景</li>
<li>细粒度：搜索场景（召回候选）</li>
</ul></li>
<li>切分方法
<ul>
<li>01bit
<ul>
<li>切开的开始位置对应位是 1，否则对应位是 0</li>
<li>“有 / 意见 / 分歧” 的 bit 内容是 11010</li>
</ul></li>
<li> 节点序列
<ul>
<li>用分词节点序列表示切分方案</li>
<li> “有 / 意见 / 分歧” 的分词节点序列是 {0, 1, 3, 5}</li>
</ul></li>
<li> 基于词典匹配
<ul>
<li>最大长度匹配
<ul>
<li>前向查找</li>
<li>后向查找（一般效果较好）</li>
</ul></li>
</ul></li>
</ul></li>
<li>数据结构
<ul>
<li>为了提高查找效率，不要逐个匹配词典中的词</li>
<li>查找词典所占的时间可能占总的分词时间的 1/3 左右，为了保证切分速度，需要选择一个好的查找词典方法</li>
<li> Trie 树常用于加速分词查找词典问题</li>
</ul></li>
</ul>
<p>###【Demo】Trie 树</p>
<ul>
<li>正向
<ul>
<li>北京大学生活动中心
<ul>
<li>Root
<ul>
<li>北 - 京</li>
<li>北 - 京 - 大 - 学</li>
<li>大 - 学 - 生</li>
<li>学 - 生</li>
<li>生 - 活</li>
<li>活 - 动</li>
<li>中 - 心</li>
</ul></li>
</ul></li>
<li>结果：北京大学 / 生活 / 动 / 中心</li>
</ul></li>
<li>反向
<ul>
<li>北京大学生活动中心
<ul>
<li>Root
<ul>
<li>心 - 中</li>
<li>动 - 活</li>
<li>活 - 生</li>
<li>生 - 学</li>
<li>生 - 学 - 大</li>
<li>学 - 大 - 京 - 北</li>
<li>京 - 北</li>
</ul></li>
</ul></li>
<li>结果：北京 / 大学生 / 活动 / 中心</li>
</ul></li>
</ul>
<h3 id="demodag词图">【Demo】DAG 词图</h3>
<p>例：广州本田雅阁汽车</p>
<p>【DAG】：{0: [0, 1, 3], 1: [1], 2: [2, 3, 5], 3: [3], 4: [4, 5], 5: [5], 6: [6, 7], 7: [7]}</p>
<figure>
<img data-src="https://image.alessa0.cn/123359.png" alt="DAG"><figcaption aria-hidden="true">DAG</figcaption>
</figure>
<h2 id="概率语言模型">概率语言模型</h2>
<blockquote>
<p>假设需要分出来的词在语料库和词表中都存在，最简单的方法是按词计算概率。</p>
<p>从统计思想的角度看，分词问题的输入是一个字串 C = c1, c2, …, cN，输出是一个词串 S = w1, w2, …, wM，其中 M &lt;= N。对于一个特定的字符串 C，会有多个切分方案 S 对应，分词的任务就是从不同 S 中找出一个切分方案，使得 P (S|C) 值最大。</p>
<p>P (S|C) 就是由字符串 C 产生切分 S 的概率，也就是对输入字符串切分出最有可能的词序列。 <span class="math display"><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.172ex" xmlns="http://www.w3.org/2000/svg" width="49.583ex" height="5.475ex" role="img" focusable="false" viewBox="0 -1460 21915.8 2420"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="53" d="M55 507Q55 590 112 647T243 704H257Q342 704 405 641L426 672Q431 679 436 687T446 700L449 704Q450 704 453 704T459 705H463Q466 705 472 699V462L466 456H448Q437 456 435 459T430 479Q413 605 329 646Q292 662 254 662Q201 662 168 626T135 542Q135 508 152 480T200 435Q210 431 286 412T370 389Q427 367 463 314T500 191Q500 110 448 45T301 -21Q245 -21 201 -4T140 27L122 41Q118 36 107 21T87 -7T78 -21Q76 -22 68 -22H64Q61 -22 55 -16V101Q55 220 56 222Q58 227 76 227H89Q95 221 95 214Q95 182 105 151T139 90T205 42T305 24Q352 24 386 62T420 155Q420 198 398 233T340 281Q284 295 266 300Q261 301 239 306T206 314T174 325T141 343T112 367T85 402Q55 451 55 507Z"></path><path data-c="65" d="M28 218Q28 273 48 318T98 391T163 433T229 448Q282 448 320 430T378 380T406 316T415 245Q415 238 408 231H126V216Q126 68 226 36Q246 30 270 30Q312 30 342 62Q359 79 369 104L379 128Q382 131 395 131H398Q415 131 415 121Q415 117 412 108Q393 53 349 21T250 -11Q155 -11 92 58T28 218ZM333 275Q322 403 238 411H236Q228 411 220 410T195 402T166 381T143 340T127 274V267H333V275Z" transform="translate(556,0)"></path><path data-c="67" d="M329 409Q373 453 429 453Q459 453 472 434T485 396Q485 382 476 371T449 360Q416 360 412 390Q410 404 415 411Q415 412 416 414V415Q388 412 363 393Q355 388 355 386Q355 385 359 381T368 369T379 351T388 325T392 292Q392 230 343 187T222 143Q172 143 123 171Q112 153 112 133Q112 98 138 81Q147 75 155 75T227 73Q311 72 335 67Q396 58 431 26Q470 -13 470 -72Q470 -139 392 -175Q332 -206 250 -206Q167 -206 107 -175Q29 -140 29 -75Q29 -39 50 -15T92 18L103 24Q67 55 67 108Q67 155 96 193Q52 237 52 292Q52 355 102 398T223 442Q274 442 318 416L329 409ZM299 343Q294 371 273 387T221 404Q192 404 171 388T145 343Q142 326 142 292Q142 248 149 227T179 192Q196 182 222 182Q244 182 260 189T283 207T294 227T299 242Q302 258 302 292T299 343ZM403 -75Q403 -50 389 -34T348 -11T299 -2T245 0H218Q151 0 138 -6Q118 -15 107 -34T95 -74Q95 -84 101 -97T122 -127T170 -155T250 -167Q319 -167 361 -139T403 -75Z" transform="translate(1000,0)"></path></g><g data-mml-node="mo" transform="translate(1500,0)"><path data-c="2061" d=""></path></g><g data-mml-node="mo" transform="translate(1500,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1889,0)"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g><g data-mml-node="mo" transform="translate(2649,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(3315.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(4371.6,0)"><path data-c="61" d="M137 305T115 305T78 320T63 359Q63 394 97 421T218 448Q291 448 336 416T396 340Q401 326 401 309T402 194V124Q402 76 407 58T428 40Q443 40 448 56T453 109V145H493V106Q492 66 490 59Q481 29 455 12T400 -6T353 12T329 54V58L327 55Q325 52 322 49T314 40T302 29T287 17T269 6T247 -2T221 -8T190 -11Q130 -11 82 20T34 107Q34 128 41 147T68 188T116 225T194 253T304 268H318V290Q318 324 312 340Q290 411 215 411Q197 411 181 410T156 406T148 403Q170 388 170 359Q170 334 154 320ZM126 106Q126 75 150 51T209 26Q247 26 276 49T315 109Q317 116 318 175Q318 233 317 233Q309 233 296 232T251 223T193 203T147 166T126 106Z"></path><path data-c="72" d="M36 46H50Q89 46 97 60V68Q97 77 97 91T98 122T98 161T98 203Q98 234 98 269T98 328L97 351Q94 370 83 376T38 385H20V408Q20 431 22 431L32 432Q42 433 60 434T96 436Q112 437 131 438T160 441T171 442H174V373Q213 441 271 441H277Q322 441 343 419T364 373Q364 352 351 337T313 322Q288 322 276 338T263 372Q263 381 265 388T270 400T273 405Q271 407 250 401Q234 393 226 386Q179 341 179 207V154Q179 141 179 127T179 101T180 81T180 66V61Q181 59 183 57T188 54T193 51T200 49T207 48T216 47T225 47T235 46T245 46H276V0H267Q249 3 140 3Q37 3 28 0H20V46H36Z" transform="translate(500,0)"></path><path data-c="67" d="M329 409Q373 453 429 453Q459 453 472 434T485 396Q485 382 476 371T449 360Q416 360 412 390Q410 404 415 411Q415 412 416 414V415Q388 412 363 393Q355 388 355 386Q355 385 359 381T368 369T379 351T388 325T392 292Q392 230 343 187T222 143Q172 143 123 171Q112 153 112 133Q112 98 138 81Q147 75 155 75T227 73Q311 72 335 67Q396 58 431 26Q470 -13 470 -72Q470 -139 392 -175Q332 -206 250 -206Q167 -206 107 -175Q29 -140 29 -75Q29 -39 50 -15T92 18L103 24Q67 55 67 108Q67 155 96 193Q52 237 52 292Q52 355 102 398T223 442Q274 442 318 416L329 409ZM299 343Q294 371 273 387T221 404Q192 404 171 388T145 343Q142 326 142 292Q142 248 149 227T179 192Q196 182 222 182Q244 182 260 189T283 207T294 227T299 242Q302 258 302 292T299 343ZM403 -75Q403 -50 389 -34T348 -11T299 -2T245 0H218Q151 0 138 -6Q118 -15 107 -34T95 -74Q95 -84 101 -97T122 -127T170 -155T250 -167Q319 -167 361 -139T403 -75Z" transform="translate(892,0)"></path></g><g data-mml-node="mo" transform="translate(5763.6,0)"><path data-c="2061" d=""></path></g><g data-mml-node="munder" transform="translate(5930.2,0)"><g data-mml-node="mo"><path data-c="6D" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z"></path><path data-c="61" d="M137 305T115 305T78 320T63 359Q63 394 97 421T218 448Q291 448 336 416T396 340Q401 326 401 309T402 194V124Q402 76 407 58T428 40Q443 40 448 56T453 109V145H493V106Q492 66 490 59Q481 29 455 12T400 -6T353 12T329 54V58L327 55Q325 52 322 49T314 40T302 29T287 17T269 6T247 -2T221 -8T190 -11Q130 -11 82 20T34 107Q34 128 41 147T68 188T116 225T194 253T304 268H318V290Q318 324 312 340Q290 411 215 411Q197 411 181 410T156 406T148 403Q170 388 170 359Q170 334 154 320ZM126 106Q126 75 150 51T209 26Q247 26 276 49T315 109Q317 116 318 175Q318 233 317 233Q309 233 296 232T251 223T193 203T147 166T126 106Z" transform="translate(833,0)"></path><path data-c="78" d="M201 0Q189 3 102 3Q26 3 17 0H11V46H25Q48 47 67 52T96 61T121 78T139 96T160 122T180 150L226 210L168 288Q159 301 149 315T133 336T122 351T113 363T107 370T100 376T94 379T88 381T80 383Q74 383 44 385H16V431H23Q59 429 126 429Q219 429 229 431H237V385Q201 381 201 369Q201 367 211 353T239 315T268 274L272 270L297 304Q329 345 329 358Q329 364 327 369T322 376T317 380T310 384L307 385H302V431H309Q324 428 408 428Q487 428 493 431H499V385H492Q443 385 411 368Q394 360 377 341T312 257L296 236L358 151Q424 61 429 57T446 50Q464 46 499 46H516V0H510H502Q494 1 482 1T457 2T432 2T414 3Q403 3 377 3T327 1L304 0H295V46H298Q309 46 320 51T331 63Q331 65 291 120L250 175Q249 174 219 133T185 88Q181 83 181 74Q181 63 188 55T206 46Q208 46 208 23V0H201Z" transform="translate(1333,0)"></path></g><g data-mml-node="TeXAtom" transform="translate(189.1,-676.5) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g><g data-mml-node="mo" transform="translate(645,0)"><path data-c="2208" d="M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z"></path></g><g data-mml-node="mi" transform="translate(1312,0)"><path data-c="47" d="M56 342Q56 428 89 500T174 615T283 681T391 705Q394 705 400 705T408 704Q499 704 569 636L582 624L612 663Q639 700 643 704Q644 704 647 704T653 705H657Q660 705 666 699V419L660 413H626Q620 419 619 430Q610 512 571 572T476 651Q457 658 426 658Q401 658 376 654T316 633T254 592T205 519T177 411Q173 369 173 335Q173 259 192 201T238 111T302 58T370 31T431 24Q478 24 513 45T559 100Q562 110 562 160V212Q561 213 557 216T551 220T542 223T526 225T502 226T463 227H437V273H449L609 270Q715 270 727 273H735V227H721Q674 227 668 215Q666 211 666 108V6Q660 0 657 0Q653 0 639 10Q617 25 600 42L587 54Q571 27 524 3T406 -22Q317 -22 238 22T108 151T56 342Z"></path></g></g></g><g data-mml-node="mi" transform="translate(7957.9,0)"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(8708.9,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(9097.9,0)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g><g data-mml-node="mo" transform="translate(9742.9,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(10020.9,0)"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g><g data-mml-node="mo" transform="translate(10780.9,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(11447.7,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(12503.4,0)"><path data-c="61" d="M137 305T115 305T78 320T63 359Q63 394 97 421T218 448Q291 448 336 416T396 340Q401 326 401 309T402 194V124Q402 76 407 58T428 40Q443 40 448 56T453 109V145H493V106Q492 66 490 59Q481 29 455 12T400 -6T353 12T329 54V58L327 55Q325 52 322 49T314 40T302 29T287 17T269 6T247 -2T221 -8T190 -11Q130 -11 82 20T34 107Q34 128 41 147T68 188T116 225T194 253T304 268H318V290Q318 324 312 340Q290 411 215 411Q197 411 181 410T156 406T148 403Q170 388 170 359Q170 334 154 320ZM126 106Q126 75 150 51T209 26Q247 26 276 49T315 109Q317 116 318 175Q318 233 317 233Q309 233 296 232T251 223T193 203T147 166T126 106Z"></path><path data-c="72" d="M36 46H50Q89 46 97 60V68Q97 77 97 91T98 122T98 161T98 203Q98 234 98 269T98 328L97 351Q94 370 83 376T38 385H20V408Q20 431 22 431L32 432Q42 433 60 434T96 436Q112 437 131 438T160 441T171 442H174V373Q213 441 271 441H277Q322 441 343 419T364 373Q364 352 351 337T313 322Q288 322 276 338T263 372Q263 381 265 388T270 400T273 405Q271 407 250 401Q234 393 226 386Q179 341 179 207V154Q179 141 179 127T179 101T180 81T180 66V61Q181 59 183 57T188 54T193 51T200 49T207 48T216 47T225 47T235 46T245 46H276V0H267Q249 3 140 3Q37 3 28 0H20V46H36Z" transform="translate(500,0)"></path><path data-c="67" d="M329 409Q373 453 429 453Q459 453 472 434T485 396Q485 382 476 371T449 360Q416 360 412 390Q410 404 415 411Q415 412 416 414V415Q388 412 363 393Q355 388 355 386Q355 385 359 381T368 369T379 351T388 325T392 292Q392 230 343 187T222 143Q172 143 123 171Q112 153 112 133Q112 98 138 81Q147 75 155 75T227 73Q311 72 335 67Q396 58 431 26Q470 -13 470 -72Q470 -139 392 -175Q332 -206 250 -206Q167 -206 107 -175Q29 -140 29 -75Q29 -39 50 -15T92 18L103 24Q67 55 67 108Q67 155 96 193Q52 237 52 292Q52 355 102 398T223 442Q274 442 318 416L329 409ZM299 343Q294 371 273 387T221 404Q192 404 171 388T145 343Q142 326 142 292Q142 248 149 227T179 192Q196 182 222 182Q244 182 260 189T283 207T294 227T299 242Q302 258 302 292T299 343ZM403 -75Q403 -50 389 -34T348 -11T299 -2T245 0H218Q151 0 138 -6Q118 -15 107 -34T95 -74Q95 -84 101 -97T122 -127T170 -155T250 -167Q319 -167 361 -139T403 -75Z" transform="translate(892,0)"></path></g><g data-mml-node="mo" transform="translate(13895.4,0)"><path data-c="2061" d=""></path></g><g data-mml-node="munder" transform="translate(14062.1,0)"><g data-mml-node="mo"><path data-c="6D" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z"></path><path data-c="61" d="M137 305T115 305T78 320T63 359Q63 394 97 421T218 448Q291 448 336 416T396 340Q401 326 401 309T402 194V124Q402 76 407 58T428 40Q443 40 448 56T453 109V145H493V106Q492 66 490 59Q481 29 455 12T400 -6T353 12T329 54V58L327 55Q325 52 322 49T314 40T302 29T287 17T269 6T247 -2T221 -8T190 -11Q130 -11 82 20T34 107Q34 128 41 147T68 188T116 225T194 253T304 268H318V290Q318 324 312 340Q290 411 215 411Q197 411 181 410T156 406T148 403Q170 388 170 359Q170 334 154 320ZM126 106Q126 75 150 51T209 26Q247 26 276 49T315 109Q317 116 318 175Q318 233 317 233Q309 233 296 232T251 223T193 203T147 166T126 106Z" transform="translate(833,0)"></path><path data-c="78" d="M201 0Q189 3 102 3Q26 3 17 0H11V46H25Q48 47 67 52T96 61T121 78T139 96T160 122T180 150L226 210L168 288Q159 301 149 315T133 336T122 351T113 363T107 370T100 376T94 379T88 381T80 383Q74 383 44 385H16V431H23Q59 429 126 429Q219 429 229 431H237V385Q201 381 201 369Q201 367 211 353T239 315T268 274L272 270L297 304Q329 345 329 358Q329 364 327 369T322 376T317 380T310 384L307 385H302V431H309Q324 428 408 428Q487 428 493 431H499V385H492Q443 385 411 368Q394 360 377 341T312 257L296 236L358 151Q424 61 429 57T446 50Q464 46 499 46H516V0H510H502Q494 1 482 1T457 2T432 2T414 3Q403 3 377 3T327 1L304 0H295V46H298Q309 46 320 51T331 63Q331 65 291 120L250 175Q249 174 219 133T185 88Q181 83 181 74Q181 63 188 55T206 46Q208 46 208 23V0H201Z" transform="translate(1333,0)"></path></g><g data-mml-node="TeXAtom" transform="translate(188.7,-676.5) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g><g data-mml-node="mo" transform="translate(645,0)"><path data-c="2208" d="M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z"></path></g><g data-mml-node="mi" transform="translate(1312,0)"><path data-c="1D43A" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q492 659 471 656T418 643T357 615T294 567T236 496T189 394T158 260Q156 242 156 221Q156 173 170 136T206 79T256 45T308 28T353 24Q407 24 452 47T514 106Q517 114 529 161T541 214Q541 222 528 224T468 227H431Q425 233 425 235T427 254Q431 267 437 273H454Q494 271 594 271Q634 271 659 271T695 272T707 272Q721 272 721 263Q721 261 719 249Q714 230 709 228Q706 227 694 227Q674 227 653 224Q646 221 643 215T629 164Q620 131 614 108Q589 6 586 3Q584 1 581 1Q571 1 553 21T530 52Q530 53 528 52T522 47Q448 -22 322 -22Q201 -22 126 55T50 252Z"></path></g></g></g><g data-mml-node="mfrac" transform="translate(16089.8,0)"><g data-mml-node="mrow" transform="translate(220,710)"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(751,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1140,0)"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g><g data-mml-node="mo" transform="translate(1900,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(2178,0)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g><g data-mml-node="mo" transform="translate(2823,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(3212,0)"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(3963,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(4352,0)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g><g data-mml-node="mo" transform="translate(4997,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mrow" transform="translate(1768.5,-710)"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(751,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1140,0)"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g><g data-mml-node="mo" transform="translate(1900,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><rect width="5586" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container></span></p>
</blockquote>
<h3 id="基础">基础</h3>
<blockquote>
<p>朴素贝叶斯：独立性假设</p>
</blockquote>
<h3 id="引例">引例</h3>
<blockquote>
<p>C：南京市长江大桥</p>
</blockquote>
<p>切分方案如下：</p>
<ul>
<li>S1：南京市 / 长江 / 大桥</li>
<li> S2：南京 / 市长 / 江大桥</li>
</ul>
<p>计算条件概率 P (S1|C) 和 P (S2|C)，然后根据 P (S1|C) 和 P (S2|C) 的值来决定选择 S1 还是 S2。</p>
<p>P (C) 是字串在语料库中出现的概率。</p>
<ul>
<li>为容易实现，假设每个词之间的概率是上下文无关的</li>
</ul>
<p>根据<strong>朴素贝叶斯公式</strong></p>
<blockquote>
<p><span class="math display"><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="41.793ex" height="2.277ex" role="img" focusable="false" viewBox="0 -756.7 18472.7 1006.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(751,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1140,0)"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g><g data-mml-node="mo" transform="translate(2122.2,0)"><path data-c="2229" d="M88 -21T75 -21T55 -7V200Q55 231 55 280Q56 414 60 428Q61 430 61 431Q77 500 152 549T332 598Q443 598 522 544T610 405Q611 399 611 194V-7Q604 -22 591 -22Q582 -22 572 -9L570 405Q563 433 556 449T529 485Q498 519 445 538T334 558Q251 558 179 518T96 401Q95 396 95 193V-7Q88 -21 75 -21Z"></path></g><g data-mml-node="mi" transform="translate(3011.4,0)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g><g data-mml-node="mo" transform="translate(3656.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(4323.2,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(5379,0)"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(6130,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(6519,0)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g><g data-mml-node="mo" transform="translate(7164,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(7442,0)"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g><g data-mml-node="msup" transform="translate(8202,0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="TeXAtom" transform="translate(422,413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="22C6" d="M210 282Q210 284 225 381T241 480Q241 484 245 484Q249 486 251 486Q258 486 260 477T272 406Q275 390 276 380Q290 286 290 282L388 299Q484 314 487 314H488Q497 314 497 302Q497 297 434 266Q416 257 404 251L315 206L361 118Q372 98 383 75T401 40L407 28Q407 16 395 16Q394 16 392 16L390 17L250 159L110 17L108 16Q106 16 105 16Q93 16 93 28L99 40Q105 52 116 75T139 118L185 206L96 251Q6 296 4 300Q3 301 3 302Q3 314 12 314H13Q16 314 112 299L210 282Z"></path></g></g></g><g data-mml-node="mi" transform="translate(9027.6,0)"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(9778.6,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(10167.6,0)"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g><g data-mml-node="mo" transform="translate(10927.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(11594.3,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(12650.1,0)"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(13401.1,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(13790.1,0)"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g><g data-mml-node="mo" transform="translate(14550.1,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(14828.1,0)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g><g data-mml-node="msup" transform="translate(15473.1,0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="TeXAtom" transform="translate(422,413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="22C6" d="M210 282Q210 284 225 381T241 480Q241 484 245 484Q249 486 251 486Q258 486 260 477T272 406Q275 390 276 380Q290 286 290 282L388 299Q484 314 487 314H488Q497 314 497 302Q497 297 434 266Q416 257 404 251L315 206L361 118Q372 98 383 75T401 40L407 28Q407 16 395 16Q394 16 392 16L390 17L250 159L110 17L108 16Q106 16 105 16Q93 16 93 28L99 40Q105 52 116 75T139 118L185 206L96 251Q6 296 4 300Q3 301 3 302Q3 314 12 314H13Q16 314 112 299L210 282Z"></path></g></g></g><g data-mml-node="mi" transform="translate(16298.7,0)"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(17049.7,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(17438.7,0)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g><g data-mml-node="mo" transform="translate(18083.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></span></p>
</blockquote>
<p>所以条件概率为 <span class="math display"><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.172ex" xmlns="http://www.w3.org/2000/svg" width="26.072ex" height="5.475ex" role="img" focusable="false" viewBox="0 -1460 11524 2420"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="50" d="M130 622Q123 629 119 631T103 634T60 637H27V683H214Q237 683 276 683T331 684Q419 684 471 671T567 616Q624 563 624 489Q624 421 573 372T451 307Q429 302 328 301H234V181Q234 62 237 58Q245 47 304 46H337V0H326Q305 3 182 3Q47 3 38 0H27V46H60Q102 47 111 49T130 61V622ZM507 488Q507 514 506 528T500 564T483 597T450 620T397 635Q385 637 307 637H286Q237 637 234 628Q231 624 231 483V342H302H339Q390 342 423 349T481 382Q507 411 507 488Z"></path></g><g data-mml-node="mo" transform="translate(681,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1070,0)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g><g data-mml-node="mo" transform="translate(1715,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(1993,0)"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g><g data-mml-node="mo" transform="translate(2753,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(3419.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mfrac" transform="translate(4475.6,0)"><g data-mml-node="mrow" transform="translate(220,710)"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(751,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1140,0)"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g><g data-mml-node="mo" transform="translate(1900,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(2178,0)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g><g data-mml-node="mo" transform="translate(2823,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(3434.2,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mi" transform="translate(4434.4,0)"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(5185.4,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(5574.4,0)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g><g data-mml-node="mo" transform="translate(6219.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mrow" transform="translate(2379.7,-710)"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(751,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1140,0)"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g><g data-mml-node="mo" transform="translate(1900,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><rect width="6808.4" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container></span></p>
<ul>
<li>P (C) 为常数，只是一个用来归一化的固定值</li>
<li>在中文分词中，从词串恢复到汉字串仅有唯一的一种方式，所以 P (C|S) = 1</li>
<li> 综上所述，比较 P (S1|C) 和 P (S2|C) 的大小就可以变成比较 P (S1) 和 P (S2) 的大小
<ul>
<li>P (S1) = P (南京市，长江，大桥) = P (南京市) * P (长江) * P (大桥)</li>
<li>P (S2) = P (南京，市长，江大桥) = P (南京) * P (市长) * P (江大桥)</li>
<li>P (S1) &gt; P (S2)，选择切分方案 S1</li>
</ul></li>
</ul>
<blockquote>
<p><span class="math display"><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="102.294ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 45214 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="50" d="M130 622Q123 629 119 631T103 634T60 637H27V683H214Q237 683 276 683T331 684Q419 684 471 671T567 616Q624 563 624 489Q624 421 573 372T451 307Q429 302 328 301H234V181Q234 62 237 58Q245 47 304 46H337V0H326Q305 3 182 3Q47 3 38 0H27V46H60Q102 47 111 49T130 61V622ZM507 488Q507 514 506 528T500 564T483 597T450 620T397 635Q385 637 307 637H286Q237 637 234 628Q231 624 231 483V342H302H339Q390 342 423 349T481 382Q507 411 507 488Z"></path></g><g data-mml-node="mo" transform="translate(681,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1070,0)"><path data-c="53" d="M55 507Q55 590 112 647T243 704H257Q342 704 405 641L426 672Q431 679 436 687T446 700L449 704Q450 704 453 704T459 705H463Q466 705 472 699V462L466 456H448Q437 456 435 459T430 479Q413 605 329 646Q292 662 254 662Q201 662 168 626T135 542Q135 508 152 480T200 435Q210 431 286 412T370 389Q427 367 463 314T500 191Q500 110 448 45T301 -21Q245 -21 201 -4T140 27L122 41Q118 36 107 21T87 -7T78 -21Q76 -22 68 -22H64Q61 -22 55 -16V101Q55 220 56 222Q58 227 76 227H89Q95 221 95 214Q95 182 105 151T139 90T205 42T305 24Q352 24 386 62T420 155Q420 198 398 233T340 281Q284 295 266 300Q261 301 239 306T206 314T174 325T141 343T112 367T85 402Q55 451 55 507Z"></path></g><g data-mml-node="mo" transform="translate(1626,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2292.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(3348.6,0)"><path data-c="50" d="M130 622Q123 629 119 631T103 634T60 637H27V683H214Q237 683 276 683T331 684Q419 684 471 671T567 616Q624 563 624 489Q624 421 573 372T451 307Q429 302 328 301H234V181Q234 62 237 58Q245 47 304 46H337V0H326Q305 3 182 3Q47 3 38 0H27V46H60Q102 47 111 49T130 61V622ZM507 488Q507 514 506 528T500 564T483 597T450 620T397 635Q385 637 307 637H286Q237 637 234 628Q231 624 231 483V342H302H339Q390 342 423 349T481 382Q507 411 507 488Z"></path></g><g data-mml-node="mrow" transform="translate(4196.2,0)"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(389,0)"><g data-mml-node="mi"><path data-c="77" d="M90 368Q84 378 76 380T40 385H18V431H24L43 430Q62 430 84 429T116 428Q206 428 221 431H229V385H215Q177 383 177 368Q177 367 221 239L265 113L339 328L333 345Q323 374 316 379Q308 384 278 385H258V431H264Q270 428 348 428Q439 428 454 431H461V385H452Q404 385 404 369Q404 366 418 324T449 234T481 143L496 100L537 219Q579 341 579 347Q579 363 564 373T530 385H522V431H529Q541 428 624 428Q692 428 698 431H703V385H697Q696 385 691 385T682 384Q635 377 619 334L559 161Q546 124 528 71Q508 12 503 1T487 -11H479Q460 -11 456 -4Q455 -3 407 133L361 267Q359 263 266 -4Q261 -11 243 -11H238Q225 -11 220 -3L90 368Z"></path></g><g data-mml-node="TeXAtom" transform="translate(755,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1547.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(1992.2,0)"><g data-mml-node="mi"><path data-c="77" d="M90 368Q84 378 76 380T40 385H18V431H24L43 430Q62 430 84 429T116 428Q206 428 221 431H229V385H215Q177 383 177 368Q177 367 221 239L265 113L339 328L333 345Q323 374 316 379Q308 384 278 385H258V431H264Q270 428 348 428Q439 428 454 431H461V385H452Q404 385 404 369Q404 366 418 324T449 234T481 143L496 100L537 219Q579 341 579 347Q579 363 564 373T530 385H522V431H529Q541 428 624 428Q692 428 698 431H703V385H697Q696 385 691 385T682 384Q635 377 619 334L559 161Q546 124 528 71Q508 12 503 1T487 -11H479Q460 -11 456 -4Q455 -3 407 133L361 267Q359 263 266 -4Q261 -11 243 -11H238Q225 -11 220 -3L90 368Z"></path></g><g data-mml-node="TeXAtom" transform="translate(755,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mo" transform="translate(3150.8,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mo" transform="translate(3595.4,0)"><path data-c="2026" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60ZM525 60Q525 84 542 102T585 120Q609 120 627 104T646 61Q646 36 629 18T586 0T543 17T525 60ZM972 60Q972 84 989 102T1032 120Q1056 120 1074 104T1093 61Q1093 36 1076 18T1033 0T990 17T972 60Z"></path></g><g data-mml-node="mo" transform="translate(4934.1,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(5378.8,0)"><g data-mml-node="mi"><path data-c="77" d="M90 368Q84 378 76 380T40 385H18V431H24L43 430Q62 430 84 429T116 428Q206 428 221 431H229V385H215Q177 383 177 368Q177 367 221 239L265 113L339 328L333 345Q323 374 316 379Q308 384 278 385H258V431H264Q270 428 348 428Q439 428 454 431H461V385H452Q404 385 404 369Q404 366 418 324T449 234T481 143L496 100L537 219Q579 341 579 347Q579 363 564 373T530 385H522V431H529Q541 428 624 428Q692 428 698 431H703V385H697Q696 385 691 385T682 384Q635 377 619 334L559 161Q546 124 528 71Q508 12 503 1T487 -11H479Q460 -11 456 -4Q455 -3 407 133L361 267Q359 263 266 -4Q261 -11 243 -11H238Q225 -11 220 -3L90 368Z"></path></g><g data-mml-node="TeXAtom" transform="translate(755,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="6D" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z"></path></g></g></g><g data-mml-node="mo" transform="translate(6772.8,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mo" transform="translate(11635.8,0)"><path data-c="2248" d="M55 319Q55 360 72 393T114 444T163 472T205 482Q207 482 213 482T223 483Q262 483 296 468T393 413L443 381Q502 346 553 346Q609 346 649 375T694 454Q694 465 698 474T708 483Q722 483 722 452Q722 386 675 338T555 289Q514 289 468 310T388 357T308 404T224 426Q164 426 125 393T83 318Q81 289 69 289Q55 289 55 319ZM55 85Q55 126 72 159T114 210T163 238T205 248Q207 248 213 248T223 249Q262 249 296 234T393 179L443 147Q502 112 553 112Q609 112 649 141T694 220Q694 249 708 249T722 217Q722 153 675 104T555 55Q514 55 468 76T388 123T308 170T224 192Q164 192 125 159T83 84Q80 55 69 55Q55 55 55 85Z"></path></g><g data-mml-node="mi" transform="translate(12691.6,0)"><path data-c="50" d="M130 622Q123 629 119 631T103 634T60 637H27V683H214Q237 683 276 683T331 684Q419 684 471 671T567 616Q624 563 624 489Q624 421 573 372T451 307Q429 302 328 301H234V181Q234 62 237 58Q245 47 304 46H337V0H326Q305 3 182 3Q47 3 38 0H27V46H60Q102 47 111 49T130 61V622ZM507 488Q507 514 506 528T500 564T483 597T450 620T397 635Q385 637 307 637H286Q237 637 234 628Q231 624 231 483V342H302H339Q390 342 423 349T481 382Q507 411 507 488Z"></path></g><g data-mml-node="mrow" transform="translate(13539.2,0)"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(389,0)"><g data-mml-node="mi"><path data-c="77" d="M90 368Q84 378 76 380T40 385H18V431H24L43 430Q62 430 84 429T116 428Q206 428 221 431H229V385H215Q177 383 177 368Q177 367 221 239L265 113L339 328L333 345Q323 374 316 379Q308 384 278 385H258V431H264Q270 428 348 428Q439 428 454 431H461V385H452Q404 385 404 369Q404 366 418 324T449 234T481 143L496 100L537 219Q579 341 579 347Q579 363 564 373T530 385H522V431H529Q541 428 624 428Q692 428 698 431H703V385H697Q696 385 691 385T682 384Q635 377 619 334L559 161Q546 124 528 71Q508 12 503 1T487 -11H479Q460 -11 456 -4Q455 -3 407 133L361 267Q359 263 266 -4Q261 -11 243 -11H238Q225 -11 220 -3L90 368Z"></path></g><g data-mml-node="TeXAtom" transform="translate(755,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1547.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mo" transform="translate(15698,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mi" transform="translate(16698.2,0)"><path data-c="50" d="M130 622Q123 629 119 631T103 634T60 637H27V683H214Q237 683 276 683T331 684Q419 684 471 671T567 616Q624 563 624 489Q624 421 573 372T451 307Q429 302 328 301H234V181Q234 62 237 58Q245 47 304 46H337V0H326Q305 3 182 3Q47 3 38 0H27V46H60Q102 47 111 49T130 61V622ZM507 488Q507 514 506 528T500 564T483 597T450 620T397 635Q385 637 307 637H286Q237 637 234 628Q231 624 231 483V342H302H339Q390 342 423 349T481 382Q507 411 507 488Z"></path></g><g data-mml-node="mrow" transform="translate(17545.9,0)"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(389,0)"><g data-mml-node="mi"><path data-c="77" d="M90 368Q84 378 76 380T40 385H18V431H24L43 430Q62 430 84 429T116 428Q206 428 221 431H229V385H215Q177 383 177 368Q177 367 221 239L265 113L339 328L333 345Q323 374 316 379Q308 384 278 385H258V431H264Q270 428 348 428Q439 428 454 431H461V385H452Q404 385 404 369Q404 366 418 324T449 234T481 143L496 100L537 219Q579 341 579 347Q579 363 564 373T530 385H522V431H529Q541 428 624 428Q692 428 698 431H703V385H697Q696 385 691 385T682 384Q635 377 619 334L559 161Q546 124 528 71Q508 12 503 1T487 -11H479Q460 -11 456 -4Q455 -3 407 133L361 267Q359 263 266 -4Q261 -11 243 -11H238Q225 -11 220 -3L90 368Z"></path></g><g data-mml-node="TeXAtom" transform="translate(755,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1547.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mo" transform="translate(19704.7,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mo" transform="translate(20704.9,0)"><path data-c="2026" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60ZM525 60Q525 84 542 102T585 120Q609 120 627 104T646 61Q646 36 629 18T586 0T543 17T525 60ZM972 60Q972 84 989 102T1032 120Q1056 120 1074 104T1093 61Q1093 36 1076 18T1033 0T990 17T972 60Z"></path></g><g data-mml-node="mo" transform="translate(22099.1,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mi" transform="translate(23099.3,0)"><path data-c="50" d="M130 622Q123 629 119 631T103 634T60 637H27V683H214Q237 683 276 683T331 684Q419 684 471 671T567 616Q624 563 624 489Q624 421 573 372T451 307Q429 302 328 301H234V181Q234 62 237 58Q245 47 304 46H337V0H326Q305 3 182 3Q47 3 38 0H27V46H60Q102 47 111 49T130 61V622ZM507 488Q507 514 506 528T500 564T483 597T450 620T397 635Q385 637 307 637H286Q237 637 234 628Q231 624 231 483V342H302H339Q390 342 423 349T481 382Q507 411 507 488Z"></path></g><g data-mml-node="mrow" transform="translate(23947,0)"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(389,0)"><g data-mml-node="mi"><path data-c="77" d="M90 368Q84 378 76 380T40 385H18V431H24L43 430Q62 430 84 429T116 428Q206 428 221 431H229V385H215Q177 383 177 368Q177 367 221 239L265 113L339 328L333 345Q323 374 316 379Q308 384 278 385H258V431H264Q270 428 348 428Q439 428 454 431H461V385H452Q404 385 404 369Q404 366 418 324T449 234T481 143L496 100L537 219Q579 341 579 347Q579 363 564 373T530 385H522V431H529Q541 428 624 428Q692 428 698 431H703V385H697Q696 385 691 385T682 384Q635 377 619 334L559 161Q546 124 528 71Q508 12 503 1T487 -11H479Q460 -11 456 -4Q455 -3 407 133L361 267Q359 263 266 -4Q261 -11 243 -11H238Q225 -11 220 -3L90 368Z"></path></g><g data-mml-node="TeXAtom" transform="translate(755,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="6D" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1783,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mo" transform="translate(26396.8,0)"><path data-c="221D" d="M56 124T56 216T107 375T238 442Q260 442 280 438T319 425T352 407T382 385T406 361T427 336T442 315T455 297T462 285L469 297Q555 442 679 442Q687 442 722 437V398H718Q710 400 694 400Q657 400 623 383T567 343T527 294T503 253T495 235Q495 231 520 192T554 143Q625 44 696 44Q717 44 719 46H722V-5Q695 -11 678 -11Q552 -11 457 141Q455 145 454 146L447 134Q362 -11 235 -11Q157 -11 107 56ZM93 213Q93 143 126 87T220 31Q258 31 292 48T349 88T389 137T413 178T421 196Q421 200 396 239T362 288Q322 345 288 366T213 387Q163 387 128 337T93 213Z"></path></g><g data-mml-node="mi" transform="translate(27452.6,0)"><path data-c="6C" d="M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(278,0)"></path><path data-c="67" d="M329 409Q373 453 429 453Q459 453 472 434T485 396Q485 382 476 371T449 360Q416 360 412 390Q410 404 415 411Q415 412 416 414V415Q388 412 363 393Q355 388 355 386Q355 385 359 381T368 369T379 351T388 325T392 292Q392 230 343 187T222 143Q172 143 123 171Q112 153 112 133Q112 98 138 81Q147 75 155 75T227 73Q311 72 335 67Q396 58 431 26Q470 -13 470 -72Q470 -139 392 -175Q332 -206 250 -206Q167 -206 107 -175Q29 -140 29 -75Q29 -39 50 -15T92 18L103 24Q67 55 67 108Q67 155 96 193Q52 237 52 292Q52 355 102 398T223 442Q274 442 318 416L329 409ZM299 343Q294 371 273 387T221 404Q192 404 171 388T145 343Q142 326 142 292Q142 248 149 227T179 192Q196 182 222 182Q244 182 260 189T283 207T294 227T299 242Q302 258 302 292T299 343ZM403 -75Q403 -50 389 -34T348 -11T299 -2T245 0H218Q151 0 138 -6Q118 -15 107 -34T95 -74Q95 -84 101 -97T122 -127T170 -155T250 -167Q319 -167 361 -139T403 -75Z" transform="translate(778,0)"></path></g><g data-mml-node="mo" transform="translate(28730.6,0)"><path data-c="2061" d=""></path></g><g data-mml-node="mi" transform="translate(28897.3,0)"><path data-c="50" d="M130 622Q123 629 119 631T103 634T60 637H27V683H214Q237 683 276 683T331 684Q419 684 471 671T567 616Q624 563 624 489Q624 421 573 372T451 307Q429 302 328 301H234V181Q234 62 237 58Q245 47 304 46H337V0H326Q305 3 182 3Q47 3 38 0H27V46H60Q102 47 111 49T130 61V622ZM507 488Q507 514 506 528T500 564T483 597T450 620T397 635Q385 637 307 637H286Q237 637 234 628Q231 624 231 483V342H302H339Q390 342 423 349T481 382Q507 411 507 488Z"></path></g><g data-mml-node="mrow" transform="translate(29744.9,0)"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(389,0)"><g data-mml-node="mi"><path data-c="77" d="M90 368Q84 378 76 380T40 385H18V431H24L43 430Q62 430 84 429T116 428Q206 428 221 431H229V385H215Q177 383 177 368Q177 367 221 239L265 113L339 328L333 345Q323 374 316 379Q308 384 278 385H258V431H264Q270 428 348 428Q439 428 454 431H461V385H452Q404 385 404 369Q404 366 418 324T449 234T481 143L496 100L537 219Q579 341 579 347Q579 363 564 373T530 385H522V431H529Q541 428 624 428Q692 428 698 431H703V385H697Q696 385 691 385T682 384Q635 377 619 334L559 161Q546 124 528 71Q508 12 503 1T487 -11H479Q460 -11 456 -4Q455 -3 407 133L361 267Q359 263 266 -4Q261 -11 243 -11H238Q225 -11 220 -3L90 368Z"></path></g><g data-mml-node="TeXAtom" transform="translate(755,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1547.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mo" transform="translate(31903.7,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(32903.9,0)"><path data-c="6C" d="M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(278,0)"></path><path data-c="67" d="M329 409Q373 453 429 453Q459 453 472 434T485 396Q485 382 476 371T449 360Q416 360 412 390Q410 404 415 411Q415 412 416 414V415Q388 412 363 393Q355 388 355 386Q355 385 359 381T368 369T379 351T388 325T392 292Q392 230 343 187T222 143Q172 143 123 171Q112 153 112 133Q112 98 138 81Q147 75 155 75T227 73Q311 72 335 67Q396 58 431 26Q470 -13 470 -72Q470 -139 392 -175Q332 -206 250 -206Q167 -206 107 -175Q29 -140 29 -75Q29 -39 50 -15T92 18L103 24Q67 55 67 108Q67 155 96 193Q52 237 52 292Q52 355 102 398T223 442Q274 442 318 416L329 409ZM299 343Q294 371 273 387T221 404Q192 404 171 388T145 343Q142 326 142 292Q142 248 149 227T179 192Q196 182 222 182Q244 182 260 189T283 207T294 227T299 242Q302 258 302 292T299 343ZM403 -75Q403 -50 389 -34T348 -11T299 -2T245 0H218Q151 0 138 -6Q118 -15 107 -34T95 -74Q95 -84 101 -97T122 -127T170 -155T250 -167Q319 -167 361 -139T403 -75Z" transform="translate(778,0)"></path></g><g data-mml-node="mo" transform="translate(34181.9,0)"><path data-c="2061" d=""></path></g><g data-mml-node="mi" transform="translate(34348.6,0)"><path data-c="50" d="M130 622Q123 629 119 631T103 634T60 637H27V683H214Q237 683 276 683T331 684Q419 684 471 671T567 616Q624 563 624 489Q624 421 573 372T451 307Q429 302 328 301H234V181Q234 62 237 58Q245 47 304 46H337V0H326Q305 3 182 3Q47 3 38 0H27V46H60Q102 47 111 49T130 61V622ZM507 488Q507 514 506 528T500 564T483 597T450 620T397 635Q385 637 307 637H286Q237 637 234 628Q231 624 231 483V342H302H339Q390 342 423 349T481 382Q507 411 507 488Z"></path></g><g data-mml-node="mrow" transform="translate(35196.3,0)"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(389,0)"><g data-mml-node="mi"><path data-c="77" d="M90 368Q84 378 76 380T40 385H18V431H24L43 430Q62 430 84 429T116 428Q206 428 221 431H229V385H215Q177 383 177 368Q177 367 221 239L265 113L339 328L333 345Q323 374 316 379Q308 384 278 385H258V431H264Q270 428 348 428Q439 428 454 431H461V385H452Q404 385 404 369Q404 366 418 324T449 234T481 143L496 100L537 219Q579 341 579 347Q579 363 564 373T530 385H522V431H529Q541 428 624 428Q692 428 698 431H703V385H697Q696 385 691 385T682 384Q635 377 619 334L559 161Q546 124 528 71Q508 12 503 1T487 -11H479Q460 -11 456 -4Q455 -3 407 133L361 267Q359 263 266 -4Q261 -11 243 -11H238Q225 -11 220 -3L90 368Z"></path></g><g data-mml-node="TeXAtom" transform="translate(755,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1547.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mo" transform="translate(37355,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mo" transform="translate(38355.2,0)"><path data-c="2026" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60ZM525 60Q525 84 542 102T585 120Q609 120 627 104T646 61Q646 36 629 18T586 0T543 17T525 60ZM972 60Q972 84 989 102T1032 120Q1056 120 1074 104T1093 61Q1093 36 1076 18T1033 0T990 17T972 60Z"></path></g><g data-mml-node="mo" transform="translate(39749.5,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(40749.7,0)"><path data-c="6C" d="M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(278,0)"></path><path data-c="67" d="M329 409Q373 453 429 453Q459 453 472 434T485 396Q485 382 476 371T449 360Q416 360 412 390Q410 404 415 411Q415 412 416 414V415Q388 412 363 393Q355 388 355 386Q355 385 359 381T368 369T379 351T388 325T392 292Q392 230 343 187T222 143Q172 143 123 171Q112 153 112 133Q112 98 138 81Q147 75 155 75T227 73Q311 72 335 67Q396 58 431 26Q470 -13 470 -72Q470 -139 392 -175Q332 -206 250 -206Q167 -206 107 -175Q29 -140 29 -75Q29 -39 50 -15T92 18L103 24Q67 55 67 108Q67 155 96 193Q52 237 52 292Q52 355 102 398T223 442Q274 442 318 416L329 409ZM299 343Q294 371 273 387T221 404Q192 404 171 388T145 343Q142 326 142 292Q142 248 149 227T179 192Q196 182 222 182Q244 182 260 189T283 207T294 227T299 242Q302 258 302 292T299 343ZM403 -75Q403 -50 389 -34T348 -11T299 -2T245 0H218Q151 0 138 -6Q118 -15 107 -34T95 -74Q95 -84 101 -97T122 -127T170 -155T250 -167Q319 -167 361 -139T403 -75Z" transform="translate(778,0)"></path></g><g data-mml-node="mo" transform="translate(42027.7,0)"><path data-c="2061" d=""></path></g><g data-mml-node="mi" transform="translate(42194.4,0)"><path data-c="50" d="M130 622Q123 629 119 631T103 634T60 637H27V683H214Q237 683 276 683T331 684Q419 684 471 671T567 616Q624 563 624 489Q624 421 573 372T451 307Q429 302 328 301H234V181Q234 62 237 58Q245 47 304 46H337V0H326Q305 3 182 3Q47 3 38 0H27V46H60Q102 47 111 49T130 61V622ZM507 488Q507 514 506 528T500 564T483 597T450 620T397 635Q385 637 307 637H286Q237 637 234 628Q231 624 231 483V342H302H339Q390 342 423 349T481 382Q507 411 507 488Z"></path></g><g data-mml-node="mrow" transform="translate(43042,0)"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(389,0)"><g data-mml-node="mi"><path data-c="77" d="M90 368Q84 378 76 380T40 385H18V431H24L43 430Q62 430 84 429T116 428Q206 428 221 431H229V385H215Q177 383 177 368Q177 367 221 239L265 113L339 328L333 345Q323 374 316 379Q308 384 278 385H258V431H264Q270 428 348 428Q439 428 454 431H461V385H452Q404 385 404 369Q404 366 418 324T449 234T481 143L496 100L537 219Q579 341 579 347Q579 363 564 373T530 385H522V431H529Q541 428 624 428Q692 428 698 431H703V385H697Q696 385 691 385T682 384Q635 377 619 334L559 161Q546 124 528 71Q508 12 503 1T487 -11H479Q460 -11 456 -4Q455 -3 407 133L361 267Q359 263 266 -4Q261 -11 243 -11H238Q225 -11 220 -3L90 368Z"></path></g><g data-mml-node="TeXAtom" transform="translate(755,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="6D" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1783,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></g></svg></mjx-container></span></p>
</blockquote>
<p>P (w) 就是这个词出现在语料库中的概率。因为函数 y = log (x) 单调递增，因为词的概率小于 1，所以取 log 后结果是负数。</p>
<ul>
<li>取 log 为了防止向下溢出</li>
<li>结果由乘法转为加法，计算机处理起来速度更快</li>
</ul>
<h3 id="一元模型">一元模型</h3>
<blockquote>
<p>对于不同的 S，M 的值都是不一样的，分出的词越多，概率越小（引例）</p>
</blockquote>
<p><span class="math display"><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.059ex" xmlns="http://www.w3.org/2000/svg" width="35.009ex" height="5.285ex" role="img" focusable="false" viewBox="0 -1426 15474 2336"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="50" d="M130 622Q123 629 119 631T103 634T60 637H27V683H214Q237 683 276 683T331 684Q419 684 471 671T567 616Q624 563 624 489Q624 421 573 372T451 307Q429 302 328 301H234V181Q234 62 237 58Q245 47 304 46H337V0H326Q305 3 182 3Q47 3 38 0H27V46H60Q102 47 111 49T130 61V622ZM507 488Q507 514 506 528T500 564T483 597T450 620T397 635Q385 637 307 637H286Q237 637 234 628Q231 624 231 483V342H302H339Q390 342 423 349T481 382Q507 411 507 488Z"></path></g><g data-mml-node="mo" transform="translate(681,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(1070,0)"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="TeXAtom" transform="translate(749,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2113,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2779.7,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mfrac" transform="translate(3835.5,0)"><g data-mml-node="mrow" transform="translate(220,676)"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="TeXAtom" transform="translate(749,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1320.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">在</text><text data-variant="normal" transform="translate(900,0) scale(1,-1)" font-size="884px" font-family="serif">语</text><text data-variant="normal" transform="translate(1800,0) scale(1,-1)" font-size="884px" font-family="serif">料</text><text data-variant="normal" transform="translate(2700,0) scale(1,-1)" font-size="884px" font-family="serif">库</text><text data-variant="normal" transform="translate(3600,0) scale(1,-1)" font-size="884px" font-family="serif">中</text><text data-variant="normal" transform="translate(4500,0) scale(1,-1)" font-size="884px" font-family="serif">的</text><text data-variant="normal" transform="translate(5400,0) scale(1,-1)" font-size="884px" font-family="serif">出</text><text data-variant="normal" transform="translate(6300,0) scale(1,-1)" font-size="884px" font-family="serif">现</text><text data-variant="normal" transform="translate(7200,0) scale(1,-1)" font-size="884px" font-family="serif">次</text><text data-variant="normal" transform="translate(8100,0) scale(1,-1)" font-size="884px" font-family="serif">数</text></g><g data-mml-node="mi" transform="translate(10598.5,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mrow" transform="translate(1636.4,-710)"><g data-mml-node="mo"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">语</text><text data-variant="normal" transform="translate(900,0) scale(1,-1)" font-size="884px" font-family="serif">料</text><text data-variant="normal" transform="translate(1800,0) scale(1,-1)" font-size="884px" font-family="serif">库</text><text data-variant="normal" transform="translate(2700,0) scale(1,-1)" font-size="884px" font-family="serif">中</text><text data-variant="normal" transform="translate(3600,0) scale(1,-1)" font-size="884px" font-family="serif">的</text><text data-variant="normal" transform="translate(4500,0) scale(1,-1)" font-size="884px" font-family="serif">总</text><text data-variant="normal" transform="translate(5400,0) scale(1,-1)" font-size="884px" font-family="serif">次</text><text data-variant="normal" transform="translate(6300,0) scale(1,-1)" font-size="884px" font-family="serif">数</text></g><g data-mml-node="mi" transform="translate(7477.8,0)"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path></g></g><rect width="11398.5" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container></span></p>
<p>于是 <span class="math display"><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="30.895ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 13655.8 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="6C" d="M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(278,0)"></path><path data-c="67" d="M329 409Q373 453 429 453Q459 453 472 434T485 396Q485 382 476 371T449 360Q416 360 412 390Q410 404 415 411Q415 412 416 414V415Q388 412 363 393Q355 388 355 386Q355 385 359 381T368 369T379 351T388 325T392 292Q392 230 343 187T222 143Q172 143 123 171Q112 153 112 133Q112 98 138 81Q147 75 155 75T227 73Q311 72 335 67Q396 58 431 26Q470 -13 470 -72Q470 -139 392 -175Q332 -206 250 -206Q167 -206 107 -175Q29 -140 29 -75Q29 -39 50 -15T92 18L103 24Q67 55 67 108Q67 155 96 193Q52 237 52 292Q52 355 102 398T223 442Q274 442 318 416L329 409ZM299 343Q294 371 273 387T221 404Q192 404 171 388T145 343Q142 326 142 292Q142 248 149 227T179 192Q196 182 222 182Q244 182 260 189T283 207T294 227T299 242Q302 258 302 292T299 343ZM403 -75Q403 -50 389 -34T348 -11T299 -2T245 0H218Q151 0 138 -6Q118 -15 107 -34T95 -74Q95 -84 101 -97T122 -127T170 -155T250 -167Q319 -167 361 -139T403 -75Z" transform="translate(778,0)"></path></g><g data-mml-node="mo" transform="translate(1278,0)"><path data-c="2061" d=""></path></g><g data-mml-node="mi" transform="translate(1444.7,0)"><path data-c="50" d="M130 622Q123 629 119 631T103 634T60 637H27V683H214Q237 683 276 683T331 684Q419 684 471 671T567 616Q624 563 624 489Q624 421 573 372T451 307Q429 302 328 301H234V181Q234 62 237 58Q245 47 304 46H337V0H326Q305 3 182 3Q47 3 38 0H27V46H60Q102 47 111 49T130 61V622ZM507 488Q507 514 506 528T500 564T483 597T450 620T397 635Q385 637 307 637H286Q237 637 234 628Q231 624 231 483V342H302H339Q390 342 423 349T481 382Q507 411 507 488Z"></path></g><g data-mml-node="mrow" transform="translate(2292.3,0)"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(389,0)"><g data-mml-node="mi"><path data-c="77" d="M90 368Q84 378 76 380T40 385H18V431H24L43 430Q62 430 84 429T116 428Q206 428 221 431H229V385H215Q177 383 177 368Q177 367 221 239L265 113L339 328L333 345Q323 374 316 379Q308 384 278 385H258V431H264Q270 428 348 428Q439 428 454 431H461V385H452Q404 385 404 369Q404 366 418 324T449 234T481 143L496 100L537 219Q579 341 579 347Q579 363 564 373T530 385H522V431H529Q541 428 624 428Q692 428 698 431H703V385H697Q696 385 691 385T682 384Q635 377 619 334L559 161Q546 124 528 71Q508 12 503 1T487 -11H479Q460 -11 456 -4Q455 -3 407 133L361 267Q359 263 266 -4Q261 -11 243 -11H238Q225 -11 220 -3L90 368Z"></path></g><g data-mml-node="TeXAtom" transform="translate(755,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="69" d="M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1390.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mo" transform="translate(4349.7,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(5405.5,0)"><path data-c="6C" d="M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(278,0)"></path><path data-c="67" d="M329 409Q373 453 429 453Q459 453 472 434T485 396Q485 382 476 371T449 360Q416 360 412 390Q410 404 415 411Q415 412 416 414V415Q388 412 363 393Q355 388 355 386Q355 385 359 381T368 369T379 351T388 325T392 292Q392 230 343 187T222 143Q172 143 123 171Q112 153 112 133Q112 98 138 81Q147 75 155 75T227 73Q311 72 335 67Q396 58 431 26Q470 -13 470 -72Q470 -139 392 -175Q332 -206 250 -206Q167 -206 107 -175Q29 -140 29 -75Q29 -39 50 -15T92 18L103 24Q67 55 67 108Q67 155 96 193Q52 237 52 292Q52 355 102 398T223 442Q274 442 318 416L329 409ZM299 343Q294 371 273 387T221 404Q192 404 171 388T145 343Q142 326 142 292Q142 248 149 227T179 192Q196 182 222 182Q244 182 260 189T283 207T294 227T299 242Q302 258 302 292T299 343ZM403 -75Q403 -50 389 -34T348 -11T299 -2T245 0H218Q151 0 138 -6Q118 -15 107 -34T95 -74Q95 -84 101 -97T122 -127T170 -155T250 -167Q319 -167 361 -139T403 -75Z" transform="translate(778,0)"></path></g><g data-mml-node="mo" transform="translate(6683.5,0)"><path data-c="2061" d=""></path></g><g data-mml-node="mrow" transform="translate(6850.1,0)"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(389,0)"><g data-mml-node="mi"><path data-c="46" d="M128 619Q121 626 117 628T101 631T58 634H25V680H582V676Q584 670 596 560T610 444V440H570V444Q563 493 561 501Q555 538 543 563T516 601T477 622T431 631T374 633H334H286Q252 633 244 631T233 621Q232 619 232 490V363H284Q287 363 303 363T327 364T349 367T372 373T389 385Q407 403 410 459V480H450V200H410V221Q407 276 389 296Q381 303 371 307T348 313T327 316T303 317T284 317H232V189L233 61Q240 54 245 52T270 48T333 46H360V0H348Q324 3 182 3Q51 3 36 0H25V46H58Q100 47 109 49T128 61V619Z"></path><path data-c="72" d="M36 46H50Q89 46 97 60V68Q97 77 97 91T98 122T98 161T98 203Q98 234 98 269T98 328L97 351Q94 370 83 376T38 385H20V408Q20 431 22 431L32 432Q42 433 60 434T96 436Q112 437 131 438T160 441T171 442H174V373Q213 441 271 441H277Q322 441 343 419T364 373Q364 352 351 337T313 322Q288 322 276 338T263 372Q263 381 265 388T270 400T273 405Q271 407 250 401Q234 393 226 386Q179 341 179 207V154Q179 141 179 127T179 101T180 81T180 66V61Q181 59 183 57T188 54T193 51T200 49T207 48T216 47T225 47T235 46T245 46H276V0H267Q249 3 140 3Q37 3 28 0H20V46H36Z" transform="translate(653,0)"></path><path data-c="65" d="M28 218Q28 273 48 318T98 391T163 433T229 448Q282 448 320 430T378 380T406 316T415 245Q415 238 408 231H126V216Q126 68 226 36Q246 30 270 30Q312 30 342 62Q359 79 369 104L379 128Q382 131 395 131H398Q415 131 415 121Q415 117 412 108Q393 53 349 21T250 -11Q155 -11 92 58T28 218ZM333 275Q322 403 238 411H236Q228 411 220 410T195 402T166 381T143 340T127 274V267H333V275Z" transform="translate(1045,0)"></path><path data-c="71" d="M33 218Q33 308 95 374T236 441H246Q330 441 381 372L387 364Q388 364 404 403L420 442H457V156Q457 -132 458 -134Q462 -142 470 -145Q491 -148 519 -148H535V-194H527L504 -193Q480 -192 453 -192T415 -191Q312 -191 303 -194H295V-148H311Q339 -148 360 -145Q369 -141 371 -135T373 -106V-41V49Q313 -11 236 -11Q154 -11 94 53T33 218ZM376 300Q346 389 278 401Q275 401 269 401T261 402Q211 400 171 350T131 214Q131 137 165 82T253 27Q296 27 328 54T376 118V300Z" transform="translate(1489,0)"></path></g><g data-mml-node="TeXAtom" transform="translate(2050,-229.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="77" d="M90 368Q84 378 76 380T40 385H18V431H24L43 430Q62 430 84 429T116 428Q206 428 221 431H229V385H215Q177 383 177 368Q177 367 221 239L265 113L339 328L333 345Q323 374 316 379Q308 384 278 385H258V431H264Q270 428 348 428Q439 428 454 431H461V385H452Q404 385 404 369Q404 366 418 324T449 234T481 143L496 100L537 219Q579 341 579 347Q579 363 564 373T530 385H522V431H529Q541 428 624 428Q692 428 698 431H703V385H697Q696 385 691 385T682 384Q635 377 619 334L559 161Q546 124 528 71Q508 12 503 1T487 -11H479Q460 -11 456 -4Q455 -3 407 133L361 267Q359 263 266 -4Q261 -11 243 -11H238Q225 -11 220 -3L90 368Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2999.5,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mo" transform="translate(10460.9,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(11461.1,0)"><path data-c="6C" d="M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(278,0)"></path><path data-c="67" d="M329 409Q373 453 429 453Q459 453 472 434T485 396Q485 382 476 371T449 360Q416 360 412 390Q410 404 415 411Q415 412 416 414V415Q388 412 363 393Q355 388 355 386Q355 385 359 381T368 369T379 351T388 325T392 292Q392 230 343 187T222 143Q172 143 123 171Q112 153 112 133Q112 98 138 81Q147 75 155 75T227 73Q311 72 335 67Q396 58 431 26Q470 -13 470 -72Q470 -139 392 -175Q332 -206 250 -206Q167 -206 107 -175Q29 -140 29 -75Q29 -39 50 -15T92 18L103 24Q67 55 67 108Q67 155 96 193Q52 237 52 292Q52 355 102 398T223 442Q274 442 318 416L329 409ZM299 343Q294 371 273 387T221 404Q192 404 171 388T145 343Q142 326 142 292Q142 248 149 227T179 192Q196 182 222 182Q244 182 260 189T283 207T294 227T299 242Q302 258 302 292T299 343ZM403 -75Q403 -50 389 -34T348 -11T299 -2T245 0H218Q151 0 138 -6Q118 -15 107 -34T95 -74Q95 -84 101 -97T122 -127T170 -155T250 -167Q319 -167 361 -139T403 -75Z" transform="translate(778,0)"></path></g><g data-mml-node="mo" transform="translate(12739.1,0)"><path data-c="2061" d=""></path></g><g data-mml-node="mi" transform="translate(12905.8,0)"><path data-c="4E" d="M42 46Q74 48 94 56T118 69T128 86V634H124Q114 637 52 637H25V683H232L235 680Q237 679 322 554T493 303L578 178V598Q572 608 568 613T544 627T492 637H475V683H483Q498 680 600 680Q706 680 715 683H724V637H707Q634 633 622 598L621 302V6L614 0H600Q585 0 582 3T481 150T282 443T171 605V345L172 86Q183 50 257 46H274V0H265Q250 3 150 3Q48 3 33 0H25V46H42Z"></path></g></g></g></svg></mjx-container></span></p>
<p>这个计算公式也叫做<strong>基于一元模型的计算公式</strong>，它综合考虑了切分出的词数和词频</p>
<h3 id="n元模型">N 元模型</h3>
<blockquote>
<p>给定一个词猜测下一个词。当给定 “NBA” 时，下一个词会联想到 “篮球”，但不太可能会联想到 “足球”</p>
</blockquote>
<p><strong>前后两词出现的概率是相互独立的</strong>的假设在实际中是<strong>不成立</strong>的。</p>
<p>N 元模型使用 n 个单词组成的序列来衡量切分方案的合理性，即概率的链规则。</p>
<p>P(S) = P(w1, w2, …, wM) = P(w1) * P(w2|w1) * P(w3|w1, w2) * … * P(wM|w1, w2, …, wM-1)</p>
<h2 id="jieba分词工具">Jieba 分词工具</h2>
<blockquote>
<p>源码地址：https://github.com/fxsjy/jieba</p>
</blockquote>
<h3 id="简介">简介</h3>
<h4 id="分词模式">分词模式</h4>
<ul>
<li>精确模式：将句子最精确的分开，适合文本分析</li>
<li>全模式：句子中所有可以成词的词语都扫描出来，速度快，不能解决歧义</li>
<li>搜索引擎模式：在精确模式的基础上，对长词再次切分，提高召回</li>
</ul>
<h4 id="实现原理">实现原理</h4>
<ul>
<li>语料库：词 + 词频 + 词性</li>
<li>基于 <del><strong>Trie 树</strong>结构</del><strong>前缀词典</strong>，使用<strong>前向遍历</strong>实现词图扫描，生成句子中汉字所有可能成词情况所构成的有向无环图 DAG
<ul>
<li>Python 中实现的 trie 树是基于 dict 类型的数据结构而且 dict 中又嵌套 dict 类型，这样嵌套很深，<strong>导致内存耗费严重</strong></li>
<li>前缀词典储存词语及其前缀，如 <code>set(['数', '数据', '数据结', '数据结构'])</code>。在句子中按字正向查找词语，在前缀列表中就继续查找，直到不在前缀列表中或超出句子范围。大约比原词库增加 40% 词条。</li>
</ul></li>
<li>采用<strong>动态规划</strong> DP 查找最大概率路径，找出基于词频的最大切分组合</li>
<li>对于未登录词，基于<strong>二元模型</strong>，采用基于汉字成词能力的 <strong>HMM</strong> 模型，使用 <strong>Viterbi 算法</strong></li>
</ul>
<h4 id="具体步骤">具体步骤</h4>
<ol type="1">
<li>给定待分词的句子，使用正则 (re_han) 获取匹配的中文字符 (和英文字符) 切分成的短语列表；</li>
<li>利用 get_DAG (sentence) 函数获得待切分句子的 DAG，首先检测 (check_initialized) 进程是否已经加载词库，若未初始化词库则调用 initialize 函数进行初始化，initialize 中判断有无已经缓存的前缀词典 cache_file 文件，若有相应的 cache 文件则直接使用 marshal.load 方法加载前缀词典，若无则通过 gen_pfdict 对指定的词库 dict.txt 进行计算生成前缀词典，到 jieba 进程的初始化工作完成后就调用 get_DAG 获得句子的 DAG；</li>
<li>根据 cut_block 指定具体的方法 (__cut_all,__cut_DAG,__cut_DAG_NO_HMM) 对每个短语使用 DAG 进行分词 ，如 cut_block=__cut_DAG 时则使用 DAG (查字典) 和动态规划，得到最大概率路径，对 DAG 中那些没有在字典中查到的字，组合成一个新的片段短语，使用 HMM 模型进行分词，也就是作者说的识别新词，即识别字典外的新词；</li>
<li>使用 python 的 yield 语法生成一个词语生成器，逐词语返回 </li>
</ol>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">源码地址：</span></span><br><span class="line"><span class="string">https://github.com/ustcdane/annotated_jieba/blob/master/jieba/__init__.py</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># jieba分词的主函数,返回结果是一个可迭代的 generator</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">cut</span>(<span class="params">self, sentence, cut_all=<span class="literal">False</span>, HMM=<span class="literal">True</span></span>):</span></span><br><span class="line">        <span class="string">'''</span></span><br><span class="line"><span class="string">        The main function that segments an entire sentence that contains</span></span><br><span class="line"><span class="string">        Chinese characters into seperated words.</span></span><br><span class="line"><span class="string">        Parameter:</span></span><br><span class="line"><span class="string">            - sentence: The str(unicode) to be segmented.</span></span><br><span class="line"><span class="string">            - cut_all: Model type. True for full pattern, False for accurate pattern.</span></span><br><span class="line"><span class="string">            - HMM: Whether to use the Hidden Markov Model.</span></span><br><span class="line"><span class="string">        '''</span></span><br><span class="line">        sentence = strdecode(sentence) <span class="comment"># 解码为unicode</span></span><br><span class="line">        <span class="comment"># 不同模式下的正则</span></span><br><span class="line">        <span class="keyword">if</span> cut_all:</span><br><span class="line">            re_han = re_han_cut_all</span><br><span class="line">            re_skip = re_skip_cut_all</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            re_han = re_han_default</span><br><span class="line">            re_skip = re_skip_default</span><br><span class="line"></span><br><span class="line">         <span class="comment"># 设置不同模式下的cut_block分词方法</span></span><br><span class="line">        <span class="keyword">if</span> cut_all:</span><br><span class="line">            cut_block = self.__cut_all</span><br><span class="line">        <span class="keyword">elif</span> HMM:</span><br><span class="line">            cut_block = self.__cut_DAG</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            cut_block = self.__cut_DAG_NO_HMM</span><br><span class="line">        <span class="comment"># 先用正则对句子进行切分</span></span><br><span class="line">        blocks = re_han.split(sentence)</span><br><span class="line">        <span class="keyword">for</span> blk <span class="keyword">in</span> blocks:</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> blk:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">if</span> re_han.match(blk): <span class="comment"># re_han匹配的串</span></span><br><span class="line">                <span class="keyword">for</span> word <span class="keyword">in</span> cut_block(blk):<span class="comment"># 根据不同模式的方法进行分词</span></span><br><span class="line">                    <span class="keyword">yield</span> word</span><br><span class="line">            <span class="keyword">else</span>:<span class="comment"># 按照re_skip正则表对blk进行重新切分</span></span><br><span class="line">                tmp = re_skip.split(blk)<span class="comment"># 返回list</span></span><br><span class="line">                <span class="keyword">for</span> x <span class="keyword">in</span> tmp:</span><br><span class="line">                    <span class="keyword">if</span> re_skip.match(x):</span><br><span class="line">                        <span class="keyword">yield</span> x</span><br><span class="line">                    <span class="keyword">elif</span> <span class="keyword">not</span> cut_all: <span class="comment"># 精准模式下逐个字符输出</span></span><br><span class="line">                        <span class="keyword">for</span> xx <span class="keyword">in</span> x:</span><br><span class="line">                            <span class="keyword">yield</span> xx</span><br><span class="line">                    <span class="keyword">else</span>: </span><br><span class="line">                        <span class="keyword">yield</span> x</span><br></pre></td></tr></tbody></table></figure>
<figure>
<img data-src="https://image.alessa0.cn/140354.png" alt="jieba"><figcaption aria-hidden="true">jieba</figcaption>
</figure>
<h4 id="前缀词典">前缀词典</h4>
<blockquote>
<p>对应代码中 Tokenizer.FREQ 字典</p>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gen_pfdict</span>(<span class="params">self, f_name</span>):</span></span><br><span class="line">    lfreq = {} <span class="comment"># 字典存储  词条:出现次数</span></span><br><span class="line">    ltotal = <span class="number">0</span> <span class="comment"># 所有词条的总的出现次数</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(f_name, <span class="string">'rb'</span>) <span class="keyword">as</span> f: <span class="comment"># 打开文件 dict.txt </span></span><br><span class="line">        <span class="keyword">for</span> lineno, line <span class="keyword">in</span> <span class="built_in">enumerate</span>(f, <span class="number">1</span>): <span class="comment"># 行号,行</span></span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                line = line.strip().decode(<span class="string">'utf-8'</span>) <span class="comment"># 解码为Unicode</span></span><br><span class="line">                word, freq = line.split(<span class="string">' '</span>)[:<span class="number">2</span>] <span class="comment"># 获得词条 及其出现次数</span></span><br><span class="line">                freq = <span class="built_in">int</span>(freq)</span><br><span class="line">                lfreq[word] = freq</span><br><span class="line">                ltotal += freq</span><br><span class="line">                <span class="keyword">for</span> ch <span class="keyword">in</span> xrange(<span class="built_in">len</span>(word)):<span class="comment"># 处理word的前缀</span></span><br><span class="line">                    wfrag = word[:ch + <span class="number">1</span>]</span><br><span class="line">                    <span class="keyword">if</span> wfrag <span class="keyword">not</span> <span class="keyword">in</span> lfreq: <span class="comment"># word前缀不在lfreq则其出现频次置0 </span></span><br><span class="line">                        lfreq[wfrag] = <span class="number">0</span></span><br><span class="line">            <span class="keyword">except</span> ValueError:</span><br><span class="line">                <span class="keyword">raise</span> ValueError(</span><br><span class="line">                    <span class="string">'invalid dictionary entry in %s at Line %s: %s'</span> % (f_name, lineno, line))</span><br><span class="line">    <span class="keyword">return</span> lfreq, ltotal</span><br></pre></td></tr></tbody></table></figure>
<h4 id="dag">DAG</h4>
<blockquote>
<p>对一个 sentence DAG 是以 {key:list [i,j…], …} 的字典结构存储，key 是词的在 sentence 中的位置，list 存放的是 sentence 中以位置 key 开始的可能的词语的结束位置.</p>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># DAG中是以{key:list,...}的字典结构存储</span></span><br><span class="line"><span class="comment"># key是字的开始位置</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_DAG</span>(<span class="params">self, sentence</span>):</span></span><br><span class="line">    self.check_initialized()</span><br><span class="line">    DAG = {}</span><br><span class="line">    N = <span class="built_in">len</span>(sentence)</span><br><span class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> xrange(N):</span><br><span class="line">        tmplist = []</span><br><span class="line">        i = k</span><br><span class="line">        frag = sentence[k]</span><br><span class="line">        <span class="keyword">while</span> i &lt; N <span class="keyword">and</span> frag <span class="keyword">in</span> self.FREQ:</span><br><span class="line">            <span class="keyword">if</span> self.FREQ[frag]:</span><br><span class="line">                tmplist.append(i)</span><br><span class="line">            i += <span class="number">1</span></span><br><span class="line">            frag = sentence[k:i + <span class="number">1</span>]</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> tmplist:</span><br><span class="line">            tmplist.append(k)</span><br><span class="line">        DAG[k] = tmplist</span><br><span class="line">    <span class="keyword">return</span> DAG</span><br></pre></td></tr></tbody></table></figure>
<h4 id="基于词频最大切分组合">基于词频最大切分组合</h4>
<blockquote>
<p>有了词库 (dict.txt) 的前缀字典和待分词句子 sentence 的 DAG，使用动态规划方法，从后往前遍历，选择一个频度得分最大的一个切分组合。</p>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">#动态规划，计算最大概率的切分组合</span></span><br><span class="line">   <span class="function"><span class="keyword">def</span> <span class="title">calc</span>(<span class="params">self, sentence, DAG, route</span>):</span></span><br><span class="line">       N = <span class="built_in">len</span>(sentence)</span><br><span class="line">       route[N] = (<span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">        <span class="comment"># 对概率值取对数之后的结果(可以让概率相乘的计算变成对数相加,防止相乘造成下溢)</span></span><br><span class="line">       logtotal = log(self.total)</span><br><span class="line">       <span class="comment"># 从后往前遍历句子 反向计算最大概率</span></span><br><span class="line">       <span class="keyword">for</span> idx <span class="keyword">in</span> xrange(N - <span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>):</span><br><span class="line">          <span class="comment"># 列表推倒求最大概率对数路径</span></span><br><span class="line">          <span class="comment"># route[idx] = max([ (概率对数，词语末字位置) for x in DAG[idx] ])</span></span><br><span class="line">          <span class="comment"># 以idx:(概率对数最大值，词语末字位置)键值对形式保存在route中</span></span><br><span class="line">          <span class="comment"># route[x+1][0] 表示 词路径[x+1,N-1]的最大概率对数,</span></span><br><span class="line">          <span class="comment"># [x+1][0]即表示取句子x+1位置对应元组(概率对数，词语末字位置)的概率对数</span></span><br><span class="line">           route[idx] = <span class="built_in">max</span>((log(self.FREQ.get(sentence[idx:x + <span class="number">1</span>]) <span class="keyword">or</span> <span class="number">1</span>) -</span><br><span class="line">                             logtotal + route[x + <span class="number">1</span>][<span class="number">0</span>], x) <span class="keyword">for</span> x <span class="keyword">in</span> DAG[idx])</span><br></pre></td></tr></tbody></table></figure>
<blockquote>
<p>例：广州本田雅阁汽车</p>
</blockquote>
<ul>
<li>P (车) = -8.80006921905【语料库 “车” 词频取 log】</li>
<li>P (汽) = -12.897543648【语料库 “汽” 词频取 log】</li>
<li>P (汽车) = -8.78007494718【语料库 “汽车” 词频取 log】</li>
<li>P (汽车) &gt; P (汽) + P (车)，所以 Route 概率使用 P (汽车)</li>
<li>……</li>
</ul>
<figure class="highlight apache"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attribute">Route</span>: {<span class="number">0</span>: (-<span class="number">33</span>.<span class="number">271126717488308</span>, <span class="number">1</span>),</span><br><span class="line">        <span class="attribute">1</span>: (-<span class="number">32</span>.<span class="number">231489259807965</span>, <span class="number">1</span>),</span><br><span class="line">        <span class="attribute">2</span>: (-<span class="number">23</span>.<span class="number">899234625632083</span>, <span class="number">5</span>),</span><br><span class="line">        <span class="attribute">3</span>: (-<span class="number">31</span>.<span class="number">523246813843940</span>, <span class="number">3</span>),</span><br><span class="line">        <span class="attribute">4</span>: (-<span class="number">22</span>.<span class="number">214895405024865</span>, <span class="number">5</span>),</span><br><span class="line">        <span class="attribute">5</span>: (-<span class="number">19</span>.<span class="number">008467873683230</span>, <span class="number">5</span>),</span><br><span class="line">        <span class="attribute">6</span>: (-<span class="number">8</span>.<span class="number">7800749471799175</span>, <span class="number">7</span>),</span><br><span class="line">        <span class="attribute">7</span>: (-<span class="number">8</span>.<span class="number">8000692190498415</span>, <span class="number">7</span>),</span><br><span class="line">        <span class="attribute">8</span>: (<span class="number">0</span>.<span class="number">0</span>, '')}</span><br></pre></td></tr></tbody></table></figure>
<figure>
<img data-src="https://image.alessa0.cn/143320.png" alt="route"><figcaption aria-hidden="true">route</figcaption>
</figure>
<h3 id="隐马尔可夫模型hmm">隐马尔可夫模型 HMM</h3>
<h4 id="马尔可夫链">马尔可夫链</h4>
<blockquote>
<p>一个随机过程模型，它表述了一系列可能的事件，在这个系列当中每一个事件的概率仅依赖于前一个事件。</p>
</blockquote>
<ul>
<li>参数
<ul>
<li><strong>状态</strong>：由数字表示，假设共有 M 个</li>
<li><strong>初始概率</strong>：<span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="32.593ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 14406 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D70B" d="M132 -11Q98 -11 98 22V33L111 61Q186 219 220 334L228 358H196Q158 358 142 355T103 336Q92 329 81 318T62 297T53 285Q51 284 38 284Q19 284 19 294Q19 300 38 329T93 391T164 429Q171 431 389 431Q549 431 553 430Q573 423 573 402Q573 371 541 360Q535 358 472 358H408L405 341Q393 269 393 222Q393 170 402 129T421 65T431 37Q431 20 417 5T381 -10Q370 -10 363 -7T347 17T331 77Q330 86 330 121Q330 170 339 226T357 318T367 358H269L268 354Q268 351 249 275T206 114T175 17Q164 -11 132 -11Z"></path></g><g data-mml-node="TeXAtom" transform="translate(603,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1299.2,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(2355,0)"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mrow" transform="translate(3272.6,0)"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(389,0)"><g data-mml-node="mi"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g><g data-mml-node="TeXAtom" transform="translate(646,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1716.3,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(2772.1,0)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(3293.1,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mstyle" transform="translate(6954.7,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mi" transform="translate(7954.7,0)"><path data-c="6B" d="M36 46H50Q89 46 97 60V68Q97 77 97 91T97 124T98 167T98 217T98 272T98 329Q98 366 98 407T98 482T98 542T97 586T97 603Q94 622 83 628T38 637H20V660Q20 683 22 683L32 684Q42 685 61 686T98 688Q115 689 135 690T165 693T176 694H179V463L180 233L240 287Q300 341 304 347Q310 356 310 364Q310 383 289 385H284V431H293Q308 428 412 428Q475 428 484 431H489V385H476Q407 380 360 341Q286 278 286 274Q286 273 349 181T420 79Q434 60 451 53T500 46H511V0H505Q496 3 418 3Q322 3 307 0H299V46H306Q330 48 330 65Q330 72 326 79Q323 84 276 153T228 222L176 176V120V84Q176 65 178 59T189 49Q210 46 238 46H254V0H246Q231 3 137 3T28 0H20V46H36Z"></path></g><g data-mml-node="mo" transform="translate(8760.5,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(9816.3,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(10316.3,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(10761,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(11261,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mo" transform="translate(11705.6,0)"><path data-c="2026" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60ZM525 60Q525 84 542 102T585 120Q609 120 627 104T646 61Q646 36 629 18T586 0T543 17T525 60ZM972 60Q972 84 989 102T1032 120Q1056 120 1074 104T1093 61Q1093 36 1076 18T1033 0T990 17T972 60Z"></path></g><g data-mml-node="mo" transform="translate(13044.3,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(13489,0)"><path data-c="4D" d="M132 622Q125 629 121 631T105 634T62 637H29V683H135Q221 683 232 682T249 675Q250 674 354 398L458 124L562 398Q666 674 668 675Q671 681 683 682T781 683H887V637H854Q814 636 803 634T785 622V61Q791 51 802 49T854 46H887V0H876Q855 3 736 3Q605 3 596 0H585V46H618Q660 47 669 49T688 61V347Q688 424 688 461T688 546T688 613L687 632Q454 14 450 7Q446 1 430 1T410 7Q409 9 292 316L176 624V606Q175 588 175 543T175 463T175 356L176 86Q187 50 261 46H278V0H269Q254 3 154 3Q52 3 37 0H29V46H46Q78 48 98 56T122 69T132 86V622Z"></path></g></g></g></svg></mjx-container></span></li>
<li><strong>状态转移概率</strong>：<span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.65ex" xmlns="http://www.w3.org/2000/svg" width="43.853ex" height="2.347ex" role="img" focusable="false" viewBox="0 -750 19383.1 1037.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="TeXAtom" transform="translate(562,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(799,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1665.5,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(2721.3,0)"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mrow" transform="translate(3638.9,0)"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(389,0)"><g data-mml-node="mi"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g><g data-mml-node="TeXAtom" transform="translate(646,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mo" transform="translate(361,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(1139,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2521.7,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(3577.5,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(3875.5,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="msub" transform="translate(4153.5,0)"><g data-mml-node="mi"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g><g data-mml-node="TeXAtom" transform="translate(646,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g></g></g><g data-mml-node="mo" transform="translate(5382.5,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(6438.3,0)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(6959.3,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mstyle" transform="translate(10987.2,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mi" transform="translate(11987.2,0)"><path data-c="6B" d="M36 46H50Q89 46 97 60V68Q97 77 97 91T97 124T98 167T98 217T98 272T98 329Q98 366 98 407T98 482T98 542T97 586T97 603Q94 622 83 628T38 637H20V660Q20 683 22 683L32 684Q42 685 61 686T98 688Q115 689 135 690T165 693T176 694H179V463L180 233L240 287Q300 341 304 347Q310 356 310 364Q310 383 289 385H284V431H293Q308 428 412 428Q475 428 484 431H489V385H476Q407 380 360 341Q286 278 286 274Q286 273 349 181T420 79Q434 60 451 53T500 46H511V0H505Q496 3 418 3Q322 3 307 0H299V46H306Q330 48 330 65Q330 72 326 79Q323 84 276 153T228 222L176 176V120V84Q176 65 178 59T189 49Q210 46 238 46H254V0H246Q231 3 137 3T28 0H20V46H36Z"></path></g><g data-mml-node="mo" transform="translate(12515.2,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(12959.9,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(13737.7,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(14793.5,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(15293.5,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(15738.1,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(16238.1,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mo" transform="translate(16682.8,0)"><path data-c="2026" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60ZM525 60Q525 84 542 102T585 120Q609 120 627 104T646 61Q646 36 629 18T586 0T543 17T525 60ZM972 60Q972 84 989 102T1032 120Q1056 120 1074 104T1093 61Q1093 36 1076 18T1033 0T990 17T972 60Z"></path></g><g data-mml-node="mo" transform="translate(18021.5,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(18466.1,0)"><path data-c="4D" d="M132 622Q125 629 121 631T105 634T62 637H29V683H135Q221 683 232 682T249 675Q250 674 354 398L458 124L562 398Q666 674 668 675Q671 681 683 682T781 683H887V637H854Q814 636 803 634T785 622V61Q791 51 802 49T854 46H887V0H876Q855 3 736 3Q605 3 596 0H585V46H618Q660 47 669 49T688 61V347Q688 424 688 461T688 546T688 613L687 632Q454 14 450 7Q446 1 430 1T410 7Q409 9 292 316L176 624V606Q175 588 175 543T175 463T175 356L176 86Q187 50 261 46H278V0H269Q254 3 154 3Q52 3 37 0H29V46H46Q78 48 98 56T122 69T132 86V622Z"></path></g></g></g></svg></mjx-container></span></li>
</ul></li>
</ul>
<figure>
<img data-src="https://image.alessa0.cn/011258.png" alt="马尔可夫"><figcaption aria-hidden="true">马尔可夫</figcaption>
</figure>
<ul>
<li>例子：<strong>天气</strong>
<ul>
<li>状态：{晴天，雨天，多云，……}</li>
<li> 初始概率：P (晴天), P (雨天), ……</li>
<li> 状态转移概率：P (晴天 | 雨天), P (雨天 | 多云), ……</li>
</ul></li>
<li> 参数估计
<ul>
<li>最大似然法
<ul>
<li><strong>初始概率</strong>：P (S1 = k) = (k 作为序列开始的次数) / (观测序列总数)</li>
<li><strong> 状态转移概率</strong>：P (St + 1 = l |St = k) = (l 紧跟 k 出现的次数) / (k 出现的总次数)</li>
</ul></li>
</ul></li>
<li><strong> 小结</strong>
<ul>
<li>马尔可夫链是对一个序列数据建模</li>
</ul></li>
</ul>
<h4 id="隐马尔可夫模型">隐马尔可夫模型</h4>
<p>HMM 是一个<strong>关于时序的概率模型</strong>，它的<strong>变量分为两组</strong>：</p>
<ul>
<li>状态变量 (隐变量)：由马尔可夫链随机生成</li>
<li>观测变量 ：状态序列每个状态对应生成一个观测结果</li>
</ul>
<p>状态变量和观测变量各自都是一个时间序列，每个状态 / 观测值都和一个时刻相对应</p>
<blockquote>
<p><strong>假设 1</strong>：假设隐藏的马尔可夫链在任意时刻 tt 的状态只依赖于前一个时刻（t − 1 时）的状态，与其他时刻的状态及观测无关，也与时刻 t 无关。</p>
<p><strong>假设 2</strong>：假设任意时刻的观测只依赖于该时刻的马尔可夫链状态，与其他观测及状态无关。</p>
</blockquote>
<ul>
<li><p>参数</p>
<ul>
<li><p>状态：由数字表示，假设共有 M 个，状态序列 S</p></li>
<li><p><strong> 观测</strong>：由数字表示，假设共有 N 个，观测序列 O</p></li>
<li><p> 状态转移概率：<span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.65ex" xmlns="http://www.w3.org/2000/svg" width="26.054ex" height="2.347ex" role="img" focusable="false" viewBox="0 -750 11515.7 1037.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">由</text></g><g data-mml-node="msub" transform="translate(1177.8,0)"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="TeXAtom" transform="translate(562,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(799,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2843.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">表</text><text data-variant="normal" transform="translate(900,0) scale(1,-1)" font-size="884px" font-family="serif">示</text></g><g data-mml-node="mo" transform="translate(4643.3,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mo" transform="translate(5087.9,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">通</text><text data-variant="normal" transform="translate(900,0) scale(1,-1)" font-size="884px" font-family="serif">常</text><text data-variant="normal" transform="translate(1800,0) scale(1,-1)" font-size="884px" font-family="serif">记</text><text data-variant="normal" transform="translate(2700,0) scale(1,-1)" font-size="884px" font-family="serif">作</text><text data-variant="normal" transform="translate(3600,0) scale(1,-1)" font-size="884px" font-family="serif">矩</text><text data-variant="normal" transform="translate(4500,0) scale(1,-1)" font-size="884px" font-family="serif">阵</text></g><g data-mml-node="mi" transform="translate(10765.7,0)"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z"></path></g></g></g></svg></mjx-container></span></p></li>
<li><p><strong>发射概率</strong>：<span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="73.871ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 32650.8 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="TeXAtom" transform="translate(462,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(880.4,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1269.4,0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(1841.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2508.2,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(3564,0)"><path data-c="50" d="M130 622Q123 629 119 631T103 634T60 637H27V683H214Q237 683 276 683T331 684Q419 684 471 671T567 616Q624 563 624 489Q624 421 573 372T451 307Q429 302 328 301H234V181Q234 62 237 58Q245 47 304 46H337V0H326Q305 3 182 3Q47 3 38 0H27V46H60Q102 47 111 49T130 61V622ZM507 488Q507 514 506 528T500 564T483 597T450 620T397 635Q385 637 307 637H286Q237 637 234 628Q231 624 231 483V342H302H339Q390 342 423 349T481 382Q507 411 507 488Z"></path></g><g data-mml-node="mrow" transform="translate(4411.6,0)"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(389,0)"><g data-mml-node="mi"><path data-c="1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path></g><g data-mml-node="TeXAtom" transform="translate(796,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1768,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(2823.8,0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(3395.8,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="msub" transform="translate(3673.8,0)"><g data-mml-node="mi"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g><g data-mml-node="TeXAtom" transform="translate(646,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g></g></g><g data-mml-node="mo" transform="translate(4902.9,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(5958.6,0)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(6479.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mstyle" transform="translate(11280.3,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mi" transform="translate(12280.3,0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(13130,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(14185.8,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(14685.8,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(15130.5,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(15630.5,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mo" transform="translate(16075.2,0)"><path data-c="2026" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60ZM525 60Q525 84 542 102T585 120Q609 120 627 104T646 61Q646 36 629 18T586 0T543 17T525 60ZM972 60Q972 84 989 102T1032 120Q1056 120 1074 104T1093 61Q1093 36 1076 18T1033 0T990 17T972 60Z"></path></g><g data-mml-node="mo" transform="translate(17413.8,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(17858.5,0)"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path></g><g data-mml-node="mo" transform="translate(18746.5,0)"><path data-c="3B" d="M78 370Q78 394 95 412T138 430Q162 430 180 414T199 371Q199 346 182 328T139 310T96 327T78 370ZM78 60Q78 85 94 103T137 121Q202 121 202 8Q202 -44 183 -94T144 -169T118 -194Q115 -194 106 -186T95 -174Q94 -171 107 -155T137 -107T160 -38Q161 -32 162 -22T165 -4T165 4Q165 5 161 4T142 0Q110 0 94 18T78 60Z"></path></g><g data-mml-node="mi" transform="translate(19191.2,0)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(19989.9,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(21045.7,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(21545.7,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(21990.4,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(22490.4,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mo" transform="translate(22935,0)"><path data-c="2026" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60ZM525 60Q525 84 542 102T585 120Q609 120 627 104T646 61Q646 36 629 18T586 0T543 17T525 60ZM972 60Q972 84 989 102T1032 120Q1056 120 1074 104T1093 61Q1093 36 1076 18T1033 0T990 17T972 60Z"></path></g><g data-mml-node="mo" transform="translate(24273.7,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(24718.4,0)"><path data-c="1D440" d="M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z"></path></g><g data-mml-node="mo" transform="translate(25769.4,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mo" transform="translate(26214,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">通</text><text data-variant="normal" transform="translate(900,0) scale(1,-1)" font-size="884px" font-family="serif">常</text><text data-variant="normal" transform="translate(1800,0) scale(1,-1)" font-size="884px" font-family="serif">记</text><text data-variant="normal" transform="translate(2700,0) scale(1,-1)" font-size="884px" font-family="serif">作</text><text data-variant="normal" transform="translate(3600,0) scale(1,-1)" font-size="884px" font-family="serif">矩</text><text data-variant="normal" transform="translate(4500,0) scale(1,-1)" font-size="884px" font-family="serif">阵</text></g><g data-mml-node="mi" transform="translate(31891.8,0)"><path data-c="1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z"></path></g></g></g></svg></mjx-container></span></p></li>
<li><p>初始概率：<span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.452ex" xmlns="http://www.w3.org/2000/svg" width="9.676ex" height="2.149ex" role="img" focusable="false" viewBox="0 -750 4277 950"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">由</text></g><g data-mml-node="msub" transform="translate(1177.8,0)"><g data-mml-node="mi"><path data-c="1D70B" d="M132 -11Q98 -11 98 22V33L111 61Q186 219 220 334L228 358H196Q158 358 142 355T103 336Q92 329 81 318T62 297T53 285Q51 284 38 284Q19 284 19 294Q19 300 38 329T93 391T164 429Q171 431 389 431Q549 431 553 430Q573 423 573 402Q573 371 541 360Q535 358 472 358H408L405 341Q393 269 393 222Q393 170 402 129T421 65T431 37Q431 20 417 5T381 -10Q370 -10 363 -7T347 17T331 77Q330 86 330 121Q330 170 339 226T357 318T367 358H269L268 354Q268 351 249 275T206 114T175 17Q164 -11 132 -11Z"></path></g><g data-mml-node="TeXAtom" transform="translate(603,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2477,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">表</text><text data-variant="normal" transform="translate(900,0) scale(1,-1)" font-size="884px" font-family="serif">示</text></g></g></g></svg></mjx-container></span></p></li>
</ul></li>
</ul>
<figure>
<img data-src="https://image.alessa0.cn/135221.png" alt="HMM"><figcaption aria-hidden="true"> HMM</figcaption>
</figure>
<h5 id="hmm解决三类问题">HMM 解决三类问题</h5>
<ul>
<li><p>概率计算问题（又称评价问题）</p>
<ul>
<li><p>已知：</p>
<ul>
<li>模型<span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="12.31ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 5440.9 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D706" d="M166 673Q166 685 183 694H202Q292 691 316 644Q322 629 373 486T474 207T524 67Q531 47 537 34T546 15T551 6T555 2T556 -2T550 -11H482Q457 3 450 18T399 152L354 277L340 262Q327 246 293 207T236 141Q211 112 174 69Q123 9 111 -1T83 -12Q47 -12 47 20Q47 37 61 52T199 187Q229 216 266 252T321 306L338 322Q338 323 288 462T234 612Q214 657 183 657Q166 657 166 673Z"></path></g><g data-mml-node="mo" transform="translate(860.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mo" transform="translate(1916.6,0)"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mi" transform="translate(2194.6,0)"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z"></path></g><g data-mml-node="mo" transform="translate(2944.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(3389.2,0)"><path data-c="1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z"></path></g><g data-mml-node="mo" transform="translate(4148.2,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(4592.9,0)"><path data-c="1D70B" d="M132 -11Q98 -11 98 22V33L111 61Q186 219 220 334L228 358H196Q158 358 142 355T103 336Q92 329 81 318T62 297T53 285Q51 284 38 284Q19 284 19 294Q19 300 38 329T93 391T164 429Q171 431 389 431Q549 431 553 430Q573 423 573 402Q573 371 541 360Q535 358 472 358H408L405 341Q393 269 393 222Q393 170 402 129T421 65T431 37Q431 20 417 5T381 -10Q370 -10 363 -7T347 17T331 77Q330 86 330 121Q330 170 339 226T357 318T367 358H269L268 354Q268 351 249 275T206 114T175 17Q164 -11 132 -11Z"></path></g><g data-mml-node="mo" transform="translate(5162.9,0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g></svg></mjx-container></span></li>
<li>观测序列 O</li>
</ul></li>
<li><p> 求解：</p>
<ul>
<li>给定观测序列，求它和评估模型之间的匹配度<span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="7.133ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 3153 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(751,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1140,0)"><path data-c="1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path></g><g data-mml-node="mo" transform="translate(1903,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(2181,0)"><path data-c="1D706" d="M166 673Q166 685 183 694H202Q292 691 316 644Q322 629 373 486T474 207T524 67Q531 47 537 34T546 15T551 6T555 2T556 -2T550 -11H482Q457 3 450 18T399 152L354 277L340 262Q327 246 293 207T236 141Q211 112 174 69Q123 9 111 -1T83 -12Q47 -12 47 20Q47 37 61 52T199 187Q229 216 266 252T321 306L338 322Q338 323 288 462T234 612Q214 657 183 657Q166 657 166 673Z"></path></g><g data-mml-node="mo" transform="translate(2764,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></span></li>
</ul></li>
<li><p>方案：</p>
<ul>
<li>前向 - 后向算法</li>
</ul></li>
</ul></li>
<li><p>预测问题（又称解码问题）</p>
<ul>
<li>已知：
<ul>
<li>模型<span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="12.31ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 5440.9 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D706" d="M166 673Q166 685 183 694H202Q292 691 316 644Q322 629 373 486T474 207T524 67Q531 47 537 34T546 15T551 6T555 2T556 -2T550 -11H482Q457 3 450 18T399 152L354 277L340 262Q327 246 293 207T236 141Q211 112 174 69Q123 9 111 -1T83 -12Q47 -12 47 20Q47 37 61 52T199 187Q229 216 266 252T321 306L338 322Q338 323 288 462T234 612Q214 657 183 657Q166 657 166 673Z"></path></g><g data-mml-node="mo" transform="translate(860.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mo" transform="translate(1916.6,0)"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mi" transform="translate(2194.6,0)"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z"></path></g><g data-mml-node="mo" transform="translate(2944.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(3389.2,0)"><path data-c="1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z"></path></g><g data-mml-node="mo" transform="translate(4148.2,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(4592.9,0)"><path data-c="1D70B" d="M132 -11Q98 -11 98 22V33L111 61Q186 219 220 334L228 358H196Q158 358 142 355T103 336Q92 329 81 318T62 297T53 285Q51 284 38 284Q19 284 19 294Q19 300 38 329T93 391T164 429Q171 431 389 431Q549 431 553 430Q573 423 573 402Q573 371 541 360Q535 358 472 358H408L405 341Q393 269 393 222Q393 170 402 129T421 65T431 37Q431 20 417 5T381 -10Q370 -10 363 -7T347 17T331 77Q330 86 330 121Q330 170 339 226T357 318T367 358H269L268 354Q268 351 249 275T206 114T175 17Q164 -11 132 -11Z"></path></g><g data-mml-node="mo" transform="translate(5162.9,0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g></svg></mjx-container></span></li>
<li>观测序列 O</li>
</ul></li>
<li> 求解：
<ul>
<li>给定观测序列，求最有可能与之对应的状态序列 S</li>
</ul></li>
<li> 方案：
<ul>
<li>Viterbi 算法</li>
</ul></li>
</ul></li>
<li><p>学习问题（又称训练问题）</p>
<ul>
<li>已知：
<ul>
<li>观测序列 O</li>
<li> 或许会给与之对应的状态序列 S</li>
</ul></li>
<li> 求解：
<ul>
<li>训练模型<span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="12.31ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 5440.9 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D706" d="M166 673Q166 685 183 694H202Q292 691 316 644Q322 629 373 486T474 207T524 67Q531 47 537 34T546 15T551 6T555 2T556 -2T550 -11H482Q457 3 450 18T399 152L354 277L340 262Q327 246 293 207T236 141Q211 112 174 69Q123 9 111 -1T83 -12Q47 -12 47 20Q47 37 61 52T199 187Q229 216 266 252T321 306L338 322Q338 323 288 462T234 612Q214 657 183 657Q166 657 166 673Z"></path></g><g data-mml-node="mo" transform="translate(860.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mo" transform="translate(1916.6,0)"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mi" transform="translate(2194.6,0)"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z"></path></g><g data-mml-node="mo" transform="translate(2944.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(3389.2,0)"><path data-c="1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z"></path></g><g data-mml-node="mo" transform="translate(4148.2,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(4592.9,0)"><path data-c="1D70B" d="M132 -11Q98 -11 98 22V33L111 61Q186 219 220 334L228 358H196Q158 358 142 355T103 336Q92 329 81 318T62 297T53 285Q51 284 38 284Q19 284 19 294Q19 300 38 329T93 391T164 429Q171 431 389 431Q549 431 553 430Q573 423 573 402Q573 371 541 360Q535 358 472 358H408L405 341Q393 269 393 222Q393 170 402 129T421 65T431 37Q431 20 417 5T381 -10Q370 -10 363 -7T347 17T331 77Q330 86 330 121Q330 170 339 226T357 318T367 358H269L268 354Q268 351 249 275T206 114T175 17Q164 -11 132 -11Z"></path></g><g data-mml-node="mo" transform="translate(5162.9,0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g></svg></mjx-container></span>，使其<span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="7.133ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 3153 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(751,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1140,0)"><path data-c="1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path></g><g data-mml-node="mo" transform="translate(1903,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(2181,0)"><path data-c="1D706" d="M166 673Q166 685 183 694H202Q292 691 316 644Q322 629 373 486T474 207T524 67Q531 47 537 34T546 15T551 6T555 2T556 -2T550 -11H482Q457 3 450 18T399 152L354 277L340 262Q327 246 293 207T236 141Q211 112 174 69Q123 9 111 -1T83 -12Q47 -12 47 20Q47 37 61 52T199 187Q229 216 266 252T321 306L338 322Q338 323 288 462T234 612Q214 657 183 657Q166 657 166 673Z"></path></g><g data-mml-node="mo" transform="translate(2764,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></span>最大，最好地描述观测数据</li>
</ul></li>
<li>方案：
<ul>
<li>有监督 / 无监督</li>
</ul></li>
</ul></li>
</ul>
<blockquote>
<p>相关文章：<a href="http://www.52nlp.cn/hmm相关文章索引">52nlp</a></p>
</blockquote>
<h4 id="jieba-hmm">Jieba HMM</h4>
<ul>
<li>参数
<ul>
<li>初始概率
<ul>
<li>BEMS 位置信息</li>
<li>词性</li>
<li>例: {('B', 'mq'): -6.78695300139688, ……}</li>
</ul></li>
<li> 转移概率
<ul>
<li>例: {('B', 'ad'): {('E', 'ad'): -0.0007479013978476627}, ……}</li>
</ul></li>
<li> 发射概率
<ul>
<li>例: {('B', 'df'): {u' 不 ': 0.0}……}</li>
</ul></li>
</ul></li>
<li>Viterbi 算法实现 </li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">#状态转移矩阵，比如B状态前只可能是E或S状态  </span></span><br><span class="line">PrevStatus = {  </span><br><span class="line">    <span class="string">'B'</span>:(<span class="string">'E'</span>,<span class="string">'S'</span>),  </span><br><span class="line">    <span class="string">'M'</span>:(<span class="string">'M'</span>,<span class="string">'B'</span>),  </span><br><span class="line">    <span class="string">'S'</span>:(<span class="string">'S'</span>,<span class="string">'E'</span>),  </span><br><span class="line">    <span class="string">'E'</span>:(<span class="string">'B'</span>,<span class="string">'M'</span>)  </span><br><span class="line">}  </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">viterbi</span>(<span class="params">obs, states, start_p, trans_p, emit_p</span>):</span></span><br><span class="line">    V = [{}]  <span class="comment"># 状态概率矩阵  </span></span><br><span class="line">    path = {}</span><br><span class="line">    <span class="keyword">for</span> y <span class="keyword">in</span> states:  <span class="comment"># 初始化状态概率</span></span><br><span class="line">        V[<span class="number">0</span>][y] = start_p[y] + emit_p[y].get(obs[<span class="number">0</span>], MIN_FLOAT)</span><br><span class="line">        path[y] = [y] <span class="comment"># 记录路径</span></span><br><span class="line">    <span class="keyword">for</span> t <span class="keyword">in</span> xrange(<span class="number">1</span>, <span class="built_in">len</span>(obs)):</span><br><span class="line">        V.append({})</span><br><span class="line">        newpath = {}</span><br><span class="line">        <span class="keyword">for</span> y <span class="keyword">in</span> states:</span><br><span class="line">            em_p = emit_p[y].get(obs[t], MIN_FLOAT)</span><br><span class="line">            <span class="comment"># t时刻状态为y的最大概率(从t-1时刻中选择到达时刻t且状态为y的状态y0)</span></span><br><span class="line">            (prob, state) = <span class="built_in">max</span>([(V[t - <span class="number">1</span>][y0] + trans_p[y0].get(y, MIN_FLOAT) + em_p, y0) <span class="keyword">for</span> y0 <span class="keyword">in</span> PrevStatus[y]])</span><br><span class="line">            V[t][y] = prob</span><br><span class="line">            newpath[y] = path[state] + [y] <span class="comment"># 只保存概率最大的一种路径 </span></span><br><span class="line">        path = newpath </span><br><span class="line">    <span class="comment"># 求出最后一个字哪一种状态的对应概率最大，最后一个字只可能是两种情况：E(结尾)和S(独立词)  </span></span><br><span class="line">    (prob, state) = <span class="built_in">max</span>((V[<span class="built_in">len</span>(obs) - <span class="number">1</span>][y], y) <span class="keyword">for</span> y <span class="keyword">in</span> <span class="string">'ES'</span>)</span><br></pre></td></tr></tbody></table></figure>
<p><br></p>
<p><meting-js id="525086802" server="netease" type="song" preload="none"></meting-js></p>
<hr>
]]></content>
      <categories>
        <category>技术</category>
        <category>大数据</category>
        <category>复习笔记</category>
      </categories>
      <tags>
        <tag>BigData</tag>
        <tag>TF-IDF</tag>
        <tag>LCS</tag>
        <tag>HMM</tag>
        <tag>中文分词</tag>
      </tags>
  </entry>
  <entry>
    <title>BigData 复习笔记 03：推荐算法</title>
    <url>/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/0ddda61dedcf/</url>
    <content><![CDATA[<p class="description">
推荐系统
</p>
<figure>
<img data-src="https://image.alessa0.cn/120137.jpg" alt="kari-shea-Pe97ltx47Lw-unsplash"><figcaption aria-hidden="true">kari-shea-Pe97ltx47Lw-unsplash</figcaption>
</figure>
<span id="more"></span>
<blockquote class="blockquote-center">
<p>Chapter03. 推荐算法</p>

</blockquote>
<h1 id="推荐系统">推荐系统</h1>
<blockquote>
<p>个性化推荐系统，基于海量数据向用户建议商品</p>
</blockquote>
<p>基于数据，利用算法，对用户和商品深度挖掘</p>
<h2 id="常用推荐算法">常用推荐算法</h2>
<h3 id="基于人口的推荐">基于人口的推荐</h3>
<blockquote>
<p>最容易实现</p>
</blockquote>
<p>根据用户基本信息发现用户之间的相关程度，将相似用户喜欢的商品推荐给当前用户。</p>
<p>基本信息包括：<strong>（不包含用户行为信息）</strong></p>
<ul>
<li>性别</li>
<li>年龄</li>
<li>地域</li>
<li>……</li>
</ul>
<h3 id="基于内容的推荐">基于内容的推荐</h3>
<blockquote>
<p>Content Based，初期最为广泛使用</p>
</blockquote>
<p>根据商品的元信息，利用内容相关性，基于用户以往的喜好，给用户推荐相似的商品</p>
<h4 id="引入item属性的cb推荐">引入 Item 属性的 CB 推荐</h4>
<p>对当前 Item 进行内容分析，利用属性索引，在数据库中进行相关性计算，取出相关 Item 推荐给 User</p>
<ul>
<li>优点
<ul>
<li>提升推荐结果相关性</li>
<li>结果可解释</li>
<li>推荐结果易被用户感知</li>
</ul></li>
<li>缺点
<ul>
<li>无个性化</li>
<li>依赖对 Item 的深度分析</li>
</ul></li>
</ul>
<h4 id="引入user属性的cb推荐">引入 User 属性的 CB 推荐</h4>
<p>对当前 Item 进行内容分析，利用属性索引，结合 User 行为数据，在数据库中进行相关性计算，取出相关 Item 推荐给 User</p>
<ul>
<li>优点
<ul>
<li>用户模型刻画了用户兴趣需求</li>
<li>推荐形式多样，具有个性化</li>
<li>结果可解释</li>
</ul></li>
<li>缺点
<ul>
<li>推荐精度低</li>
<li>马太效应
<ul>
<li>解决：试探，加入随机推荐位</li>
</ul></li>
<li>用户行为稀疏导致覆盖率低</li>
</ul></li>
</ul>
<p>不同场景选取不同推荐方式</p>
<h4 id="demo倒排表">【Demo】倒排表</h4>
<blockquote>
<p>对 Item 进行挖掘，得出 Token -&gt; ItemA:ScoreA, ItemB:ScoreB, … 倒排表</p>
</blockquote>
<ol type="1">
<li><p>对 Item 中文分词，得出正排表</p>
<figure class="highlight python"><figcaption><span>fenci.py</span></figcaption><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">os.system(<span class="string">'tar xvzf jieba.tar.gz &gt; /dev/null'</span>)</span><br><span class="line">sys.path.append(<span class="string">"./"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> jieba</span><br><span class="line"><span class="keyword">import</span> jieba.posseg</span><br><span class="line"><span class="keyword">import</span> jieba.analyse</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> sys.stdin:</span><br><span class="line">    ss = line.strip().split(<span class="string">'\t'</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(ss) != <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    music_id, music_name = ss</span><br><span class="line">    tmp_list = []</span><br><span class="line">    <span class="keyword">for</span> x, w <span class="keyword">in</span> jieba.analyse.extract_tags(music_name, withWeight=<span class="literal">True</span>):</span><br><span class="line">        tmp_list.append((x, <span class="built_in">float</span>(w)))</span><br><span class="line">    final_list = <span class="built_in">sorted</span>(tmp_list, key=<span class="keyword">lambda</span> x: x[<span class="number">1</span>], reverse=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'\t'</span>.join([music_id, music_name, <span class="string">','</span>.join([<span class="string">':'</span>.join([t_w[<span class="number">0</span>], <span class="built_in">str</span>(t_w[<span class="number">1</span>])]) <span class="keyword">for</span> t_w <span class="keyword">in</span> final_list])]))</span><br></pre></td></tr></tbody></table></figure></li>
<li><p>转置</p>
<figure class="highlight python"><figcaption><span>map_inverted.py</span></figcaption><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> sys.stdin:</span><br><span class="line">    ss = line.strip().split(<span class="string">'\t'</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(ss) != <span class="number">3</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    music_id = ss[<span class="number">0</span>].strip()</span><br><span class="line">    music_name = ss[<span class="number">1</span>].strip()</span><br><span class="line">    music_token_list = ss[<span class="number">2</span>].strip()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> feature <span class="keyword">in</span> music_token_list.split(<span class="string">','</span>):</span><br><span class="line">        ss = feature.strip().split(<span class="string">':'</span>)</span><br><span class="line">        token = ss[<span class="number">0</span>].strip()</span><br><span class="line">        weight = ss[<span class="number">1</span>].strip()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">'\t'</span>.join([token, music_name, weight]))</span><br></pre></td></tr></tbody></table></figure></li>
<li><p>得到倒排表</p>
<figure class="highlight python"><figcaption><span>red_inverted.py</span></figcaption><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">cur_token = <span class="literal">None</span></span><br><span class="line">m_list = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> sys.stdin:</span><br><span class="line">    ss = line.strip().split(<span class="string">'\t'</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(ss) != <span class="number">3</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    token = ss[<span class="number">0</span>].strip()</span><br><span class="line">    name = ss[<span class="number">1</span>].strip()</span><br><span class="line">    weight = <span class="built_in">float</span>(ss[<span class="number">2</span>].strip())</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> cur_token <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        cur_token = token</span><br><span class="line">    <span class="keyword">if</span> cur_token != token:</span><br><span class="line">        final_list = <span class="built_in">sorted</span>(m_list, key=<span class="keyword">lambda</span> x: x[<span class="number">1</span>], reverse=<span class="literal">True</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">'\t'</span>.join([cur_token, <span class="string">','</span>.join([<span class="string">':'</span>.join([name_weight[<span class="number">0</span>], <span class="built_in">str</span>(name_weight[<span class="number">1</span>])]) <span class="keyword">for</span> name_weight <span class="keyword">in</span> final_list])]))</span><br><span class="line">        cur_token = token</span><br><span class="line">        m_list = []</span><br><span class="line"></span><br><span class="line">    m_list.append((name, weight))</span><br><span class="line"></span><br><span class="line">final_list = <span class="built_in">sorted</span>(m_list, key=<span class="keyword">lambda</span> x: x[<span class="number">1</span>], reverse=<span class="literal">True</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'\t'</span>.join([cur_token.strip(), <span class="string">','</span>.join([<span class="string">':'</span>.join([name_weight[<span class="number">0</span>], <span class="built_in">str</span>(name_weight[<span class="number">1</span>])]) <span class="keyword">for</span> name_weight <span class="keyword">in</span> final_list])]))</span><br></pre></td></tr></tbody></table></figure></li>
<li><p>【Hadoop Streaming 脚本】</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env bash</span></span><br><span class="line"></span><br><span class="line">HADOOP_CMD=<span class="string">"/usr/local/src/hadoop-2.8.5/bin/hadoop"</span></span><br><span class="line">STREAM_JAR_PATH=<span class="string">"/usr/local/src/hadoop-2.8.5/share/hadoop/tools/lib/hadoop-streaming-2.8.5.jar"</span></span><br><span class="line"></span><br><span class="line">INPUT_FILE_PATH=<span class="string">"/chapter03/01_inverted/music_meta.txt.small"</span></span><br><span class="line">OUTPUT_PATH_FENCI=<span class="string">"/chapter03/01_inverted/output/python3/fenci"</span></span><br><span class="line">OUTPUT_PATH=<span class="string">"/chapter03/01_inverted/output/python3/result"</span></span><br><span class="line">LOCAL_FILE_PATH=<span class="string">"/mnt/hgfs/Code/chapter03/01_inverted/music_meta.txt.small"</span></span><br><span class="line">UPLOAD_PATH=<span class="string">"/chapter03/01_inverted"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> fs -rm -r -skipTrash <span class="variable">${INPUT_FILE_PATH}</span></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> fs -rm -r -skipTrash <span class="variable">${OUTPUT_PATH}</span> <span class="variable">${OUTPUT_PATH_FENCI}</span></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> fs -mkdir -p <span class="variable">${UPLOAD_PATH}</span></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> fs -put <span class="variable">${LOCAL_FILE_PATH}</span> <span class="variable">${UPLOAD_PATH}</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Step 1.</span></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> jar <span class="variable">${STREAM_JAR_PATH}</span> \</span><br><span class="line">    -D mapreduce.job.reduces=0 \</span><br><span class="line">    -D mapreduce.map.memory.mb=4096 \</span><br><span class="line">    -D mapreduce.job.name=jieba_fenci_demo \</span><br><span class="line">    -files map.py,jieba.tar.gz \</span><br><span class="line">    -input <span class="variable">${INPUT_FILE_PATH}</span> \</span><br><span class="line">    -output <span class="variable">${OUTPUT_PATH_FENCI}</span> \</span><br><span class="line">    -mapper <span class="string">"python map.py"</span> \</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Step 2.</span></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> jar <span class="variable">${STREAM_JAR_PATH}</span> \</span><br><span class="line">    -D mapreduce.job.reduces=2 \</span><br><span class="line">    -D mapreduce.job.name=demo_inverted \</span><br><span class="line">    -files map_inverted.py,red_inverted.py \</span><br><span class="line">    -input <span class="variable">${OUTPUT_PATH_FENCI}</span> \</span><br><span class="line">    -output <span class="variable">${OUTPUT_PATH}</span> \</span><br><span class="line">    -mapper <span class="string">"python map_inverted.py"</span> \</span><br><span class="line">    -reducer <span class="string">"python red_inverted.py"</span> \</span><br></pre></td></tr></tbody></table></figure></li>
</ol>
<h3 id="基于协同的推荐">基于协同的推荐</h3>
<p>从 User 行为日志中挖掘，User 与 Item 关联构成 UI 矩阵 or IU 矩阵</p>
<p>可使用 UI * IU 得到 UU 矩阵，使用 IU * UI 得到 II 矩阵</p>
<ul>
<li>优点
<ul>
<li>充分利用群体智慧</li>
<li>推荐精度高于 CB</li>
<li> 利于挖掘隐含的相关性</li>
</ul></li>
<li>缺点
<ul>
<li>推荐结果解释性较差</li>
<li>对时效性强的 Item 不适用</li>
<li>冷启动问题</li>
</ul></li>
</ul>
<h4 id="user-based-cf">User-Based CF</h4>
<blockquote>
<p>假设：</p>
<p>用户喜欢那些跟他有相似爱好的用户喜欢的东西</p>
<p>具有相似兴趣的用户在未来也具有相似兴趣</p>
</blockquote>
<h4 id="item-based-cf">Item-Based CF</h4>
<blockquote>
<p>假设：</p>
<p>用户喜欢跟他过去喜欢的物品相似的物品</p>
<p>历史上相似的物品未来也相似</p>
</blockquote>
<table>
<colgroup>
<col style="width: 16%">
<col style="width: 41%">
<col style="width: 41%">
</colgroup>
<thead>
<tr class="header">
<th></th>
<th>User-Based</th>
<th>Item-Based</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td> 性能</td>
<td>适用于用户较少场合，如果用户多，计算 UU 矩阵代价太大</td>
<td>适用于物品数明显小于用户数的场合，物品多。计算 II 矩阵代价太大</td>
</tr>
<tr class="even">
<td>领域</td>
<td>时效性强，用户个性化兴趣不太明显的领域</td>
<td>长尾物品丰富，用户个性化需求强烈的领域</td>
</tr>
<tr class="odd">
<td>实时性</td>
<td>用户有新行为，不一定造成推荐结果立即变化</td>
<td>用户有新行为，一定导致推荐结果实时变化</td>
</tr>
<tr class="even">
<td>冷启动</td>
<td>在新用户对很少物品产生行为后，不能立即进行个性化推荐，UU 矩阵需要更新。新物品上线后，一旦有用户对物品产生行为，就可以将新物品推荐给兴趣相似的其他用户</td>
<td>新用户只要对一个物品产生行为，就可以给他推荐和该物品相关的其他物品。在没有更新 II 矩阵的情况下无法将新物品推荐给用户</td>
</tr>
<tr class="odd">
<td>推荐理由</td>
<td>很难提供令用户信服的推荐解释</td>
<td>利用用户历史行为给用户做推荐解释，可以令用户比较信服</td>
</tr>
</tbody>
</table>
<h4 id="协同推荐实现方案以item-based为例">协同推荐实现方案（以 Item-Based 为例）</h4>
<h5 id="倒排式">倒排式</h5>
<ol start="0" type="1">
<li><p>相似度计算公式</p>
<p><span class="math display"><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -4.118ex" xmlns="http://www.w3.org/2000/svg" width="32.371ex" height="7.722ex" role="img" focusable="false" viewBox="0 -1592.9 14308 3412.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="63" d="M370 305T349 305T313 320T297 358Q297 381 312 396Q317 401 317 402T307 404Q281 408 258 408Q209 408 178 376Q131 329 131 219Q131 137 162 90Q203 29 272 29Q313 29 338 55T374 117Q376 125 379 127T395 129H409Q415 123 415 120Q415 116 411 104T395 71T366 33T318 2T249 -11Q163 -11 99 53T34 214Q34 318 99 383T250 448T370 421T404 357Q404 334 387 320Z"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(444,0)"></path><path data-c="73" d="M295 316Q295 356 268 385T190 414Q154 414 128 401Q98 382 98 349Q97 344 98 336T114 312T157 287Q175 282 201 278T245 269T277 256Q294 248 310 236T342 195T359 133Q359 71 321 31T198 -10H190Q138 -10 94 26L86 19L77 10Q71 4 65 -1L54 -11H46H42Q39 -11 33 -5V74V132Q33 153 35 157T45 162H54Q66 162 70 158T75 146T82 119T101 77Q136 26 198 26Q295 26 295 104Q295 133 277 151Q257 175 194 187T111 210Q75 227 54 256T33 318Q33 357 50 384T93 424T143 442T187 447H198Q238 447 268 432L283 424L292 431Q302 440 314 448H322H326Q329 448 335 442V310L329 304H301Q295 310 295 316Z" transform="translate(944,0)"></path></g><g data-mml-node="mo" transform="translate(1338,0)"><path data-c="2061" d=""></path></g><g data-mml-node="mo" transform="translate(1338,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1727,0)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="mo" transform="translate(2196,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2862.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mfrac" transform="translate(3918.6,0)"><g data-mml-node="mrow" transform="translate(2528.9,803.3)"><g data-mml-node="munderover"><g data-mml-node="mo"><path data-c="2211" d="M61 748Q64 750 489 750H913L954 640Q965 609 976 579T993 533T999 516H979L959 517Q936 579 886 621T777 682Q724 700 655 705T436 710H319Q183 710 183 709Q186 706 348 484T511 259Q517 250 513 244L490 216Q466 188 420 134T330 27L149 -187Q149 -188 362 -188Q388 -188 436 -188T506 -189Q679 -189 778 -162T936 -43Q946 -27 959 6H999L913 -249L489 -250Q65 -250 62 -248Q56 -246 56 -239Q56 -234 118 -161Q186 -81 245 -11L428 206Q428 207 242 462L57 717L56 728Q56 744 61 748Z"></path></g><g data-mml-node="TeXAtom" transform="translate(1089,477.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(1089,-285.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="msub" transform="translate(2577.8,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mi" transform="translate(500,0)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="msub" transform="translate(3954.7,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(500,0)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g></g><g data-mml-node="mrow" transform="translate(220,-1228.1)"><g data-mml-node="msqrt"><g transform="translate(1020,0)"><g data-mml-node="munderover"><g data-mml-node="mo"><path data-c="2211" d="M61 748Q64 750 489 750H913L954 640Q965 609 976 579T993 533T999 516H979L959 517Q936 579 886 621T777 682Q724 700 655 705T436 710H319Q183 710 183 709Q186 706 348 484T511 259Q517 250 513 244L490 216Q466 188 420 134T330 27L149 -187Q149 -188 362 -188Q388 -188 436 -188T506 -189Q679 -189 778 -162T936 -43Q946 -27 959 6H999L913 -249L489 -250Q65 -250 62 -248Q56 -246 56 -239Q56 -234 118 -161Q186 -81 245 -11L428 206Q428 207 242 462L57 717L56 728Q56 744 61 748Z"></path></g><g data-mml-node="TeXAtom" transform="translate(1089,477.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(1089,-285.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="msubsup" transform="translate(2577.8,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,353.6) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(605,-317.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mi" transform="translate(500,0)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g></g><g data-mml-node="mo" transform="translate(0,58.1)"><path data-c="221A" d="M1001 1150Q1017 1150 1020 1132Q1020 1127 741 244L460 -643Q453 -650 436 -650H424Q423 -647 423 -645T421 -640T419 -631T415 -617T408 -594T399 -560T385 -512T367 -448T343 -364T312 -259L203 119L138 41L111 67L212 188L264 248L472 -474L983 1140Q988 1150 1001 1150Z"></path></g><rect width="3954.7" height="60" x="1020" y="1148.1"></rect></g><g data-mml-node="msqrt" transform="translate(4974.7,0)"><g transform="translate(1020,0)"><g data-mml-node="munderover"><g data-mml-node="mo"><path data-c="2211" d="M61 748Q64 750 489 750H913L954 640Q965 609 976 579T993 533T999 516H979L959 517Q936 579 886 621T777 682Q724 700 655 705T436 710H319Q183 710 183 709Q186 706 348 484T511 259Q517 250 513 244L490 216Q466 188 420 134T330 27L149 -187Q149 -188 362 -188Q388 -188 436 -188T506 -189Q679 -189 778 -162T936 -43Q946 -27 959 6H999L913 -249L489 -250Q65 -250 62 -248Q56 -246 56 -239Q56 -234 118 -161Q186 -81 245 -11L428 206Q428 207 242 462L57 717L56 728Q56 744 61 748Z"></path></g><g data-mml-node="TeXAtom" transform="translate(1089,477.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(1089,-285.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="msubsup" transform="translate(2577.8,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,353.6) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(605,-317.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(500,0)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g></g><g data-mml-node="mo" transform="translate(0,58.1)"><path data-c="221A" d="M1001 1150Q1017 1150 1020 1132Q1020 1127 741 244L460 -643Q453 -650 436 -650H424Q423 -647 423 -645T421 -640T419 -631T415 -617T408 -594T399 -560T385 -512T367 -448T343 -364T312 -259L203 119L138 41L111 67L212 188L264 248L472 -474L983 1140Q988 1150 1001 1150Z"></path></g><rect width="3954.7" height="60" x="1020" y="1148.1"></rect></g></g><rect width="10149.4" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container></span></p></li>
<li><p>处理数据</p>
<p>格式 {user, item, score}</p></li>
<li><p> 构建 II 矩阵</p>
<ol type="1">
<li><p>归一化矩阵</p>
<ol type="1">
<li><p>转置 UI 矩阵 -&gt; IU 矩阵</p>
<figure class="highlight python"><figcaption><span>1_gen_ui_map.py</span></figcaption><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> sys.stdin:</span><br><span class="line">    ss = line.strip().split(<span class="string">'\t'</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(ss) != <span class="number">3</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    user, item, score = ss</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'%s\t%s\t%s'</span> % (item, user, score))</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure></li>
<li><p>归一化</p>
<figure class="highlight python"><figcaption><span>1_gen_ui_red.py</span></figcaption><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"></span><br><span class="line">cur_item = <span class="literal">None</span></span><br><span class="line">user_score_list = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> sys.stdin:</span><br><span class="line">    item, user, score = line.strip().split(<span class="string">'\t'</span>)</span><br><span class="line">    <span class="keyword">if</span> cur_item <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        cur_item = item</span><br><span class="line">    <span class="keyword">if</span> cur_item != item:</span><br><span class="line">        <span class="built_in">sum</span> = <span class="number">0.0</span></span><br><span class="line">        <span class="keyword">for</span> kv <span class="keyword">in</span> user_score_list:</span><br><span class="line">            (u, s) = kv</span><br><span class="line">            <span class="built_in">sum</span> += <span class="built_in">pow</span>(s, <span class="number">2</span>)</span><br><span class="line">        <span class="built_in">sum</span> = math.sqrt(<span class="built_in">sum</span>)</span><br><span class="line">        <span class="keyword">for</span> kv <span class="keyword">in</span> user_score_list:</span><br><span class="line">            (u, s) = kv</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">'%s\t%s\t%s'</span> % (u, cur_item, <span class="built_in">float</span>(s / <span class="built_in">sum</span>)))</span><br><span class="line">        user_score_list = []</span><br><span class="line">        cur_item = item</span><br><span class="line"></span><br><span class="line">    user_score_list.append((user, <span class="built_in">float</span>(score)))</span><br><span class="line"><span class="built_in">sum</span> = <span class="number">0.0</span></span><br><span class="line"><span class="keyword">for</span> kv <span class="keyword">in</span> user_score_list:</span><br><span class="line">    (u, s) = kv</span><br><span class="line">    <span class="built_in">sum</span> += <span class="built_in">pow</span>(s, <span class="number">2</span>)</span><br><span class="line"><span class="built_in">sum</span> = math.sqrt(<span class="built_in">sum</span>)</span><br><span class="line"><span class="keyword">for</span> kv <span class="keyword">in</span> user_score_list:</span><br><span class="line">    (u, s) = kv</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'%s\t%s\t%s'</span> % (u, cur_item, <span class="built_in">float</span>(s / <span class="built_in">sum</span>)))</span><br></pre></td></tr></tbody></table></figure></li>
</ol></li>
<li><p>生成 II-pair 对</p>
<ol type="1">
<li><p>标准输入输出</p>
<figure class="highlight python"><figcaption><span>2_gen_ii_pair_map.py</span></figcaption><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> sys.stdin:</span><br><span class="line">    u, i, s = line.strip().split(<span class="string">'\t'</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"%s\t%s\t%s"</span> % (u, i, s))</span><br></pre></td></tr></tbody></table></figure></li>
<li><p>生成 {item, item, score}</p>
<figure class="highlight python"><figcaption><span>2_gen_ii_pair_red.py</span></figcaption><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">cur_user = <span class="literal">None</span></span><br><span class="line">item_score_list = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> sys.stdin:</span><br><span class="line">    user, item, score = line.strip().split(<span class="string">'\t'</span>)</span><br><span class="line">    <span class="keyword">if</span> cur_user <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        cur_user = user</span><br><span class="line">    <span class="keyword">if</span> cur_user != user:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="built_in">len</span>(item_score_list) - <span class="number">1</span>):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(i + <span class="number">1</span>, <span class="built_in">len</span>(item_score_list)):</span><br><span class="line">                item_a, score_a = item_score_list[i]</span><br><span class="line">                item_b, score_b = item_score_list[j]</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">'%s\t%s\t%s'</span> % (item_a, item_b, score_a * score_b))</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">'%s\t%s\t%s'</span> % (item_b, item_a, score_a * score_b))</span><br><span class="line">        item_score_list = []</span><br><span class="line">        cur_user = user</span><br><span class="line">    item_score_list.append((item, <span class="built_in">float</span>(score)))</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="built_in">len</span>(item_score_list) - <span class="number">1</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(i + <span class="number">1</span>, <span class="built_in">len</span>(item_score_list)):</span><br><span class="line">        item_a, score_a = item_score_list[i]</span><br><span class="line">        item_b, score_b = item_score_list[j]</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">'%s\t%s\t%s'</span> % (item_a, item_b, score_a * score_b))</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">'%s\t%s\t%s'</span> % (item_b, item_a, score_a * score_b))</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure></li>
</ol></li>
<li><p>求和</p>
<ol type="1">
<li><p>以 ii 为 key 做 partition</p>
<figure class="highlight python"><figcaption><span>3_sum_map.py</span></figcaption><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> sys.stdin:</span><br><span class="line">    item_a, item_b, score = line.strip().split(<span class="string">'\t'</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"%s\t%s"</span> % (item_a + <span class="string">","</span> + item_b, score))</span><br></pre></td></tr></tbody></table></figure></li>
<li><p>求和</p>
<figure class="highlight python"><figcaption><span>3_sum_red.py</span></figcaption><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">cur_ii_pair = <span class="literal">None</span></span><br><span class="line"><span class="built_in">sum</span> = <span class="number">0.0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> sys.stdin:</span><br><span class="line">    ii_pair, score = line.strip().split(<span class="string">'\t'</span>)</span><br><span class="line">    <span class="keyword">if</span> cur_ii_pair <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        cur_ii_pair = ii_pair</span><br><span class="line">    <span class="keyword">if</span> cur_ii_pair != ii_pair:</span><br><span class="line">        ii = ii_pair.strip().split(<span class="string">','</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(ii) != <span class="number">2</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        item_a, item_b = ii</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">'%s\t%s\t%s'</span> % (item_a, item_b, <span class="built_in">sum</span>))</span><br><span class="line">        cur_ii_pair = ii_pair</span><br><span class="line">        <span class="built_in">sum</span> = <span class="number">0.0</span></span><br><span class="line">    <span class="built_in">sum</span> += <span class="built_in">float</span>(score)</span><br><span class="line">ii = cur_ii_pair.strip().split(<span class="string">','</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(ii) != <span class="number">2</span>:</span><br><span class="line">    sys.exit()</span><br><span class="line">item_a, item_b = ii</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'%s\t%s\t%s'</span> % (item_a, item_b, <span class="built_in">sum</span>))</span><br></pre></td></tr></tbody></table></figure></li>
</ol></li>
<li><p>【Hadoop Streaming 脚本】</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env bash</span></span><br><span class="line"></span><br><span class="line">HADOOP_CMD=<span class="string">"/usr/local/src/hadoop-2.8.5/bin/hadoop"</span></span><br><span class="line">STREAM_JAR_PATH=<span class="string">"/usr/local/src/hadoop-2.8.5/share/hadoop/tools/lib/hadoop-streaming-2.8.5.jar"</span></span><br><span class="line"></span><br><span class="line">INPUT_FILE_PATH=<span class="string">"/chapter03/02_cf/music_uis.data"</span></span><br><span class="line">OUTPUT_PATH_1=<span class="string">"/chapter03/02_cf/item_based/output/python3/step1"</span></span><br><span class="line">OUTPUT_PATH_2=<span class="string">"/chapter03/02_cf/item_based/output/python3/step2"</span></span><br><span class="line">OUTPUT_PATH_3=<span class="string">"/chapter03/02_cf/item_based/output/python3/step3"</span></span><br><span class="line">LOCAL_FILE_PATH=<span class="string">"/mnt/hgfs/Code/chapter03/02_cf/music_uis.data"</span></span><br><span class="line">UPLOAD_PATH=<span class="string">"/chapter03/02_cf"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> fs -rm -r -skipTrash <span class="variable">${INPUT_FILE_PATH}</span></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> fs -rm -r -skipTrash <span class="variable">${OUTPUT_PATH_1}</span> <span class="variable">${OUTPUT_PATH_2}</span> <span class="variable">${OUTPUT_PATH_3}</span></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> fs -mkdir -p <span class="variable">${UPLOAD_PATH}</span></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> fs -put <span class="variable">${LOCAL_FILE_PATH}</span> <span class="variable">${UPLOAD_PATH}</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Step 1.</span></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> jar <span class="variable">${STREAM_JAR_PATH}</span> \</span><br><span class="line">    -D mapreduce.job.name=step1 \</span><br><span class="line">    -files 1_gen_ui_map.py,1_gen_ui_red.py \</span><br><span class="line">    -input <span class="variable">${INPUT_FILE_PATH}</span> \</span><br><span class="line">    -output <span class="variable">${OUTPUT_PATH_1}</span> \</span><br><span class="line">    -mapper <span class="string">"python 1_gen_ui_map.py"</span> \</span><br><span class="line">    -reducer <span class="string">"python 1_gen_ui_red.py"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Step 2.</span></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> jar <span class="variable">${STREAM_JAR_PATH}</span> \</span><br><span class="line">    -D mapreduce.job.name=step2 \</span><br><span class="line">    -files 2_gen_ii_pair_map.py,2_gen_ii_pair_red.py \</span><br><span class="line">    -input <span class="variable">${OUTPUT_PATH_1}</span> \</span><br><span class="line">    -output <span class="variable">${OUTPUT_PATH_2}</span> \</span><br><span class="line">    -mapper <span class="string">"python 2_gen_ii_pair_map.py"</span> \</span><br><span class="line">    -reducer <span class="string">"python 2_gen_ii_pair_red.py"</span> \</span><br><span class="line"></span><br><span class="line"><span class="comment"># Step 3.</span></span><br><span class="line"><span class="variable">${HADOOP_CMD}</span> jar <span class="variable">${STREAM_JAR_PATH}</span> \</span><br><span class="line">    -D mapreduce.job.name=step3 \</span><br><span class="line">    -files 3_sum_map.py,3_sum_red.py \</span><br><span class="line">    -input <span class="variable">${OUTPUT_PATH_2}</span> \</span><br><span class="line">    -output <span class="variable">${OUTPUT_PATH_3}</span> \</span><br><span class="line">    -mapper <span class="string">"python 3_sum_map.py"</span> \</span><br><span class="line">    -reducer <span class="string">"python 3_sum_red.py"</span> \</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure></li>
</ol></li>
</ol>
<h3 id="冷启动问题">冷启动问题</h3>
<h4 id="用户冷启动">用户冷启动</h4>
<ol type="1">
<li>提供热门排行榜，等用户数据收集到一定程度再切换到个性化推荐</li>
<li>利用用户注册时提供的年龄、性别等数据做粗粒度的个性化</li>
<li>利用用户社交网络账号，导入用户在社交网站上的好友信息，然后给用户推荐其好友喜欢的物品</li>
<li>在用户新登录时要求其对一些物品进行反馈，收集这些兴趣信息，然后给用户推荐相似的物品</li>
</ol>
<h4 id="物品冷启动">物品冷启动</h4>
<ol type="1">
<li>把新物品推荐给可能对他感兴趣的用户，利用内容信息，将物品推荐给喜欢过和与其相似的物品的用户</li>
<li>物品必须能够在第一时间展现给用户，否则一段时间过后，物品的价值就大大降低了</li>
<li> User-based 和 Item-based 都行不通时，只能利用 Content-Based 解决该问题，频繁更新相关性数据</li>
</ol>
<h4 id="系统冷启动">系统冷启动</h4>
<ul>
<li>引入专家知识，通过一定的高效方式迅速建立起物品的相关性矩阵</li>
</ul>
<p><br></p>
<p><meting-js id="1346104347" server="netease" type="song" preload="none"></meting-js></p>
<hr>
]]></content>
      <categories>
        <category>技术</category>
        <category>大数据</category>
        <category>复习笔记</category>
      </categories>
      <tags>
        <tag>BigData</tag>
        <tag>推荐</tag>
        <tag>Content-Based</tag>
        <tag>协同</tag>
      </tags>
  </entry>
  <entry>
    <title>Flink 电商团购项目（一）</title>
    <url>/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/Flink%E7%94%B5%E5%95%86%E5%9B%A2%E8%B4%AD/01-%E5%A4%A7%E6%95%B0%E6%8D%AE%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA/1f073d62e93a/</url>
    <content><![CDATA[<p class="description">
Flink 项目环境搭建
</p>
<figure>
<img data-src="https://image.alessa0.cn/090812.jpg" alt="daniel-chen-546446-unsplash"><figcaption aria-hidden="true">daniel-chen-546446-unsplash</figcaption>
</figure>
<span id="more"></span>
<blockquote class="blockquote-center">
<p>第一章 大数据集群搭建</p>

</blockquote>
<div class="text-center">
<a class="btn" href="https://flink.apache.org/"><i class="fa fa-home fa-lg fa-fw"></i>Flink</a>
</div>
<h1 id="集群环境">集群环境</h1>
<h2 id="系统">系统</h2>
<p>CentOS-7-x86_64-Minimal-1810.iso</p>
<ul>
<li><strong>flink-master1</strong> 192.168.69.121 <strong>2core</strong> <strong>2G</strong></li>
<li><strong>flink-master2</strong> 192.168.69.122 <strong>2core</strong> <strong>2G</strong></li>
<li><strong>flink-slave1</strong> 192.168.69.123 <strong>1core</strong> <strong>2G</strong></li>
<li><strong>flink-slave2</strong> 192.168.69.124 <strong>1core</strong> <strong>2G</strong></li>
<li><strong>flink-slave3</strong> 192.168.69.125 <strong>1core</strong> <strong>2G</strong></li>
</ul>
<h2 id="hadoop集群组件列表">Hadoop 集群组件列表</h2>
<table>
<thead>
<tr class="header">
<th>组件</th>
<th style="text-align: center;"> Master1</th>
<th style="text-align: center;">Master2</th>
<th style="text-align: center;">Slave1</th>
<th style="text-align: center;">Slave2</th>
<th style="text-align: center;">Slave3</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>jdk1.8.0_212</td>
<td style="text-align: center;"><strong>√</strong></td>
<td style="text-align: center;"><strong>√</strong></td>
<td style="text-align: center;"><strong>√</strong></td>
<td style="text-align: center;"><strong>√</strong></td>
<td style="text-align: center;"><strong>√</strong></td>
</tr>
<tr class="even">
<td>scala-2.11.12</td>
<td style="text-align: center;"><strong>√</strong></td>
<td style="text-align: center;"><strong>√</strong></td>
<td style="text-align: center;"><strong>√</strong></td>
<td style="text-align: center;"><strong>√</strong></td>
<td style="text-align: center;"><strong>√</strong></td>
</tr>
<tr class="odd">
<td>miniconda3</td>
<td style="text-align: center;"><strong>√</strong></td>
<td style="text-align: center;"><strong>√</strong></td>
<td style="text-align: center;"><strong>√</strong></td>
<td style="text-align: center;"><strong>√</strong></td>
<td style="text-align: center;"><strong>√</strong></td>
</tr>
<tr class="even">
<td>hadoop2.7.0</td>
<td style="text-align: center;"><strong>√</strong></td>
<td style="text-align: center;"><strong>√</strong></td>
<td style="text-align: center;"><strong>√</strong></td>
<td style="text-align: center;"><strong>√</strong></td>
<td style="text-align: center;"><strong>√</strong></td>
</tr>
<tr class="odd">
<td>kafka0.11</td>
<td style="text-align: center;"><strong>√</strong></td>
<td style="text-align: center;"><strong>√</strong></td>
<td style="text-align: center;"><strong>√</strong></td>
<td style="text-align: center;"><strong>√</strong></td>
<td style="text-align: center;"><strong>√</strong></td>
</tr>
<tr class="even">
<td>mariadb/mariadb-server</td>
<td style="text-align: center;"><strong>√</strong></td>
<td style="text-align: center;"><strong>√</strong></td>
<td style="text-align: center;"></td>
<td style="text-align: center;"></td>
<td style="text-align: center;"></td>
</tr>
<tr class="odd">
<td>Hive2.2.0</td>
<td style="text-align: center;"><strong>√</strong></td>
<td style="text-align: center;"><strong>√</strong></td>
<td style="text-align: center;"></td>
<td style="text-align: center;"></td>
<td style="text-align: center;"></td>
</tr>
<tr class="even">
<td>zookeeper 3.4.9</td>
<td style="text-align: center;"></td>
<td style="text-align: center;"></td>
<td style="text-align: center;"><strong>√</strong></td>
<td style="text-align: center;"><strong>√</strong></td>
<td style="text-align: center;"><strong>√</strong></td>
</tr>
<tr class="odd">
<td>Flume1.9</td>
<td style="text-align: center;"><strong>√</strong></td>
<td style="text-align: center;"><strong>√</strong></td>
<td style="text-align: center;"><strong>√</strong></td>
<td style="text-align: center;"><strong>√</strong></td>
<td style="text-align: center;"><strong>√</strong></td>
</tr>
<tr class="even">
<td>Flink1.7</td>
<td style="text-align: center;"><strong>√</strong></td>
<td style="text-align: center;"><strong>√</strong></td>
<td style="text-align: center;"><strong>√</strong></td>
<td style="text-align: center;"><strong>√</strong></td>
<td style="text-align: center;"><strong>√</strong></td>
</tr>
</tbody>
</table>
<blockquote>
<p>组件安装步骤参考往期系列文章</p>
<p><a href="https://alessa0.cn/posts/aaa0d5f4/">Flink 电商团购项目（零）</a> <a href="https://alessa0.cn/categories/技术/大数据/环境搭建/">Hadoop 环境搭建</a></p>
</blockquote>
<p><br></p>
<p><meting-js id="1338746736" server="netease" type="song" preload="none"></meting-js></p>
<hr>
]]></content>
      <categories>
        <category>技术</category>
        <category>大数据</category>
        <category>项目实战</category>
        <category>Flink电商团购</category>
        <category>01-大数据集群搭建</category>
      </categories>
      <tags>
        <tag>BigData</tag>
        <tag>Flink</tag>
        <tag>项目</tag>
        <tag>电商</tag>
      </tags>
  </entry>
  <entry>
    <title>Flink 电商团购项目（零）：环境搭建</title>
    <url>/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/Flink%E7%94%B5%E5%95%86%E5%9B%A2%E8%B4%AD/01-%E5%A4%A7%E6%95%B0%E6%8D%AE%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA/59559452b8a4/</url>
    <content><![CDATA[<p class="description">
Flink 项目环境搭建
</p>
<figure>
<img data-src="https://image.alessa0.cn/045237.jpg" alt="janko-ferlic-214224-unsplash"><figcaption aria-hidden="true">janko-ferlic-214224-unsplash</figcaption>
</figure>
<span id="more"></span>
<blockquote class="blockquote-center">
<p>第一章 大数据集群搭建</p>

</blockquote>
<div class="text-center">
<a class="btn" href="https://flink.apache.org/"><i class="fa fa-home fa-lg fa-fw"></i>Flink</a>
</div>
<h1 id="集群组件安装">集群组件安装</h1>
<h2 id="安装jdk">安装 JDK</h2>
<ul>
<li>cd /mnt/hgfs/aboutyun</li>
<li>cp jdk-8u212-linux-x64.tar.gz /usr/aboutyun</li>
<li>cd /usr/aboutyun</li>
<li>tar zxvf jdk-8u212-linux-x64.tar.gz</li>
<li>rm -rf jdk-8u212-linux-x64.tar.gz</li>
<li>mv jdk1.8.0_212 jdk</li>
</ul>
<p><strong>#配置 JDK 环境变量</strong></p>
<ul>
<li>vim /etc/profile</li>
</ul>
<figure class="highlight routeros"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># SET JAVA PATH </span></span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">JAVA_HOME</span>=/usr/aboutyun/jdk </span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">CLASSPATH</span>=.:$CLASSPATH:$JAVA_HOME/lib </span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">PATH</span>=<span class="variable">$PATH</span>:$JAVA_HOME/bin </span><br></pre></td></tr></tbody></table></figure>
<ul>
<li>source /etc/profile</li>
</ul>
<h2 id="安装scala">安装 Scala</h2>
<ul>
<li>cd /mnt/hgfs/aboutyun</li>
<li>cp scala-2.11.12.tgz /usr/aboutyun</li>
<li>cd /usr/aboutyun</li>
<li>tar zxvf scala-2.11.12.tgz</li>
<li>rm -rf scala-2.11.12.tgz</li>
<li>mv scala-2.11.12 scala</li>
</ul>
<p><strong>#配置 Scala 环境变量</strong></p>
<ul>
<li>vim /etc/profile</li>
</ul>
<figure class="highlight routeros"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># SET SCALA PATH </span></span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">SCALA_HOME</span>=/usr/aboutyun/scala </span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">PATH</span>=<span class="variable">$PATH</span>:$SCALA_HOME/bin</span><br></pre></td></tr></tbody></table></figure>
<ul>
<li>source /etc/profile</li>
</ul>
<h2 id="安装miniconda3">安装 miniconda3</h2>
<ul>
<li>cd /mnt/hgfs/aboutyun</li>
<li>cp Miniconda3-latest-Linux-x86_64.sh /usr/local/src/</li>
<li>cd /usr/local/src</li>
<li>sudo yum -y install bzip2</li>
<li>sh Miniconda3-latest-Linux-x86_64.sh</li>
<li>rm -rf Miniconda3-latest-Linux-x86_64.sh</li>
</ul>
<p><strong>#配置环境变量：</strong></p>
<ul>
<li>source ~/.bashrc</li>
</ul>
<p><strong>#更新 conda 环境：</strong></p>
<ul>
<li>conda update --all</li>
</ul>
<h2 id="安装zookeeper">安装 Zookeeper</h2>
<mark class="label danger">仅在 Slave 节点</mark>
<ul>
<li> cd /mnt/hgfs/aboutyun</li>
<li>cp zookeeper-3.4.9.tar.gz /usr/aboutyun/</li>
<li>cd /usr/aboutyun/</li>
<li>tar zxvf zookeeper-3.4.9.tar.gz</li>
<li>rm -rf zookeeper-3.4.9.tar.gz</li>
<li>mv zookeeper-3.4.9 zookeeper</li>
<li>cd zookeeper</li>
</ul>
<p><strong>#配置 Zookeeper 环境变量</strong></p>
<ul>
<li>vim /etc/profile</li>
</ul>
<figure class="highlight routeros"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># SET ZOOKEEPER PATH </span></span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">ZOOKEEPER_HOME</span>=/usr/aboutyun/zookeeper </span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">PATH</span>=<span class="variable">$PATH</span>:$ZOOKEEPER_HOME/bin</span><br></pre></td></tr></tbody></table></figure>
<ul>
<li>source /etc/profile</li>
</ul>
<p><strong>#修改 Zookeeper 配置</strong></p>
<ul>
<li>mkdir data</li>
<li>mkdir logs</li>
<li>cd conf</li>
<li>cp zoo_sample.cfg zoo.cfg</li>
<li>vim zoo.cfg</li>
</ul>
<figure class="highlight apache"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attribute">dataDir</span>=/usr/aboutyun/zookeeper/data </span><br><span class="line"><span class="attribute">dataLogDir</span>=/usr/aboutyun/zookeeper/logs </span><br><span class="line"><span class="attribute">server</span>.<span class="number">1</span>=flink-slave<span class="number">1</span>:<span class="number">2888</span>:<span class="number">3888</span> </span><br><span class="line"><span class="attribute">server</span>.<span class="number">2</span>=flink-slave<span class="number">2</span>:<span class="number">2888</span>:<span class="number">3888</span> </span><br><span class="line"><span class="attribute">server</span>.<span class="number">3</span>=flink-slave<span class="number">3</span>:<span class="number">2888</span>:<span class="number">3888</span></span><br></pre></td></tr></tbody></table></figure>
<p><strong>#分别添加 ID</strong></p>
<figure class="highlight awk"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">#Slave1 </span></span><br><span class="line">echo <span class="string">"1"</span> &gt; <span class="regexp">/usr/</span>aboutyun<span class="regexp">/zookeeper/</span>data/myid </span><br><span class="line"><span class="comment">#Slave2 </span></span><br><span class="line">echo <span class="string">"2"</span> &gt; <span class="regexp">/usr/</span>aboutyun<span class="regexp">/zookeeper/</span>data/myid </span><br><span class="line"><span class="comment">#Slave3 </span></span><br><span class="line">echo <span class="string">"3"</span> &gt; <span class="regexp">/usr/</span>aboutyun<span class="regexp">/zookeeper/</span>data/myid</span><br></pre></td></tr></tbody></table></figure>
<p><strong>#启动 Zookeeper 服务</strong></p>
<ul>
<li>zkServer.sh start</li>
</ul>
<p><strong>#查看运行状态</strong></p>
<ul>
<li><p>zkServer.sh status</p></li>
<li><p>jps</p></li>
</ul>
<p><strong>#关闭 Zookeeper 服务</strong></p>
<ul>
<li>zkServer.sh stop</li>
</ul>
<h2 id="安装hadoop">安装 Hadoop</h2>
<ul>
<li>cd /mnt/hgfs/aboutyun</li>
<li>cp hadoop-2.7.0.tar.gz /usr/aboutyun/</li>
<li>cd /usr/aboutyun/</li>
<li>tar zxvf hadoop-2.7.0.tar.gz</li>
<li>rm -rf hadoop-2.7.0.tar.gz</li>
<li>mv hadoop-2.7.0 hadoop</li>
<li>cd hadoop</li>
</ul>
<p><strong>#配置 Hadoop 环境变量</strong></p>
<ul>
<li>vim /etc/profile</li>
</ul>
<figure class="highlight routeros"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># SET HADOOP PATH </span></span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">HADOOP_HOME</span>=/usr/aboutyun/hadoop</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">PATH</span>=<span class="variable">$PATH</span>:$HADOOP_HOME/bin </span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">PATH</span>=<span class="variable">$PATH</span>:$HADOOP_HOME/sbin</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">HADOOP_CONF_DIR</span>=<span class="variable">$HADOOP_HOME</span>/etc/hadoop</span><br></pre></td></tr></tbody></table></figure>
<ul>
<li>source /etc/profile</li>
</ul>
<p><strong>#创建临时目录和文件目录</strong></p>
<ul>
<li>mkdir -p /usr/aboutyun/hadoop/dfs/name</li>
<li>mkdir -p /usr/aboutyun/hadoop/dfs/data</li>
<li>mkdir -p /usr/aboutyun/hadoop/tmp/dfs</li>
<li>mkdir -p /usr/aboutyun/hadoop/journal</li>
<li>mkdir -p /usr/aboutyun/hadoop/yarn/logs</li>
</ul>
<p><strong>#修改 Hadoop 配置文件</strong></p>
<ul>
<li>cd etc/hadoop</li>
<li>vim hadoop-env.sh</li>
</ul>
<figure class="highlight routeros"><table><tbody><tr><td class="code"><pre><span class="line"><span class="builtin-name">export</span> <span class="attribute">JAVA_HOME</span>=/usr/aboutyun/jdk</span><br></pre></td></tr></tbody></table></figure>
<ul>
<li>vim yarn-env.sh</li>
</ul>
<figure class="highlight routeros"><table><tbody><tr><td class="code"><pre><span class="line"><span class="builtin-name">export</span> <span class="attribute">JAVA_HOME</span>=/usr/aboutyun/jdk</span><br></pre></td></tr></tbody></table></figure>
<ul>
<li>vim slaves</li>
</ul>
<figure class="highlight apache"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attribute">flink</span>-slave<span class="number">1</span> </span><br><span class="line"><span class="attribute">flink</span>-slave<span class="number">2</span></span><br><span class="line"><span class="attribute">flink</span>-slave<span class="number">3</span></span><br></pre></td></tr></tbody></table></figure>
<ul>
<li>vim core-site.xml</li>
</ul>
<figure class="highlight dts"><table><tbody><tr><td class="code"><pre><span class="line"><span class="params">&lt;configuration&gt;</span></span><br><span class="line">    <span class="params">&lt;property&gt;</span></span><br><span class="line">        <span class="params">&lt;name&gt;</span>fs.defaultFS<span class="params">&lt;/name&gt;</span></span><br><span class="line">        <span class="params">&lt;value&gt;</span>hdfs:<span class="comment">//mycluster&lt;/value&gt;</span></span><br><span class="line">        <span class="params">&lt;description&gt;</span>默认文件系统的名称。一个URI，其方案和权限决定了FileSystem的实现。<span class="params">&lt;/description&gt;</span></span><br><span class="line">    <span class="params">&lt;/property&gt;</span></span><br><span class="line">    <span class="params">&lt;property&gt;</span></span><br><span class="line">        <span class="params">&lt;name&gt;</span>ha.zookeeper.quorum<span class="params">&lt;/name&gt;</span></span><br><span class="line">        <span class="params">&lt;value&gt;</span>flink-slave1:<span class="number">2181</span>,flink-slave2:<span class="number">2181</span>,flink-slave3:<span class="number">2181</span><span class="params">&lt;/value&gt;</span></span><br><span class="line">        <span class="params">&lt;description&gt;</span>由逗号分隔的ZooKeeper服务器地址列表，由ZKFailoverController在自动故障转移中使用。<span class="params">&lt;/description&gt;</span></span><br><span class="line">    <span class="params">&lt;/property&gt;</span></span><br><span class="line">    <span class="params">&lt;property&gt;</span></span><br><span class="line">        <span class="params">&lt;name&gt;</span>hadoop.tmp.dir<span class="params">&lt;/name&gt;</span></span><br><span class="line">        <span class="params">&lt;value&gt;</span><span class="meta-keyword">/usr/</span>aboutyun<span class="meta-keyword">/hadoop/</span>tmp<span class="params">&lt;/value&gt;</span></span><br><span class="line">        <span class="params">&lt;description&gt;</span>数据目录目录<span class="params">&lt;/description&gt;</span></span><br><span class="line">    <span class="params">&lt;/property&gt;</span></span><br><span class="line">    <span class="params">&lt;property&gt;</span></span><br><span class="line">        <span class="params">&lt;name&gt;</span>dfs.ha.fencing.methods<span class="params">&lt;/name&gt;</span></span><br><span class="line">        <span class="params">&lt;value&gt;</span>sshfence</span><br><span class="line">shell(<span class="meta-keyword">/bin/</span>true)<span class="params">&lt;/value&gt;</span></span><br><span class="line">        <span class="params">&lt;description&gt;</span>用于服务防护的防护方法列表。可能包含内置方法（例如shell和sshfence）或用户定义的方法。<span class="params">&lt;/description&gt;</span></span><br><span class="line">    <span class="params">&lt;/property&gt;</span></span><br><span class="line">    <span class="params">&lt;property&gt;</span></span><br><span class="line">        <span class="params">&lt;name&gt;</span>dfs.ha.fencing.ssh.private-key-files<span class="params">&lt;/name&gt;</span></span><br><span class="line">        <span class="params">&lt;value&gt;</span><span class="meta-keyword">/home/</span>aboutyun/.ssh/id_rsa<span class="params">&lt;/value&gt;</span></span><br><span class="line">        <span class="params">&lt;description&gt;</span>用于内置sshfence fencer的SSH私钥文件。<span class="params">&lt;/description&gt;</span></span><br><span class="line">    <span class="params">&lt;/property&gt;</span></span><br><span class="line">    <span class="params">&lt;property&gt;</span></span><br><span class="line">        <span class="params">&lt;name&gt;</span>io.file.buffer.size<span class="params">&lt;/name&gt;</span></span><br><span class="line">        <span class="params">&lt;value&gt;</span><span class="number">131072</span><span class="params">&lt;/value&gt;</span></span><br><span class="line">        <span class="params">&lt;description&gt;</span>SequenceFiles中使用的读/写缓冲区的大小。<span class="params">&lt;/description&gt;</span></span><br><span class="line">    <span class="params">&lt;/property&gt;</span></span><br><span class="line">    <span class="params">&lt;property&gt;</span></span><br><span class="line">        <span class="params">&lt;name&gt;</span>ipc.client.connect.max.retries<span class="params">&lt;/name&gt;</span></span><br><span class="line">        <span class="params">&lt;value&gt;</span><span class="number">100</span><span class="params">&lt;/value&gt;</span></span><br><span class="line">        <span class="params">&lt;description&gt;</span>客户端为建立服务器连接而重试的次数。<span class="params">&lt;/description&gt;</span></span><br><span class="line">    <span class="params">&lt;/property&gt;</span></span><br><span class="line">    <span class="params">&lt;property&gt;</span></span><br><span class="line">        <span class="params">&lt;name&gt;</span>ipc.client.connect.retry.interval<span class="params">&lt;/name&gt;</span></span><br><span class="line">        <span class="params">&lt;value&gt;</span><span class="number">10000</span><span class="params">&lt;/value&gt;</span></span><br><span class="line">        <span class="params">&lt;description&gt;</span>客户端在重试建立服务器连接之前将等待的毫秒数。<span class="params">&lt;/description&gt;</span></span><br><span class="line">    <span class="params">&lt;/property&gt;</span></span><br><span class="line"><span class="params">&lt;/configuration&gt;</span> </span><br></pre></td></tr></tbody></table></figure>
<ul>
<li>vim hdfs-site.xml</li>
</ul>
<figure class="highlight dts"><table><tbody><tr><td class="code"><pre><span class="line"><span class="params">&lt;configuration&gt;</span></span><br><span class="line">    <span class="params">&lt;property&gt;</span></span><br><span class="line">        <span class="params">&lt;name&gt;</span>dfs.nameservices<span class="params">&lt;/name&gt;</span></span><br><span class="line">        <span class="params">&lt;value&gt;</span>mycluster<span class="params">&lt;/value&gt;</span></span><br><span class="line">    <span class="params">&lt;/property&gt;</span></span><br><span class="line">    <span class="params">&lt;property&gt;</span></span><br><span class="line">        <span class="params">&lt;name&gt;</span>dfs.ha.namenodes.mycluster<span class="params">&lt;/name&gt;</span></span><br><span class="line">        <span class="params">&lt;value&gt;</span>flink-master1,flink-master2<span class="params">&lt;/value&gt;</span></span><br><span class="line">        <span class="params">&lt;description&gt;</span>给定名称服务的前缀包含给定名称服务的逗号分隔的名称节点列表。<span class="params">&lt;/description&gt;</span></span><br><span class="line">    <span class="params">&lt;/property&gt;</span></span><br><span class="line">    <span class="params">&lt;property&gt;</span></span><br><span class="line">        <span class="params">&lt;name&gt;</span>dfs.namenode.rpc-address.mycluster.flink-master1<span class="params">&lt;/name&gt;</span></span><br><span class="line">        <span class="params">&lt;value&gt;</span>flink-master1:<span class="number">8020</span><span class="params">&lt;/value&gt;</span></span><br><span class="line">    <span class="params">&lt;/property&gt;</span></span><br><span class="line">    <span class="params">&lt;property&gt;</span></span><br><span class="line">        <span class="params">&lt;name&gt;</span>dfs.namenode.rpc-address.mycluster.flink-master2<span class="params">&lt;/name&gt;</span></span><br><span class="line">        <span class="params">&lt;value&gt;</span>flink-master2:<span class="number">8020</span><span class="params">&lt;/value&gt;</span></span><br><span class="line">    <span class="params">&lt;/property&gt;</span></span><br><span class="line">    <span class="params">&lt;property&gt;</span></span><br><span class="line">        <span class="params">&lt;name&gt;</span>dfs.namenode.http-address.mycluster.flink-master1<span class="params">&lt;/name&gt;</span></span><br><span class="line">        <span class="params">&lt;value&gt;</span>flink-master1:<span class="number">50070</span><span class="params">&lt;/value&gt;</span></span><br><span class="line">    <span class="params">&lt;/property&gt;</span></span><br><span class="line">    <span class="params">&lt;property&gt;</span></span><br><span class="line">        <span class="params">&lt;name&gt;</span>dfs.namenode.http-address.mycluster.flink-master2<span class="params">&lt;/name&gt;</span></span><br><span class="line">        <span class="params">&lt;value&gt;</span>flink-master2:<span class="number">50070</span><span class="params">&lt;/value&gt;</span></span><br><span class="line">    <span class="params">&lt;/property&gt;</span></span><br><span class="line">    <span class="params">&lt;property&gt;</span></span><br><span class="line">        <span class="params">&lt;name&gt;</span>dfs.namenode.shared.edits.dir<span class="params">&lt;/name&gt;</span></span><br><span class="line">        <span class="params">&lt;value&gt;</span>qjournal:<span class="comment">//flink-slave1:8485;flink-slave2:8485;flink-slave3:8485/mycluster&lt;/value&gt;</span></span><br><span class="line">        <span class="params">&lt;description&gt;</span>HA群集中多个名称节点之间的共享存储上的目录。此目录将由活动写入并由备用数据库读取，以保持命名空间同步。<span class="params">&lt;/description&gt;</span></span><br><span class="line">    <span class="params">&lt;/property&gt;</span></span><br><span class="line">    <span class="params">&lt;property&gt;</span></span><br><span class="line">        <span class="params">&lt;name&gt;</span>dfs.client.failover.proxy.provider.mycluster<span class="params">&lt;/name&gt;</span></span><br><span class="line">        <span class="params">&lt;value&gt;</span>org.apache.hadoop.hdfs.server.namenode.ha.ConfiguredFailoverProxyProvider<span class="params">&lt;/value&gt;</span></span><br><span class="line">        <span class="params">&lt;description&gt;</span>配置Java类的名称，DFS客户端将使用该名称来确定哪个NameNode是当前的Active，以及哪个NameNode当前正在为客户端请求提供服务。<span class="params">&lt;/description&gt;</span></span><br><span class="line">    <span class="params">&lt;/property&gt;</span></span><br><span class="line">    <span class="params">&lt;property&gt;</span></span><br><span class="line">        <span class="params">&lt;name&gt;</span>dfs.ha.automatic-failover.enabled<span class="params">&lt;/name&gt;</span></span><br><span class="line">        <span class="params">&lt;value&gt;</span>true<span class="params">&lt;/value&gt;</span></span><br><span class="line">        <span class="params">&lt;description&gt;</span>是否启用自动故障转移。<span class="params">&lt;/description&gt;</span></span><br><span class="line">    <span class="params">&lt;/property&gt;</span></span><br><span class="line">    <span class="params">&lt;property&gt;</span></span><br><span class="line">        <span class="params">&lt;name&gt;</span>dfs.replication<span class="params">&lt;/name&gt;</span></span><br><span class="line">        <span class="params">&lt;value&gt;</span><span class="number">3</span><span class="params">&lt;/value&gt;</span></span><br><span class="line">    <span class="params">&lt;/property&gt;</span></span><br><span class="line">    <span class="params">&lt;property&gt;</span></span><br><span class="line">        <span class="params">&lt;name&gt;</span>dfs.permissions.enabled<span class="params">&lt;/name&gt;</span></span><br><span class="line">        <span class="params">&lt;value&gt;</span>false<span class="params">&lt;/value&gt;</span></span><br><span class="line">        <span class="params">&lt;description&gt;</span>如果为“true”，则启用HDFS中的权限检查。如果为“false”，则关闭权限检查，但所有其他行为都保持不变。<span class="params">&lt;/description&gt;</span></span><br><span class="line">    <span class="params">&lt;/property&gt;</span></span><br><span class="line">    <span class="params">&lt;property&gt;</span></span><br><span class="line">        <span class="params">&lt;name&gt;</span>dfs.journalnode.edits.dir<span class="params">&lt;/name&gt;</span></span><br><span class="line">        <span class="params">&lt;value&gt;</span><span class="meta-keyword">/usr/</span>aboutyun<span class="meta-keyword">/hadoop/</span>journal<span class="params">&lt;/value&gt;</span></span><br><span class="line">        <span class="params">&lt;description&gt;</span>指定JournalNode在本地磁盘存放数据的位置<span class="params">&lt;/description&gt;</span></span><br><span class="line">    <span class="params">&lt;/property&gt;</span></span><br><span class="line">    <span class="params">&lt;property&gt;</span></span><br><span class="line">        <span class="params">&lt;name&gt;</span>dfs.namenode.name.dir<span class="params">&lt;/name&gt;</span></span><br><span class="line">        <span class="params">&lt;value&gt;</span>file:<span class="comment">///usr/aboutyun/hadoop/dfs/name&lt;/value&gt;</span></span><br><span class="line">        <span class="params">&lt;description&gt;</span>设置namenode存放路径<span class="params">&lt;/description&gt;</span></span><br><span class="line">    <span class="params">&lt;/property&gt;</span></span><br><span class="line">    <span class="params">&lt;property&gt;</span></span><br><span class="line">        <span class="params">&lt;name&gt;</span>dfs.datanode.data.dir<span class="params">&lt;/name&gt;</span></span><br><span class="line">        <span class="params">&lt;value&gt;</span>file:<span class="comment">///usr/aboutyun/hadoop/dfs/data&lt;/value&gt;</span></span><br><span class="line">        <span class="params">&lt;description&gt;</span>设置datanode存放径路<span class="params">&lt;/description&gt;</span></span><br><span class="line">    <span class="params">&lt;/property&gt;</span></span><br><span class="line">    <span class="params">&lt;property&gt;</span></span><br><span class="line">        <span class="params">&lt;name&gt;</span>dfs.blocksize<span class="params">&lt;/name&gt;</span></span><br><span class="line">        <span class="params">&lt;value&gt;</span><span class="number">268435456</span><span class="params">&lt;/value&gt;</span></span><br><span class="line">        <span class="params">&lt;description&gt;</span>大型文件系统的HDFS块大小为<span class="number">256</span>MB。<span class="params">&lt;/description&gt;</span></span><br><span class="line">    <span class="params">&lt;/property&gt;</span></span><br><span class="line">    <span class="params">&lt;property&gt;</span></span><br><span class="line">        <span class="params">&lt;name&gt;</span>dfs.namenode.handler.count<span class="params">&lt;/name&gt;</span></span><br><span class="line">        <span class="params">&lt;value&gt;</span><span class="number">100</span><span class="params">&lt;/value&gt;</span></span><br><span class="line">        <span class="params">&lt;description&gt;</span>namenode的服务器线程数<span class="params">&lt;/description&gt;</span></span><br><span class="line">    <span class="params">&lt;/property&gt;</span></span><br><span class="line"><span class="params">&lt;/configuration&gt;</span></span><br></pre></td></tr></tbody></table></figure>
<ul>
<li>mv mapred-site.xml.template mapred-site.xml</li>
<li>vim mapred-site.xml</li>
</ul>
<figure class="highlight awk"><table><tbody><tr><td class="code"><pre><span class="line">&lt;configuration&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;mapreduce.framework.name&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;yarn&lt;/value&gt;</span><br><span class="line">        &lt;description&gt;指定mr框架为yarn方式&lt;/description&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">    &lt;property&gt; </span><br><span class="line">        &lt;name&gt;mapreduce.map.memory.mb&lt;/name&gt; </span><br><span class="line">        &lt;value&gt;<span class="number">512</span>&lt;/value&gt; </span><br><span class="line">        &lt;description&gt;每个Map任务的物理内存限制&lt;/description&gt; </span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">    &lt;property&gt; </span><br><span class="line">        &lt;name&gt;mapreduce.reduce.memory.mb&lt;/name&gt; </span><br><span class="line">        &lt;value&gt;<span class="number">512</span>&lt;/value&gt; </span><br><span class="line">        &lt;description&gt;每个Reduce任务的物理内存限制&lt;/description&gt; </span><br><span class="line">    &lt;/property&gt; </span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;mapreduce.jobhistory.address&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;<span class="number">0.0</span>.<span class="number">0.0</span>:<span class="number">10020</span>&lt;/value&gt;</span><br><span class="line">        &lt;description&gt;MapReduce JobHistory服务器IPC主机：端口&lt;/description&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;mapreduce.jobhistory.webapp.address&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;<span class="number">0.0</span>.<span class="number">0.0</span>:<span class="number">19888</span>&lt;/value&gt;</span><br><span class="line">        &lt;description&gt;MapReduce JobHistory服务器Web浏览时的主机：端口&lt;/description&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;mapreduce.application.classpath&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;</span><br><span class="line">          <span class="regexp">/usr/</span>aboutyun<span class="regexp">/hadoop/</span>etc/hadoop,</span><br><span class="line">          <span class="regexp">/usr/</span>aboutyun<span class="regexp">/hadoop/</span>share<span class="regexp">/hadoop/</span>common/*,</span><br><span class="line">          <span class="regexp">/usr/</span>aboutyun<span class="regexp">/hadoop/</span>share<span class="regexp">/hadoop/</span>common<span class="regexp">/lib/</span>*,</span><br><span class="line">          <span class="regexp">/usr/</span>aboutyun<span class="regexp">/hadoop/</span>share<span class="regexp">/hadoop/</span>hdfs/*,</span><br><span class="line">          <span class="regexp">/usr/</span>aboutyun<span class="regexp">/hadoop/</span>share<span class="regexp">/hadoop/</span>hdfs<span class="regexp">/lib/</span>*,</span><br><span class="line">          <span class="regexp">/usr/</span>aboutyun<span class="regexp">/hadoop/</span>share<span class="regexp">/hadoop/m</span>apreduce/*,</span><br><span class="line">          <span class="regexp">/usr/</span>aboutyun<span class="regexp">/hadoop/</span>share<span class="regexp">/hadoop/m</span>apreduce<span class="regexp">/lib/</span>*,</span><br><span class="line">          <span class="regexp">/usr/</span>aboutyun<span class="regexp">/hadoop/</span>share<span class="regexp">/hadoop/y</span>arn/*,</span><br><span class="line">          <span class="regexp">/usr/</span>aboutyun<span class="regexp">/hadoop/</span>share<span class="regexp">/hadoop/y</span>arn<span class="regexp">/lib/</span>*        </span><br><span class="line">        &lt;/value&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></tbody></table></figure>
<ul>
<li>vim yarn-site.xml</li>
</ul>
<figure class="highlight xml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Site specific YARN configuration properties--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.recovery.enabled<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span>启动后启用RM以恢复状态。如果为true，则必须指定yarn.resourcemanager.store.class。<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span> </span><br><span class="line">    &nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.ha.automatic-failover.enabled<span class="tag">&lt;/<span class="name">name</span>&gt;</span>  </span><br><span class="line">    &nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;<span class="name">value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">value</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.store.class<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span>用作持久存储的类。<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.zk-address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>flink-slave1:2181,flink-slave2:2181,flink-slave3:2181<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span>ZooKeeper服务的地址，多个地址使用逗号隔开<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.ha.enabled<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span>启用RM高可用性。启用时，（1）默认情况下，RM以待机模式启动，并在提示时转换为活动模式。（2）RM集合中的节点列在yarn.resourcemanager.ha.rm-ids中（3）如果明确指定了yarn.resourcemanager.ha.id，则每个RM的id来自yarn.resourcemanager.ha.id或者可以通过匹配yarn.resourcemanager.address。<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.ha.rm-ids<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>rm1,rm2<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span>启用HA时群集中的RM节点列表。最少2个<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.webapp.address.rm1<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>flink-master1:8088<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.webapp.address.rm2<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>flink-master2:8088<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.cluster-id<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>mycluster-yarn-ha<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span>集群HA的id，用于在ZooKeeper上创建节点，区分使用同一个ZooKeeper集群的不同Hadoop集群<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.hostname.rm1<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>flink-master1<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span>主机名<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.hostname.rm2<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>flink-master2<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span>主机名<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.nodemanager.aux-services<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>mapreduce_shuffle<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span>reducer取数据的方式是mapreduce_shuffle<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.nodemanager.resource.memory-mb<span class="tag">&lt;/<span class="name">name</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>2048<span class="tag">&lt;/<span class="name">value</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">discription</span>&gt;</span>每个节点可用内存,单位MB<span class="tag">&lt;/<span class="name">discription</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.nodemanager.resource.cpu-vcores<span class="tag">&lt;/<span class="name">name</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>2<span class="tag">&lt;/<span class="name">value</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">discription</span>&gt;</span>每个节点可用cpu<span class="tag">&lt;/<span class="name">discription</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span>   </span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.scheduler.minimum-allocation-mb<span class="tag">&lt;/<span class="name">name</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>512<span class="tag">&lt;/<span class="name">value</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">discription</span>&gt;</span>单个任务可申请最少内存，默认1024MB<span class="tag">&lt;/<span class="name">discription</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.scheduler.maximum-allocation-mb<span class="tag">&lt;/<span class="name">name</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>1024<span class="tag">&lt;/<span class="name">value</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">discription</span>&gt;</span>单个任务可申请最大内存，默认8192MB<span class="tag">&lt;/<span class="name">discription</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.scheduler.minimum-allocation-vcores<span class="tag">&lt;/<span class="name">name</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>1<span class="tag">&lt;/<span class="name">value</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">discription</span>&gt;</span>最小的cores 1 个，默认的就是一个<span class="tag">&lt;/<span class="name">discription</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.scheduler.minimum-allocation-vcores<span class="tag">&lt;/<span class="name">name</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>2<span class="tag">&lt;/<span class="name">value</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">discription</span>&gt;</span>最多可分配的cores 2 个<span class="tag">&lt;/<span class="name">discription</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.nodemanager.pmem-check-enabled<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>false<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.nodemanager.vmem-check-enabled<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>false<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.log-aggregation-enable<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">discription</span>&gt;</span>是否开启聚合日志<span class="tag">&lt;/<span class="name">discription</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.nodemanager.log-aggregation.roll-monitoring-interval-seconds<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>-1<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">discription</span>&gt;</span>定义NM唤醒上载日志文件的频率。默认值为-1。默认情况下，应用程序完成后将上载日志。通过设置此配置，可以在应用程序运行时定期上载日志。可设置的最小滚动间隔秒数为3600。<span class="tag">&lt;/<span class="name">discription</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.log.server.url<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>http://flink-master1:19888/jobhistory/logs<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">discription</span>&gt;</span> 配置日志服务器的地址<span class="tag">&lt;/<span class="name">discription</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.log-aggregation.retain-seconds<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>-1<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">discription</span>&gt;</span> 在删除聚合日志之前保留多长时间。-1禁用。单位是秒<span class="tag">&lt;/<span class="name">discription</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.nodemanager.log-dirs<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>/usr/aboutyun/hadoop/yarn/logs/<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">discription</span>&gt;</span>nodemanager存放container日志的本地路径<span class="tag">&lt;/<span class="name">discription</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.nodemanager.remote-app-log-dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>/tmp/logs<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">discription</span>&gt;</span>nodemanager存放container日志的本地路径<span class="tag">&lt;/<span class="name">discription</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.am.max-attempts<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>4<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span>The maximum number of application master execution attempts.<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>
<ul>
<li>cd /usr/aboutyun/hadoop/sbin</li>
</ul>
<p><strong>#编辑 start-dfs.sh，stop-dfs.sh 脚本</strong></p>
<figure class="highlight ini"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 在开始处 #!/usr/bin/env bash 的下面，增加以下内容：</span></span><br><span class="line"><span class="attr">HDFS_DATANODE_USER</span>=root</span><br><span class="line"><span class="attr">HDFS_DATANODE_SECURE_USER</span>=hdfs</span><br><span class="line"><span class="attr">HDFS_ZKFC_USER</span>=root</span><br><span class="line"><span class="attr">HDFS_JOURNALNODE_USER</span>=root</span><br><span class="line"><span class="attr">HDFS_NAMENODE_USER</span>=root</span><br><span class="line"><span class="attr">HDFS_SECONDARYNAMENODE_USER</span>=root</span><br></pre></td></tr></tbody></table></figure>
<p><strong>#编辑 start-yarn.sh，stop-yarn.sh 脚本</strong></p>
<figure class="highlight ini"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 在开始处 #!/usr/bin/env bash 的下面，增加以下内容：</span></span><br><span class="line"><span class="attr">YARN_RESOURCEMANAGER_USER</span>=root</span><br><span class="line"><span class="attr">HADOOP_SECURE_DN_USER</span>=yarn </span><br><span class="line"><span class="attr">YARN_NODEMANAGER_USER</span>=root</span><br></pre></td></tr></tbody></table></figure>
<p><strong>#启用 JournalNode 集群</strong></p>
<ul>
<li>hadoop-daemon.sh start journalnode</li>
</ul>
<p><strong>#初始化 NameNode (仅 master1)</strong></p>
<ul>
<li>hadoop namenode -format</li>
</ul>
<p><strong>#格式化 Zookeeper (仅 master1)</strong></p>
<ul>
<li>hdfs zkfc -formatZK</li>
</ul>
<p><strong>#启动 NameNode (仅 master1)</strong></p>
<ul>
<li>hadoop-daemon.sh start namenode</li>
</ul>
<p><strong>#将 NameNode 数据复制到备用 NameNode (仅 master2)</strong></p>
<ul>
<li>hdfs namenode -bootstrapStandby</li>
<li>hadoop-daemon.sh start namenode</li>
</ul>
<p><strong>#启动 Hadoop 集群</strong></p>
<ul>
<li>start-dfs.sh (仅 master1)</li>
<li>start-yarn.sh (仅 master1)</li>
<li>yarn-daemon.sh start resourcemanager (仅 master2)</li>
</ul>
<p><strong>#监控页面</strong></p>
<ul>
<li><a href="http://flink-master1:50070/">HDFS(master1)</a></li>
<li><a href="http://flink-master2:50070/">HDFS(master2)</a></li>
<li><a href="http://flink-master1:8088/">YARN(master1)</a></li>
<li><a href="http://flink-master1:8088/">YARN(master2)</a></li>
</ul>
<h2 id="安装mysql">安装 mysql</h2>
<mark class="label danger">仅在 Master 节点</mark>
<p><strong>#安装 mysql</strong></p>
<ul>
<li>yum -y install mariadb-server mariadb</li>
<li>rpm -q mariadb mariadb-server</li>
</ul>
<p><strong>#设置 mysql 开机启动</strong></p>
<ul>
<li>systemctl enable mariadb</li>
<li>systemctl daemon-reload</li>
</ul>
<p><strong>#开启 mysql</strong></p>
<ul>
<li>systemctl start mariadb</li>
</ul>
<p><strong>#关闭 mysql</strong></p>
<ul>
<li>systemctl stop mariadb</li>
</ul>
<p><strong>#重启 mysql</strong></p>
<ul>
<li>systemctl restart mariadb</li>
</ul>
<p><strong>#查看 mysql 状态</strong></p>
<ul>
<li>systemctl status mariadb</li>
</ul>
<p><strong>#通过内置的安全脚本实现对数据库的安全保护</strong></p>
<ul>
<li>mysql_secure_installation</li>
</ul>
<p><strong>#登录 root 账户</strong></p>
<ul>
<li>mysql -uroot -p</li>
</ul>
<p><strong>#创建账户</strong></p>
<ul>
<li>CREATE DATABASE metastore DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;</li>
<li>GRANT ALL ON metastore.* TO 'hive'@'%' IDENTIFIED BY '123';</li>
</ul>
<p><strong>#刷新权限</strong></p>
<ul>
<li>flush privileges;</li>
</ul>
<h2 id="安装hive">安装 Hive</h2>
<mark class="label danger">仅在 Master 节点</mark>
<ul>
<li> cd /mnt/hgfs/aboutyun</li>
<li>cp apache-hive-2.2.0-bin.tar.gz /usr/aboutyun/</li>
<li>cd /usr/aboutyun/</li>
<li>tar zxvf apache-hive-2.2.0-bin.tar.gz</li>
<li>rm -rf apache-hive-2.2.0-bin.tar.gz</li>
<li>mv apache-hive-2.2.0-bin hive</li>
</ul>
<p><strong>#配置 Hive 环境变量</strong></p>
<ul>
<li>vim /etc/profile</li>
</ul>
<figure class="highlight routeros"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># SET Hive PATH </span></span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">HIVE_HOME</span>=/usr/aboutyun/hive </span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">PATH</span>=<span class="variable">$PATH</span>:$HIVE_HOME/bin</span><br></pre></td></tr></tbody></table></figure>
<ul>
<li>source /etc/profile</li>
</ul>
<p><strong>#配置 mysql 驱动包</strong></p>
<ul>
<li>cd /mnt/hgfs/aboutyun</li>
<li>cp mysql-connector-java-5.1.47.tar.gz /usr/aboutyun/</li>
<li>cd /usr/aboutyun/</li>
<li>tar zxvf mysql-connector-java-5.1.47.tar.gz</li>
<li>rm -rf mysql-connector-java-5.1.47.tar.gz</li>
<li>cp mysql-connector-java-5.1.47-bin.jar /usr/aboutyun/hive/lib/</li>
</ul>
<p><strong>#更换 jline 包（版本不一致）</strong></p>
<ul>
<li>cp hive/lib/jline-2.12.jar /usr/aboutyun/hadoop/share/hadoop/yarn/lib/</li>
</ul>
<p><strong>#配置 hive</strong></p>
<ul>
<li>cd hive</li>
<li>mkdir -p data/hive/log</li>
<li>mkdir -p data/hive/tmp</li>
<li>mkdir -p data/hive/warehouse</li>
<li>cd conf</li>
<li>cp hive-env.sh.template hive-env.sh</li>
<li>vim hive-env.sh</li>
</ul>
<figure class="highlight routeros"><table><tbody><tr><td class="code"><pre><span class="line"><span class="builtin-name">export</span> <span class="attribute">JAVA_HOME</span>=/usr/aboutyun/jdk </span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">HADOOP_HOME</span>=/usr/aboutyun/hadoop </span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">HIVE_HOME</span>=/usr/aboutyun/hive </span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">HIVE_CONF_DIR</span>=/usr/aboutyun/hive/conf </span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">HIVE_AUX_JARS</span>=/usr/aboutyun/hive/lib</span><br></pre></td></tr></tbody></table></figure>
<ul>
<li>cp hive-default.xml.template hive-site.xml</li>
<li>vim hive-site.xml</li>
</ul>
<figure class="highlight dts"><table><tbody><tr><td class="code"><pre><span class="line"><span class="params">&lt;configuration&gt;</span> </span><br><span class="line"><span class="params">&lt;property&gt;</span> </span><br><span class="line"><span class="params">&lt;name&gt;</span>javax.jdo.option.ConnectionURL<span class="params">&lt;/name&gt;</span> </span><br><span class="line"><span class="params">&lt;value&gt;</span>jdbc:mysql:<span class="comment">//localhost:3306/hive?createDatabaseIfNotExist=true&amp;amp;useSSL=false&lt;/value&gt; </span></span><br><span class="line"><span class="params">&lt;/property&gt;</span> </span><br><span class="line"><span class="params">&lt;property&gt;</span> </span><br><span class="line"><span class="params">&lt;name&gt;</span>javax.jdo.option.ConnectionDriverName<span class="params">&lt;/name&gt;</span> </span><br><span class="line"><span class="params">&lt;value&gt;</span>com.mysql.jdbc.Driver<span class="params">&lt;/value&gt;</span> </span><br><span class="line"><span class="params">&lt;/property&gt;</span> </span><br><span class="line"><span class="params">&lt;property&gt;</span> </span><br><span class="line"><span class="params">&lt;name&gt;</span>javax.jdo.option.ConnectionUserName<span class="params">&lt;/name&gt;</span> </span><br><span class="line"><span class="params">&lt;value&gt;</span>hive<span class="params">&lt;/value&gt;</span> </span><br><span class="line"><span class="params">&lt;/property&gt;</span> </span><br><span class="line"><span class="params">&lt;property&gt;</span> </span><br><span class="line"><span class="params">&lt;name&gt;</span>javax.jdo.option.ConnectionPassword<span class="params">&lt;/name&gt;</span> </span><br><span class="line"><span class="params">&lt;value&gt;</span><span class="number">123</span><span class="params">&lt;/value&gt;</span> </span><br><span class="line"><span class="params">&lt;/property&gt;</span> </span><br><span class="line"><span class="params">&lt;property&gt;</span> </span><br><span class="line"><span class="params">&lt;name&gt;</span>hive.metastore.warehouse.dir<span class="params">&lt;/name&gt;</span> </span><br><span class="line"><span class="params">&lt;value&gt;</span><span class="meta-keyword">/usr/</span>aboutyun<span class="meta-keyword">/hive/</span>data<span class="meta-keyword">/hive/</span>warehouse<span class="params">&lt;/value&gt;</span> </span><br><span class="line"><span class="params">&lt;/property&gt;</span> </span><br><span class="line"><span class="params">&lt;property&gt;</span> </span><br><span class="line"><span class="params">&lt;name&gt;</span>hive.exec.scratchdir<span class="params">&lt;/name&gt;</span> </span><br><span class="line"><span class="params">&lt;value&gt;</span><span class="meta-keyword">/usr/</span>aboutyun<span class="meta-keyword">/hive/</span>data<span class="meta-keyword">/hive/</span>tmp<span class="params">&lt;/value&gt;</span> </span><br><span class="line"><span class="params">&lt;/property&gt;</span> </span><br><span class="line"><span class="params">&lt;property&gt;</span> </span><br><span class="line"><span class="params">&lt;name&gt;</span>hive.querylog.location<span class="params">&lt;/name&gt;</span> </span><br><span class="line"><span class="params">&lt;value&gt;</span><span class="meta-keyword">/usr/</span>aboutyun<span class="meta-keyword">/hive/</span>data<span class="meta-keyword">/hive/</span>log<span class="params">&lt;/value&gt;</span> </span><br><span class="line"><span class="params">&lt;/property&gt;</span> </span><br><span class="line"><span class="params">&lt;/configuration&gt;</span></span><br></pre></td></tr></tbody></table></figure>
<p>把 {system:java.io.tmpdir} 改成 /usr/aboutyun/hive/data/hive/tmp</p>
<figure class="highlight asciidoc"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">:%s/${system:java.io.tmpdir}/\/usr\/aboutyun\/hive\/data\/hive\/tmp/g</span> </span><br></pre></td></tr></tbody></table></figure>
<p>把 {system:user.name} 改成 {user.name}</p>
<figure class="highlight elixir"><table><tbody><tr><td class="code"><pre><span class="line"><span class="symbol">:%s/</span><span class="variable">${</span><span class="symbol">system:</span>user.name}/aboutyun/g</span><br></pre></td></tr></tbody></table></figure>
<p><strong>#初始化 hive (MYSQL 版)</strong></p>
<ul>
<li>schematool -dbType mysql -initSchema</li>
</ul>
<h3 id="安装flume">安装 Flume</h3>
<ul>
<li>cd /mnt/hgfs/aboutyun</li>
<li>cp apache-flume-1.9.0-bin.tar.gz /usr/aboutyun/</li>
<li>cd /usr/aboutyun/</li>
<li>tar zxvf apache-flume-1.9.0-bin.tar.gz</li>
<li>rm -rf apache-flume-1.9.0-bin.tar.gz</li>
<li>mv apache-flume-1.9.0-bin flume</li>
<li>cd flume</li>
</ul>
<p><strong>#Hbase 环境变量</strong></p>
<ul>
<li>vim /etc/profile</li>
</ul>
<figure class="highlight routeros"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># SET FLUME PATH </span></span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">FLUME_HOME</span>=/usr/aboutyun/flume </span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">PATH</span>=<span class="variable">$PATH</span>:$FLUME_HOME/bin</span><br></pre></td></tr></tbody></table></figure>
<ul>
<li>source /etc/profile</li>
</ul>
<p><strong>#修改 Flume 配置</strong></p>
<ul>
<li>cd conf</li>
<li>cp flume-env.sh.template flume-env.sh</li>
<li>vim flume-env.sh</li>
</ul>
<figure class="highlight routeros"><table><tbody><tr><td class="code"><pre><span class="line"><span class="builtin-name">export</span> <span class="attribute">JAVA_HOME</span>=/usr/aboutyun/jdk </span><br></pre></td></tr></tbody></table></figure>
<p><strong>#验证</strong></p>
<p><strong>Server</strong></p>
<figure class="highlight stata"><table><tbody><tr><td class="code"><pre><span class="line"># NetCat </span><br><span class="line">flume-ng agent --<span class="keyword">conf</span> <span class="keyword">conf</span> --<span class="keyword">conf</span>-<span class="keyword">file</span> <span class="keyword">conf</span>/flume-netcat.<span class="keyword">conf</span> --name=agent -Dflume.root.logger=INFO,console</span><br><span class="line"></span><br><span class="line"># Exec </span><br><span class="line">flume-ng agent --<span class="keyword">conf</span> <span class="keyword">conf</span> --<span class="keyword">conf</span>-<span class="keyword">file</span> <span class="keyword">conf</span>/flume-exec.<span class="keyword">conf</span> --name=agent -Dflume.root.logger=INFO,console</span><br><span class="line"></span><br><span class="line"># Avro </span><br><span class="line">flume-ng agent --<span class="keyword">conf</span> <span class="keyword">conf</span> --<span class="keyword">conf</span>-<span class="keyword">file</span> <span class="keyword">conf</span>/flume-netcat.<span class="keyword">conf</span> --name=agent -Dflume.root.logger=DEBUG,console</span><br></pre></td></tr></tbody></table></figure>
<p><strong>Client</strong></p>
<figure class="highlight sqf"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta"># NetCat </span></span><br><span class="line">flume-ng <span class="built_in">agent</span> --conf conf --conf-file conf/flume-netcat.conf --<span class="built_in">name</span>=<span class="built_in">agent</span> -Dflume.root.logger=INFO,console</span><br><span class="line"></span><br><span class="line"><span class="meta"># Exec </span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span>;<span class="keyword">do</span> <span class="built_in">echo</span> `<span class="built_in">date</span>` &gt;&gt; /data/hadoop/flume/test.txt ; <span class="built_in">sleep</span> <span class="number">1</span>; done</span><br><span class="line"></span><br><span class="line"><span class="meta"># Avro </span></span><br><span class="line">telnet master <span class="number">44444</span></span><br></pre></td></tr></tbody></table></figure>
<h2 id="安装kafka">安装 Kafka</h2>
<ul>
<li>cd /mnt/hgfs/aboutyun</li>
<li>cp kafka_2.11-0.11.0.3.tgz /usr/aboutyun</li>
<li>cd /usr/aboutyun</li>
<li>tar zxvf kafka_2.11-0.11.0.3.tgz</li>
<li>rm -rf kafka_2.11-0.11.0.3.tgz</li>
<li>mv kafka_2.11-0.11.0.3 kafka</li>
<li>cd kafka</li>
</ul>
<p><strong>#Kafka 环境变量</strong></p>
<ul>
<li>vim /etc/profile</li>
</ul>
<figure class="highlight routeros"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># SET KAFKA PATH </span></span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">KAFKA_HOME</span>=/usr/aboutyun/kafka </span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">PATH</span>=<span class="variable">$PATH</span>:$KAFKA_HOME/bin </span><br></pre></td></tr></tbody></table></figure>
<ul>
<li>source /etc/profile</li>
</ul>
<p><strong>#修改 Kafka 配置</strong></p>
<ul>
<li>mkdir logs</li>
<li>cd config</li>
<li>vim server.properties</li>
</ul>
<figure class="highlight ini"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attr">log.dirs</span>=/usr/aboutyun/kafka/logs </span><br><span class="line"><span class="attr">zookeeper.connect</span>=flink-slave1:<span class="number">2181</span>,flink-slave2:<span class="number">2181</span>,flink-slave3:<span class="number">2181</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">#Master1 </span></span><br><span class="line"><span class="attr">broker.id</span>=<span class="number">0</span></span><br><span class="line"><span class="comment">#Master2 </span></span><br><span class="line"><span class="attr">broker.id</span>=<span class="number">1</span></span><br><span class="line"><span class="comment">#Slave1 </span></span><br><span class="line"><span class="attr">broker.id</span>=<span class="number">2</span> </span><br><span class="line"><span class="comment">#Slave2 </span></span><br><span class="line"><span class="attr">broker.id</span>=<span class="number">3</span></span><br><span class="line"><span class="comment">#Slave3 </span></span><br><span class="line"><span class="attr">broker.id</span>=<span class="number">4</span></span><br></pre></td></tr></tbody></table></figure>
<p><strong>普通启动：</strong></p>
<ul>
<li>kafka-server-start.sh -daemon /usr/aboutyun/kafka/config/server.properties</li>
</ul>
<p><strong>关闭集群：</strong></p>
<ul>
<li>kafka-server-stop.sh</li>
</ul>
<h2 id="安装flink">安装 Flink</h2>
<ul>
<li>cd /mnt/hgfs/aboutyun</li>
<li>cp flink-1.7.2-bin-hadoop27-scala_2.11.tgz /usr/aboutyun</li>
<li>cd /usr/aboutyun</li>
<li>tar zxvf flink-1.7.2-bin-hadoop27-scala_2.11.tgz</li>
<li>rm -rf flink-1.7.2-bin-hadoop27-scala_2.11.tgz</li>
<li>mv flink-1.7.2 flink</li>
<li>cd flink</li>
</ul>
<p><strong>#Flink 环境变量</strong></p>
<ul>
<li>vim /etc/profile</li>
</ul>
<figure class="highlight routeros"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># SET FLINK PATH </span></span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">FLINK_HOME</span>=/usr/aboutyun/flink </span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">PATH</span>=<span class="variable">$PATH</span>:$FLINK_HOME/bin </span><br></pre></td></tr></tbody></table></figure>
<ul>
<li>source /etc/profile</li>
</ul>
<p><strong>#修改 Flink 配置</strong></p>
<ul>
<li>cd conf</li>
<li>vim flink-conf.yaml</li>
</ul>
<figure class="highlight apache"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 修改如下内容</span></span><br><span class="line"><span class="attribute">jobmanager</span>.rpc.address: flink-master<span class="number">1</span></span><br><span class="line"><span class="attribute">high</span>-availability: zookeeper</span><br><span class="line"><span class="attribute">high</span>-availability.zookeeper.path.root: /flink</span><br><span class="line"><span class="attribute">high</span>-availability.cluster-id: flink</span><br><span class="line"><span class="attribute">high</span>-availability.storageDir: hdfs:///flink/ha/</span><br><span class="line"><span class="attribute">high</span>-availability.zookeeper.quorum: flink-slave<span class="number">1</span>:<span class="number">2181</span>,flink-slave<span class="number">2</span>:<span class="number">2181</span>,flink-slave<span class="number">3</span>:<span class="number">2181</span></span><br><span class="line"><span class="attribute">yarn</span>.application-attempts: <span class="number">10</span></span><br></pre></td></tr></tbody></table></figure>
<ul>
<li>vim masters</li>
</ul>
<figure class="highlight apache"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attribute">flink</span>-master<span class="number">1</span>:<span class="number">8081</span></span><br><span class="line"><span class="attribute">flink</span>-master<span class="number">2</span>:<span class="number">8081</span></span><br></pre></td></tr></tbody></table></figure>
<ul>
<li>vim slaves</li>
</ul>
<figure class="highlight apache"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attribute">flink</span>-slave<span class="number">1</span> </span><br><span class="line"><span class="attribute">flink</span>-slave<span class="number">2</span></span><br><span class="line"><span class="attribute">flink</span>-slave<span class="number">3</span> </span><br></pre></td></tr></tbody></table></figure>
<p><strong>#启动 Standalone 集群 HA</strong></p>
<ul>
<li>start-cluster.sh</li>
</ul>
<p><strong>#关闭 Standalone 集群</strong></p>
<ul>
<li>stop-cluster.sh</li>
</ul>
<p><strong>#启动 YARN 集群 HA</strong></p>
<ul>
<li>yarn-session.sh</li>
</ul>
<p><strong>#监控网页</strong></p>
<p><a href="http://flink-master1:8081/">Flink(master1)</a></p>
<p><br></p>
<p><meting-js id="472361096" server="netease" type="song" preload="none"></meting-js></p>
<hr>
]]></content>
      <categories>
        <category>技术</category>
        <category>大数据</category>
        <category>项目实战</category>
        <category>Flink电商团购</category>
        <category>01-大数据集群搭建</category>
      </categories>
      <tags>
        <tag>BigData</tag>
        <tag>Flink</tag>
        <tag>项目</tag>
        <tag>电商</tag>
      </tags>
  </entry>
  <entry>
    <title>Hadoop 集群搭建 (一)：节点配置</title>
    <url>/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/CentOS-7/216563f23f21/</url>
    <content><![CDATA[<p class="description">
虚拟机节点配置
</p>
<figure>
<img data-src="https://image.alessa0.cn/131223.jpg" alt="arian-darvishi-1210156-unsplash"><figcaption aria-hidden="true">arian-darvishi-1210156-unsplash</figcaption>
</figure>
<span id="more"></span>
<blockquote class="blockquote-center">
<p>Hello, BigData</p>

</blockquote>
<h1 id="集群环境">集群环境</h1>
<p><strong>系统：</strong></p>
<p>CentOS-7-x86_64-Minimal-1810.iso</p>
<ul>
<li><strong>Master</strong> 192.168.69.101</li>
<li><strong>Slave1</strong> 192.168.69.102</li>
<li><strong>Slave2</strong> 192.168.69.103</li>
</ul>
<p><strong>修改 IP 地址：</strong></p>
<ul>
<li>vim /etc/sysconfig/network-scripts/ifcfg-ens33</li>
</ul>
<mark class="label danger">Master</mark>
<figure class="highlight ini"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 修改如下信息</span></span><br><span class="line"><span class="attr">IPADDR</span>=<span class="number">192.168</span>.<span class="number">69.101</span> </span><br><span class="line"><span class="attr">NETMASK</span>=<span class="number">255.255</span>.<span class="number">255.0</span> </span><br><span class="line"><span class="attr">GATEWAY</span>=<span class="number">192.168</span>.<span class="number">69.2</span> </span><br><span class="line"><span class="attr">DNS1</span>=<span class="number">119.29</span>.<span class="number">29.29</span> </span><br></pre></td></tr></tbody></table></figure>
<mark class="label danger">仅在 Slave1</mark>
<figure class="highlight ini"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 修改如下信息</span></span><br><span class="line"><span class="attr">IPADDR</span>=<span class="number">192.168</span>.<span class="number">69.102</span> </span><br><span class="line"><span class="attr">NETMASK</span>=<span class="number">255.255</span>.<span class="number">255.0</span> </span><br><span class="line"><span class="attr">GATEWAY</span>=<span class="number">192.168</span>.<span class="number">69.2</span> </span><br><span class="line"><span class="attr">DNS1</span>=<span class="number">119.29</span>.<span class="number">29.29</span> </span><br></pre></td></tr></tbody></table></figure>
<mark class="label danger">仅在 Slave2</mark>
<figure class="highlight ini"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 修改如下信息</span></span><br><span class="line"><span class="attr">IPADDR</span>=<span class="number">192.168</span>.<span class="number">69.103</span> </span><br><span class="line"><span class="attr">NETMASK</span>=<span class="number">255.255</span>.<span class="number">255.0</span> </span><br><span class="line"><span class="attr">GATEWAY</span>=<span class="number">192.168</span>.<span class="number">69.2</span> </span><br><span class="line"><span class="attr">DNS1</span>=<span class="number">119.29</span>.<span class="number">29.29</span></span><br></pre></td></tr></tbody></table></figure>
<h1 id="关闭系统防火墙及内核防火墙">关闭系统防火墙及内核防火墙</h1>
<p><strong>永久关闭内核防火墙：</strong></p>
<ul>
<li>yum -y install vim</li>
<li>vim /etc/selinux/config</li>
</ul>
<figure class="highlight ini"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 修改如下信息</span></span><br><span class="line"><span class="attr">SELINUX</span>=disabled</span><br></pre></td></tr></tbody></table></figure>
<p><strong>停止 firewall：</strong></p>
<ul>
<li>systemctl stop firewalld.service</li>
</ul>
<p><strong>禁止 firewall 开机启动：</strong></p>
<ul>
<li>systemctl disable firewalld.service</li>
</ul>
<h1 id="修改主机文件">修改主机文件</h1>
<p><strong>修改主机名：</strong></p>
<mark class="label danger">仅在 Master</mark>
<ul>
<li>hostnamectl set-hostname master</li>
</ul>
<mark class="label danger"> 仅在 Slave1</mark>
<ul>
<li>hostnamectl set-hostname slave1</li>
</ul>
<mark class="label danger"> 仅在 Slave2</mark>
<ul>
<li>hostnamectl set-hostname slave2</li>
</ul>
<p><strong>修改 hosts 文件：</strong></p>
<ul>
<li>vim /etc/hosts</li>
</ul>
<figure class="highlight accesslog"><table><tbody><tr><td class="code"><pre><span class="line"># 添加如下信息</span><br><span class="line"><span class="number">192.168.69.101</span> master </span><br><span class="line"><span class="number">192.168.69.102</span> slave1 </span><br><span class="line"><span class="number">192.168.69.103</span> slave2 </span><br><span class="line"># 本地(可不加)</span><br><span class="line"><span class="number">192.168.69.1</span> client</span><br></pre></td></tr></tbody></table></figure>
<h1 id="ssh互信配置">SSH 互信配置</h1>
<p><strong>生成密钥对（公钥和私钥）-- 三次回车生成密钥：</strong></p>
<ul>
<li>ssh-keygen -t rsa -P ''</li>
</ul>
<p><strong>追加：</strong></p>
<ul>
<li>cat ~/.ssh/id_rsa.pub &gt; ~/.ssh/authorized_keys</li>
<li>chmod g-w ~</li>
<li>chmod 700 ~/.ssh</li>
<li>chmod 600 ~/.ssh/authorized_keys</li>
</ul>
<p><strong>追加密钥到 Master：</strong></p>
<ul>
<li>ssh [主机名] cat ~/.ssh/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys</li>
</ul>
<p><strong>复制密钥到从节点：</strong></p>
<ul>
<li>scp ~/.ssh/authorized_keys [主机名]:~/.ssh/authorized_keys</li>
</ul>
<h1 id="设置vmware共享文件夹">设置 vmware 共享文件夹</h1>
<p>cd /mnt/hgfs/ 发现没有文件，解决如下</p>
<p><strong>安装工具：</strong></p>
<ul>
<li>yum -y install open-vm-tools gcc gcc-c++ automake make kernel-devel git</li>
</ul>
<p><strong>终端中输入如下命令：</strong></p>
<ul>
<li>git clone https://github.com/rasa/vmware-tools-patches.git</li>
<li>cd vmware-tools-patches</li>
<li>`./patched-open-vm-tools.sh</li>
</ul>
<p><strong>查看分享目录：</strong></p>
<ul>
<li>vmware-hgfsclient</li>
<li>su</li>
</ul>
<p><strong>临时挂载分享目录：</strong></p>
<ul>
<li>mount.vmhgfs .host:/ /mnt/hgfs/</li>
</ul>
<p><strong>永久挂载分享目录：</strong></p>
<ul>
<li>vmware-config-tools.pl -d --clobber-kernel-modules=vmhgfs</li>
</ul>
<p><strong>#使用如下方法挂载有的会出错：</strong></p>
<ul>
<li>vim /etc/fstab</li>
</ul>
<figure class="highlight awk"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 末尾添加如下信息</span></span><br><span class="line">.host:<span class="regexp">/ /m</span>nt/hgfs fuse.vmhgfs-fuse allow_other <span class="number">0</span> <span class="number">0</span></span><br></pre></td></tr></tbody></table></figure>
<p><strong>删除工具包</strong></p>
<ul>
<li>cd ~</li>
<li>rm -rf ~/vmware-tools-patches</li>
<li>reboot</li>
</ul>
<h1 id="修改src权限">修改 src 权限</h1>
<ul>
<li>cd /usr/local</li>
<li>sudo chown -R alessa0:alessa0 src</li>
<li>sudo chown -R alessa0:alessa0 bin</li>
</ul>
<p><strong>更改源为阿里云：</strong></p>
<ul>
<li>cd /etc/yum.repos.d/</li>
<li>mv CentOS-Base.repo CentOS-Base.repo.bak</li>
<li>wget http://mirrors.aliyun.com/repo/Centos-7.repo</li>
<li>wget http://mirrors.163.com/.help/CentOS7-Base-163.repo</li>
<li>yum clean all</li>
<li>yum makecache</li>
</ul>
<p><strong>安装网络工具包和基础工具包：</strong></p>
<ul>
<li>sudo yum -y install net-tools checkpolicy gcc dkms foomatic openssh-server bash-completion psmisc</li>
</ul>
<h1 id="hadoop集群组件列表">Hadoop 集群组件列表</h1>
<table>
<thead>
<tr class="header">
<th>组件</th>
<th style="text-align: center;"> master</th>
<th style="text-align: center;">slave1</th>
<th style="text-align: center;">slave2</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>jdk1.8.0_212</td>
<td style="text-align: center;"><strong>√</strong></td>
<td style="text-align: center;"><strong>√</strong></td>
<td style="text-align: center;"><strong>√</strong></td>
</tr>
<tr class="even">
<td>miniconda3</td>
<td style="text-align: center;"><strong>√</strong></td>
<td style="text-align: center;"><strong>√</strong></td>
<td style="text-align: center;"><strong>√</strong></td>
</tr>
<tr class="odd">
<td>scala-2.11.12</td>
<td style="text-align: center;"><strong>√</strong></td>
<td style="text-align: center;"><strong>√</strong></td>
<td style="text-align: center;"><strong>√</strong></td>
</tr>
<tr class="even">
<td>hadoop-2.8.5</td>
<td style="text-align: center;"><strong>√</strong></td>
<td style="text-align: center;"><strong>√</strong></td>
<td style="text-align: center;"><strong>√</strong></td>
</tr>
<tr class="odd">
<td>redis-5.0.4</td>
<td style="text-align: center;"><strong>√</strong></td>
<td style="text-align: center;"></td>
<td style="text-align: center;"></td>
</tr>
<tr class="even">
<td>zookeeper-3.4.14</td>
<td style="text-align: center;"><strong>√</strong></td>
<td style="text-align: center;"><strong>√</strong></td>
<td style="text-align: center;"><strong>√</strong></td>
</tr>
<tr class="odd">
<td>spark-2.3.3-bin-hadoop2.7</td>
<td style="text-align: center;"><strong>√</strong></td>
<td style="text-align: center;"><strong>√</strong></td>
<td style="text-align: center;"><strong>√</strong></td>
</tr>
<tr class="even">
<td>mariadb/mariadb-server</td>
<td style="text-align: center;"><strong>√</strong></td>
<td style="text-align: center;"></td>
<td style="text-align: center;"></td>
</tr>
<tr class="odd">
<td>apache-hive-2.3.4-bin</td>
<td style="text-align: center;"><strong>√</strong></td>
<td style="text-align: center;"></td>
<td style="text-align: center;"></td>
</tr>
<tr class="even">
<td>hbase-1.3.3</td>
<td style="text-align: center;"><strong>√</strong></td>
<td style="text-align: center;"><strong>√</strong></td>
<td style="text-align: center;"><strong>√</strong></td>
</tr>
<tr class="odd">
<td>thrift-0.12.0</td>
<td style="text-align: center;"><strong>√</strong></td>
<td style="text-align: center;"></td>
<td style="text-align: center;"></td>
</tr>
<tr class="even">
<td>apache-flume-1.9.0-bin</td>
<td style="text-align: center;"><strong>√</strong></td>
<td style="text-align: center;"><strong>√</strong></td>
<td style="text-align: center;"><strong>√</strong></td>
</tr>
<tr class="odd">
<td>kafka_2.11-2.2.0</td>
<td style="text-align: center;"><strong>√</strong></td>
<td style="text-align: center;"><strong>√</strong></td>
<td style="text-align: center;"><strong>√</strong></td>
</tr>
<tr class="even">
<td>apache-storm-1.2.2</td>
<td style="text-align: center;"><strong>√</strong></td>
<td style="text-align: center;"><strong>√</strong></td>
<td style="text-align: center;"><strong>√</strong></td>
</tr>
<tr class="odd">
<td>Storm-on-Yarn</td>
<td style="text-align: center;"><strong>√</strong></td>
<td style="text-align: center;"></td>
<td style="text-align: center;"></td>
</tr>
<tr class="even">
<td>flink-1.8.0</td>
<td style="text-align: center;"><strong>√</strong></td>
<td style="text-align: center;"><strong>√</strong></td>
<td style="text-align: center;"><strong>√</strong></td>
</tr>
</tbody>
</table>
<p><br></p>
<p><meting-js id="1325896374" server="netease" type="song" preload="none"></meting-js></p>
<hr>
]]></content>
      <categories>
        <category>技术</category>
        <category>大数据</category>
        <category>环境搭建</category>
        <category>CentOS 7</category>
      </categories>
      <tags>
        <tag>BigData</tag>
        <tag>Hadoop环境搭建</tag>
        <tag>Vmware</tag>
      </tags>
  </entry>
  <entry>
    <title>Hadoop 集群搭建 (七)：Hive</title>
    <url>/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/Hive/ae49f152f74a/</url>
    <content><![CDATA[<p class="description">
Hive：不要把我认成 Hbase
</p>
<p><img data-src="https://image.alessa0.cn/035137.jpg" alt="mounzer-awad-348688-unsplash"><span id="more"></span></p>
<blockquote class="blockquote-center">
<p>Hive 安装配置</p>

</blockquote>
<div class="text-center">
<a class="btn" href="https://hive.apache.org/"><i class="fa fa-home fa-lg fa-fw"></i>Hive</a>
</div>
<h1 id="安装hive">安装 Hive</h1>
<mark class="label danger">仅在 Master</mark>
<mark class="label danger"> 仅在 Client</mark>
<ul>
<li>cd /mnt/hgfs/Hadoop</li>
<li>cp apache-hive-2.3.4-bin.tar.gz /usr/local/src/</li>
<li>cd /usr/local/src/</li>
<li>tar zxvf apache-hive-2.3.4-bin.tar.gz</li>
<li>rm -rf apache-hive-2.3.4-bin.tar.gz</li>
</ul>
<p><strong>配置 Hive 环境变量：</strong></p>
<ul>
<li>vim ~/.bashrc</li>
</ul>
<figure class="highlight routeros"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 添加如下信息</span></span><br><span class="line"><span class="comment"># SET Hive PATH </span></span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">HIVE_HOME</span>=/usr/local/src/apache-hive-2.3.4-bin </span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">PATH</span>=<span class="variable">$PATH</span>:$HIVE_HOME/bin</span><br></pre></td></tr></tbody></table></figure>
<ul>
<li>source ~/.bashrc</li>
</ul>
<h1 id="配置mysql驱动包">配置 mysql 驱动包</h1>
<mark class="label danger">仅在 Master</mark>
<ul>
<li>cd /mnt/hgfs/Hadoop</li>
<li>cp mysql-connector-java-5.1.47.tar.gz /usr/local/src/</li>
<li>cd /usr/local/src/</li>
<li>tar zxvf mysql-connector-java-5.1.47.tar.gz</li>
<li>rm -rf mysql-connector-java-5.1.47.tar.gz</li>
<li>cp mysql-connector-java-5.1.47-bin.jar /usr/local/src/apache-hive-2.3.4-bin/lib/</li>
</ul>
<p><strong>更换 jline 包（版本不一致）：</strong></p>
<ul>
<li>cp apache-hive-2.3.4-bin/lib/jline-2.12.jar /usr/local/src/hadoop-2.8.5/share/hadoop/yarn/lib/</li>
</ul>
<h1 id="配置hive">配置 hive</h1>
<mark class="label danger">仅在 Master</mark>
<mark class="label danger"> 仅在 Client</mark>
<ul>
<li>cd apache-hive-2.3.4-bin</li>
</ul>
<p><strong>创建临时目录 / 日志目录 / 数仓目录：</strong></p>
<ul>
<li>mkdir -p data/hive/log</li>
<li>mkdir -p data/hive/tmp</li>
<li>mkdir -p data/hive/warehouse</li>
</ul>
<p><strong>配置文件：</strong></p>
<ul>
<li>cd conf</li>
<li>cp hive-env.sh.template hive-env.sh</li>
<li>vim hive-env.sh</li>
</ul>
<figure class="highlight awk"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 添加如下信息</span></span><br><span class="line">export JAVA_HOME=<span class="regexp">/usr/</span>local<span class="regexp">/src/</span>jdk1.<span class="number">8.0</span>_212 </span><br><span class="line">export HADOOP_HOME=<span class="regexp">/usr/</span>local<span class="regexp">/src/</span>hadoop-<span class="number">2.8</span>.<span class="number">5</span> </span><br><span class="line">export HIVE_HOME=<span class="regexp">/usr/</span>local<span class="regexp">/src/</span>apache-hive-<span class="number">2.3</span>.<span class="number">4</span>-bin </span><br><span class="line">export HIVE_CONF_DIR=<span class="regexp">/usr/</span>local<span class="regexp">/src/</span>apache-hive-<span class="number">2.3</span>.<span class="number">4</span>-bin/conf </span><br><span class="line">export HIVE_AUX_JARS=<span class="regexp">/usr/</span>local<span class="regexp">/src/</span>apache-hive-<span class="number">2.3</span>.<span class="number">4</span>-bin/lib </span><br></pre></td></tr></tbody></table></figure>
<ul>
<li>cp hive-default.xml.template hive-site.xml</li>
<li>vim hive-site.xml</li>
</ul>
<figure class="highlight dts"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta"># 添加如下信息</span></span><br><span class="line"></span><br><span class="line"><span class="params">&lt;configuration&gt;</span> </span><br><span class="line">    <span class="params">&lt;property&gt;</span> </span><br><span class="line">        <span class="params">&lt;name&gt;</span>javax.jdo.option.ConnectionURL<span class="params">&lt;/name&gt;</span> </span><br><span class="line">        <span class="params">&lt;value&gt;</span>jdbc:mysql:<span class="comment">//master:3306/hive?createDatabaseIfNotExist=true&amp;amp;useSSL=false&lt;/value&gt; </span></span><br><span class="line">    <span class="params">&lt;/property&gt;</span> </span><br><span class="line">    <span class="params">&lt;property&gt;</span> </span><br><span class="line">        <span class="params">&lt;name&gt;</span>javax.jdo.option.ConnectionDriverName<span class="params">&lt;/name&gt;</span> </span><br><span class="line">        <span class="params">&lt;value&gt;</span>com.mysql.jdbc.Driver<span class="params">&lt;/value&gt;</span> </span><br><span class="line">    <span class="params">&lt;/property&gt;</span> </span><br><span class="line">    <span class="params">&lt;property&gt;</span> </span><br><span class="line">        <span class="params">&lt;name&gt;</span>javax.jdo.option.ConnectionUserName<span class="params">&lt;/name&gt;</span> </span><br><span class="line">        <span class="params">&lt;value&gt;</span>alessa0<span class="params">&lt;/value&gt;</span> </span><br><span class="line">    <span class="params">&lt;/property&gt;</span> </span><br><span class="line">    <span class="params">&lt;property&gt;</span> </span><br><span class="line">        <span class="params">&lt;name&gt;</span>javax.jdo.option.ConnectionPassword<span class="params">&lt;/name&gt;</span> </span><br><span class="line">        <span class="params">&lt;value&gt;</span>{密码}<span class="params">&lt;/value&gt;</span> </span><br><span class="line">    <span class="params">&lt;/property&gt;</span> </span><br><span class="line">    <span class="params">&lt;property&gt;</span> </span><br><span class="line">        <span class="params">&lt;name&gt;</span>hive.metastore.warehouse.dir<span class="params">&lt;/name&gt;</span> </span><br><span class="line">        <span class="params">&lt;value&gt;</span><span class="meta-keyword">/usr/</span>local<span class="meta-keyword">/src/</span>apache-hive<span class="number">-2.3</span><span class="number">.4</span>-bin<span class="meta-keyword">/data/</span>hive/warehouse<span class="params">&lt;/value&gt;</span> </span><br><span class="line">    <span class="params">&lt;/property&gt;</span> </span><br><span class="line">    <span class="params">&lt;property&gt;</span> </span><br><span class="line">        <span class="params">&lt;name&gt;</span>hive.exec.scratchdir<span class="params">&lt;/name&gt;</span> </span><br><span class="line">        <span class="params">&lt;value&gt;</span><span class="meta-keyword">/usr/</span>local<span class="meta-keyword">/src/</span>apache-hive<span class="number">-2.3</span><span class="number">.4</span>-bin<span class="meta-keyword">/data/</span>hive/tmp<span class="params">&lt;/value&gt;</span> </span><br><span class="line">    <span class="params">&lt;/property&gt;</span> </span><br><span class="line">    <span class="params">&lt;property&gt;</span> </span><br><span class="line">        <span class="params">&lt;name&gt;</span>hive.querylog.location<span class="params">&lt;/name&gt;</span> </span><br><span class="line">        <span class="params">&lt;value&gt;</span><span class="meta-keyword">/usr/</span>local<span class="meta-keyword">/src/</span>apache-hive<span class="number">-2.3</span><span class="number">.4</span>-bin<span class="meta-keyword">/data/</span>hive/log<span class="params">&lt;/value&gt;</span> </span><br><span class="line">    <span class="params">&lt;/property&gt;</span> </span><br><span class="line"><span class="params">&lt;/configuration&gt;</span> </span><br></pre></td></tr></tbody></table></figure>
<p><strong>把 {system:java.io.tmpdir} 改成 /usr/local/src/apache-hive-2.3.4-bin/data/hive/tmp：</strong></p>
<figure class="highlight asciidoc"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">:%s/${system:java.io.tmpdir}/\/usr\/local\/src\/apache-hive-2.3.4-bin\/data\/hive\/tmp/g</span> </span><br></pre></td></tr></tbody></table></figure>
<p><strong>把 {system:user.name} 改成 {user.name} ：</strong></p>
<figure class="highlight elixir"><table><tbody><tr><td class="code"><pre><span class="line"><span class="symbol">:%s/</span><span class="variable">${</span><span class="symbol">system:</span>user.name}/alessa0/g</span><br></pre></td></tr></tbody></table></figure>
<h1 id="初始化hivemysql版">初始化 hive (MySQL 版)</h1>
<ul>
<li>schematool -dbType mysql -initSchema</li>
</ul>
<h1 id="配置使用hiveserver2">配置使用 hiveserver2</h1>
<mark class="label danger">仅在 Master</mark>
<ul>
<li>vim hive-site.xml</li>
</ul>
<figure class="highlight dts"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta"># 添加如下信息</span></span><br><span class="line"></span><br><span class="line">    <span class="params">&lt;property&gt;</span> </span><br><span class="line">        <span class="params">&lt;name&gt;</span>hive.server2.thrift.port<span class="params">&lt;/name&gt;</span> </span><br><span class="line">        <span class="params">&lt;value&gt;</span><span class="number">10000</span><span class="params">&lt;/value&gt;</span> </span><br><span class="line">    <span class="params">&lt;/property&gt;</span> </span><br><span class="line">    <span class="params">&lt;property&gt;</span> </span><br><span class="line">        <span class="params">&lt;name&gt;</span>hive.server2.thrift.bind.host<span class="params">&lt;/name&gt;</span> </span><br><span class="line">        <span class="params">&lt;value&gt;</span>master<span class="params">&lt;/value&gt;</span> </span><br><span class="line">    <span class="params">&lt;/property&gt;</span> </span><br><span class="line">    <span class="params">&lt;property&gt;</span> </span><br><span class="line">        <span class="params">&lt;name&gt;</span>hive.server2.enable.doAs<span class="params">&lt;/name&gt;</span> </span><br><span class="line">        <span class="params">&lt;value&gt;</span>false<span class="params">&lt;/value&gt;</span> </span><br><span class="line">    <span class="params">&lt;/property&gt;</span> </span><br><span class="line">    <span class="params">&lt;property&gt;</span> </span><br><span class="line">        <span class="params">&lt;name&gt;</span>hive.metastore.uris<span class="params">&lt;/name&gt;</span> </span><br><span class="line">        <span class="params">&lt;value&gt;</span>thrift:<span class="comment">//master:9083&lt;/value&gt; </span></span><br><span class="line">    <span class="params">&lt;/property&gt;</span> </span><br><span class="line">    <span class="params">&lt;property&gt;</span> </span><br><span class="line">        <span class="params">&lt;name&gt;</span>hive.support.concurrency<span class="params">&lt;/name&gt;</span> </span><br><span class="line">        <span class="params">&lt;value&gt;</span>true<span class="params">&lt;/value&gt;</span> </span><br><span class="line">    <span class="params">&lt;/property&gt;</span> </span><br><span class="line">    <span class="params">&lt;property&gt;</span> </span><br><span class="line">        <span class="params">&lt;name&gt;</span>hive.zookeeper.quorum<span class="params">&lt;/name&gt;</span> </span><br><span class="line">        <span class="params">&lt;value&gt;</span>master:<span class="number">2181</span>,slave1:<span class="number">2181</span>,slave2:<span class="number">2181</span><span class="params">&lt;/value&gt;</span> </span><br><span class="line">    <span class="params">&lt;/property&gt;</span> </span><br><span class="line">    <span class="params">&lt;property&gt;</span> </span><br><span class="line">        <span class="params">&lt;name&gt;</span>hive.server2.webui.host<span class="params">&lt;/name&gt;</span> </span><br><span class="line">        <span class="params">&lt;value&gt;</span>master<span class="params">&lt;/value&gt;</span> </span><br><span class="line">    <span class="params">&lt;/property&gt;</span> </span><br><span class="line">    <span class="params">&lt;property&gt;</span> </span><br><span class="line">        <span class="params">&lt;name&gt;</span>hive.server2.webui.port<span class="params">&lt;/name&gt;</span> </span><br><span class="line">        <span class="params">&lt;value&gt;</span><span class="number">10002</span><span class="params">&lt;/value&gt;</span> </span><br><span class="line">    <span class="params">&lt;/property&gt;</span></span><br></pre></td></tr></tbody></table></figure>
<h1 id="服务端启动">服务端启动</h1>
<p><mark class="label danger">仅在 Master</mark></p>
<p><strong>启动 metastore 服务</strong></p>
<ul>
<li>nohup hive --service metastore &gt;&gt; /usr/local/src/apache-hive-2.3.4-bin/logs/hivelog.log 2&gt;&amp;1 &amp;</li>
</ul>
<p><strong>启动 hiveserver2 服务</strong></p>
<ul>
<li>nohup hiveserver2 1&gt;/usr/local/src/apache-hive-2.3.4-bin/logs/hiveserver.log 2&gt;/usr/local/src/apache-hive-2.3.4-bin/logs/hiveserver.err &amp;</li>
</ul>
<p><strong>测试</strong></p>
<ul>
<li>Web UI：http://master:10002/</li>
</ul>
<h1 id="客户端连接">客户端连接</h1>
<mark class="label danger">仅在 Client</mark>
<p><strong>启动 beeline ：</strong></p>
<ul>
<li>beeline -u "jdbc:hive2://master:10000" alessa0 1008</li>
</ul>
<p><strong>退出 beeline ：</strong></p>
<ul>
<li>!q</li>
</ul>
<p><br></p>
<p><meting-js id="31473269" server="netease" type="song" preload="none"></meting-js></p>
<hr>
]]></content>
      <categories>
        <category>技术</category>
        <category>大数据</category>
        <category>环境搭建</category>
        <category>Hive</category>
      </categories>
      <tags>
        <tag>BigData</tag>
        <tag>Hadoop环境搭建</tag>
        <tag>Hive</tag>
      </tags>
  </entry>
  <entry>
    <title>Hadoop 集群搭建 (三)：Hadoop</title>
    <url>/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/Hadoop/f6f0c87d809b/</url>
    <content><![CDATA[<p class="description">
Hadoop：我好了你们再上
</p>
<figure>
<img data-src="https://image.alessa0.cn/163232.jpeg" alt="664px-Hadoop_logo.svg"><figcaption aria-hidden="true">664px-Hadoop_logo.svg</figcaption>
</figure>
<span id="more"></span>
<blockquote class="blockquote-center">
<p>Hadoop 安装配置</p>

</blockquote>
<div class="text-center">
<a class="btn" href="https://hadoop.apache.org/"><i class="fa fa-home fa-lg fa-fw"></i>Hadoop</a>
</div>
<p>Ps：除非特别指出<mark class="label danger">仅在 Master</mark>，则在所有节点配置 # 安装 Hadoop</p>
<ul>
<li>cd /mnt/hgfs/Hadoop</li>
<li>cp hadoop-2.8.5.tar.gz /usr/local/src/</li>
<li>cd /usr/local/src</li>
<li>tar zxvf hadoop-2.8.5.tar.gz</li>
<li>rm -rf hadoop-2.8.5.tar.gz</li>
</ul>
<p><strong>配置 Hadoop 环境变量：</strong></p>
<ul>
<li>vim ~/.bashrc</li>
</ul>
<figure class="highlight routeros"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 添加如下信息</span></span><br><span class="line"><span class="comment"># SET HADOOP PATH </span></span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">HADOOP_HOME</span>=/usr/local/src/hadoop-2.8.5 </span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">PATH</span>=<span class="variable">$PATH</span>:$HADOOP_HOME/bin </span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">PATH</span>=<span class="variable">$PATH</span>:$HADOOP_HOME/sbin </span><br></pre></td></tr></tbody></table></figure>
<ul>
<li>source ~/.bashrc</li>
</ul>
<h1 id="hadoop配置文件">Hadoop 配置文件</h1>
<ul>
<li>cd hadoop-2.8.5</li>
</ul>
<p><strong>创建临时目录和文件目录：</strong></p>
<ul>
<li>mkdir -p /usr/local/src/hadoop-2.8.5/dfs/name</li>
<li>mkdir -p /usr/local/src/hadoop-2.8.5/dfs/data</li>
<li>mkdir -p /usr/local/src/hadoop-2.8.5/tmp/dfs</li>
<li>cd etc/hadoop</li>
</ul>
<p><strong>仅在 Client 配置 (若无可跳过此步骤)：</strong></p>
<ul>
<li>vim core-site.xml</li>
</ul>
<figure class="highlight xml"><table><tbody><tr><td class="code"><pre><span class="line"># 添加如下信息</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 指定Hadoop所使用的文件系统Schema --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>fs.defaultFS<span class="tag">&lt;/<span class="name">name</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>hdfs://master:9000<span class="tag">&lt;/<span class="name">value</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span> </span><br></pre></td></tr></tbody></table></figure>
<ul>
<li>mv mapred-site.xml.template mapred-site.xml</li>
<li>vim mapred-site.xml</li>
</ul>
<figure class="highlight xml"><table><tbody><tr><td class="code"><pre><span class="line"># 添加如下信息</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span> </span><br><span class="line">        <span class="comment">&lt;!-- 指定MapReduce程序运行在Yarn上 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>mapreduce.framework.name<span class="tag">&lt;/<span class="name">name</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>yarn<span class="tag">&lt;/<span class="name">value</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span> </span><br></pre></td></tr></tbody></table></figure>
<ul>
<li>vim yarn-site.xml</li>
</ul>
<figure class="highlight xml"><table><tbody><tr><td class="code"><pre><span class="line"># 添加如下信息</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span> </span><br><span class="line">        <span class="comment">&lt;!-- 指定ResourceManager地址 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.hostname<span class="tag">&lt;/<span class="name">name</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>master<span class="tag">&lt;/<span class="name">value</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span> </span><br></pre></td></tr></tbody></table></figure>
<p><strong>修改 Hadoop 配置文件：</strong></p>
<ul>
<li>vim hadoop-env.sh</li>
</ul>
<figure class="highlight apache"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 添加如下信息</span></span><br><span class="line"><span class="attribute">export</span> JAVA_HOME=/usr/local/src/jdk<span class="number">1</span>.<span class="number">8</span>.<span class="number">0</span>_<span class="number">212</span></span><br></pre></td></tr></tbody></table></figure>
<ul>
<li>vim yarn-env.sh</li>
</ul>
<figure class="highlight apache"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 添加如下信息</span></span><br><span class="line"><span class="attribute">export</span> JAVA_HOME=/usr/local/src/jdk<span class="number">1</span>.<span class="number">8</span>.<span class="number">0</span>_<span class="number">212</span></span><br></pre></td></tr></tbody></table></figure>
<ul>
<li>vim slaves</li>
</ul>
<figure class="highlight nginx"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 添加如下信息</span></span><br><span class="line"><span class="attribute">slave1</span></span><br><span class="line">slave2</span><br></pre></td></tr></tbody></table></figure>
<ul>
<li>vim core-site.xml</li>
</ul>
<figure class="highlight xml"><table><tbody><tr><td class="code"><pre><span class="line"># 添加如下信息</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span> </span><br><span class="line">        <span class="comment">&lt;!-- 指定Hadoop所使用的文件系统Schema --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>fs.defaultFS<span class="tag">&lt;/<span class="name">name</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>hdfs://master:9000<span class="tag">&lt;/<span class="name">value</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span> </span><br><span class="line">        <span class="comment">&lt;!-- 指定HDFS本地临时存放目录 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>hadoop.tmp.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>/usr/local/src/hadoop-2.8.5/tmp<span class="tag">&lt;/<span class="name">value</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span> </span><br></pre></td></tr></tbody></table></figure>
<ul>
<li>vim hdfs-site.xml</li>
</ul>
<figure class="highlight xml"><table><tbody><tr><td class="code"><pre><span class="line"># 添加如下信息</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span> </span><br><span class="line">        <span class="comment">&lt;!-- 指定SecondaryNamenode端口地址 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.secondary.http-address<span class="tag">&lt;/<span class="name">name</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>master:9001<span class="tag">&lt;/<span class="name">value</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span> </span><br><span class="line">        <span class="comment">&lt;!-- 指定HDFS本地Namenode存放目录 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.name.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>file:/usr/local/src/hadoop-2.8.5/dfs.name<span class="tag">&lt;/<span class="name">value</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span> </span><br><span class="line">        <span class="comment">&lt;!-- 指定HDFS本地Datanode存放目录 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.datanode.name.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>file:/usr/local/src/hadoop-2.8.5/dfs.data<span class="tag">&lt;/<span class="name">value</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span> </span><br><span class="line">        <span class="comment">&lt;!-- HDFS副本数量(小于等于从节点的数量) --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.replication<span class="tag">&lt;/<span class="name">name</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>2<span class="tag">&lt;/<span class="name">value</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span> </span><br></pre></td></tr></tbody></table></figure>
<ul>
<li>vim mapred-site.xml</li>
</ul>
<figure class="highlight dust"><table><tbody><tr><td class="code"><pre><span class="line"><span class="xml"># 添加如下信息</span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span> </span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">property</span>&gt;</span> </span></span><br><span class="line"><span class="xml">        <span class="comment">&lt;!-- 指定MapReduce程序运行在Yarn上 --&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>mapreduce.framework.name<span class="tag">&lt;/<span class="name">name</span>&gt;</span> </span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>yarn<span class="tag">&lt;/<span class="name">value</span>&gt;</span> </span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span> </span></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!-- 配置JHS --&gt;</span> </span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">property</span>&gt;</span> </span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>mapreduce.jobhistory.address<span class="tag">&lt;/<span class="name">name</span>&gt;</span> </span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>master:10020<span class="tag">&lt;/<span class="name">value</span>&gt;</span> </span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span> </span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">property</span>&gt;</span> </span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>mapreduce.jobhistory.webapp.address<span class="tag">&lt;/<span class="name">name</span>&gt;</span> </span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>master:19888<span class="tag">&lt;/<span class="name">value</span>&gt;</span> </span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span> </span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">property</span>&gt;</span> </span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.app.mapreduce.am.staging-dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span> </span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>/usr/local/src/hadoop-2.8.5/tmp/hadoop-yarn/staging<span class="tag">&lt;/<span class="name">value</span>&gt;</span> </span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span> </span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">property</span>&gt;</span> </span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>mapreduce.jobhistory.intermediate-done-dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span> </span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>$</span><span class="template-variable">{yarn.app.mapreduce.am.staging-dir}</span><span class="xml">/history/done_intermediate<span class="tag">&lt;/<span class="name">value</span>&gt;</span> </span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span> </span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">property</span>&gt;</span> </span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>mapreduce.jobhistory.done-dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span> </span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>$</span><span class="template-variable">{yarn.app.mapreduce.am.staging-dir}</span><span class="xml">/history/done<span class="tag">&lt;/<span class="name">value</span>&gt;</span> </span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span> </span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">property</span>&gt;</span> </span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>mapreduce.jobhistory.cleaner.enable<span class="tag">&lt;/<span class="name">name</span>&gt;</span> </span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">value</span>&gt;</span> </span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span> </span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">property</span>&gt;</span> </span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>mapreduce.jobhistory.cleaner.interval-ms<span class="tag">&lt;/<span class="name">name</span>&gt;</span> </span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>86400000<span class="tag">&lt;/<span class="name">value</span>&gt;</span> </span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span> </span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">property</span>&gt;</span> </span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>mapreduce.jobhistory.max-age-ms<span class="tag">&lt;/<span class="name">name</span>&gt;</span> </span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>604800000<span class="tag">&lt;/<span class="name">value</span>&gt;</span> </span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span> </span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">property</span>&gt;</span> </span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>mapreduce.jobhistory.move.interval-ms<span class="tag">&lt;/<span class="name">name</span>&gt;</span> </span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>180000<span class="tag">&lt;/<span class="name">value</span>&gt;</span> </span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span> </span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span></span><br></pre></td></tr></tbody></table></figure>
<ul>
<li>vim yarn-site.xml</li>
</ul>
<figure class="highlight xml"><table><tbody><tr><td class="code"><pre><span class="line"># 添加如下信息</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span> </span><br><span class="line">        <span class="comment">&lt;!-- 指定reducer获取数据的方式--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.nodemanager.aux-services<span class="tag">&lt;/<span class="name">name</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>mapreduce_shuffle<span class="tag">&lt;/<span class="name">value</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span> </span><br><span class="line">        <span class="comment">&lt;!-- 指定reducer获取数据所需的类--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.nodemanager.aux-services.mapreduce.shuffle.class<span class="tag">&lt;/<span class="name">name</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>org.apache.hadoop.mapred.ShuffleHandler<span class="tag">&lt;/<span class="name">value</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span> </span><br><span class="line">        <span class="comment">&lt;!-- 指定ResourceManager地址 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.address<span class="tag">&lt;/<span class="name">name</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>master:8032<span class="tag">&lt;/<span class="name">value</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.scheduler.address<span class="tag">&lt;/<span class="name">name</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>master:8030<span class="tag">&lt;/<span class="name">value</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.resource-tracker.address<span class="tag">&lt;/<span class="name">name</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>master:8035<span class="tag">&lt;/<span class="name">value</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.admin.address<span class="tag">&lt;/<span class="name">name</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>master:8033<span class="tag">&lt;/<span class="name">value</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.webapp.address<span class="tag">&lt;/<span class="name">name</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>master:8088<span class="tag">&lt;/<span class="name">value</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span> </span><br></pre></td></tr></tbody></table></figure>
<h1 id="启动集群">启动集群</h1>
<mark class="label danger">仅在 Master</mark>
<p><strong>初始化 NameNode：</strong></p>
<ul>
<li>hadoop namenode -format</li>
</ul>
<p><strong>启动 Hadoop 集群：</strong></p>
<ul>
<li>start-dfs.sh</li>
<li>start-yarn.sh</li>
</ul>
<p><strong>WEB 监控页面：</strong></p>
<ul>
<li>HDFS：http://ip:50070</li>
<li>YARN：http://ip:8088</li>
</ul>
<p><br></p>
<p><meting-js id="1313354324" server="netease" type="song" preload="none"></meting-js></p>
<hr>
]]></content>
      <categories>
        <category>技术</category>
        <category>大数据</category>
        <category>环境搭建</category>
        <category>Hadoop</category>
      </categories>
      <tags>
        <tag>BigData</tag>
        <tag>Hadoop环境搭建</tag>
        <tag>Hadoop</tag>
      </tags>
  </entry>
  <entry>
    <title>Hadoop 集群搭建 (九)：Hbase</title>
    <url>/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/HBase/8b5d0fe449af/</url>
    <content><![CDATA[<p class="description">
Hbase：我不认识 Hive…
</p>
<figure>
<img data-src="https://image.alessa0.cn/063435.jpg" alt="campaign-creators-771723-unsplash"><figcaption aria-hidden="true">campaign-creators-771723-unsplash</figcaption>
</figure>
<span id="more"></span>
<blockquote class="blockquote-center">
<p>Hbase 安装配置</p>

</blockquote>
<div class="text-center">
<a class="btn" href="https://hbase.apache.org/"><i class="fa fa-home fa-lg fa-fw"></i>Hbase</a>
</div>
<h1 id="安装hbase">安装 Hbase</h1>
<ul>
<li>cd /mnt/hgfs/Hadoop</li>
<li>cp hbase-1.3.3-bin.tar.gz /usr/local/src/</li>
<li>cd /usr/local/src/</li>
<li>tar zxvf hbase-1.3.3-bin.tar.gz</li>
<li>rm -rf hbase-1.3.3-bin.tar.gz</li>
</ul>
<p><strong>Hbase 环境变量：</strong></p>
<ul>
<li>vim ~/.bashrc</li>
</ul>
<figure class="highlight routeros"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 添加如下信息</span></span><br><span class="line"><span class="comment"># SET HBASE PATH </span></span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">HBASE_HOME</span>=/usr/local/src/hbase-1.3.3 </span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">HBASE_CLASSPATH</span>=<span class="variable">$HBASE_HOME</span>/conf </span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">HBASE_LOG_DIR</span>=<span class="variable">$HBASE_HOME</span>/logs </span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">PATH</span>=<span class="variable">$PATH</span>:$HBASE_HOME/bin </span><br></pre></td></tr></tbody></table></figure>
<ul>
<li>source ~/.bashrc</li>
</ul>
<h1 id="修改hbase配置">修改 Hbase 配置</h1>
<ul>
<li>cd hbase-1.3.3</li>
</ul>
<p><strong>创建临时目录和文件目录：</strong></p>
<ul>
<li>mkdir logs</li>
<li>mkdir tmp</li>
</ul>
<p><strong>配置文件：</strong></p>
<ul>
<li>cd conf</li>
<li>vim regionservers</li>
</ul>
<figure class="highlight nginx"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 添加如下信息</span></span><br><span class="line"><span class="attribute">slave1</span> </span><br><span class="line">slave2  </span><br></pre></td></tr></tbody></table></figure>
<ul>
<li>vim hbase-env.sh</li>
</ul>
<figure class="highlight routeros"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 添加如下信息</span></span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">JAVA_HOME</span>=/usr/local/src/jdk1.8.0_212 </span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">CLASSPATH</span>=.:$CLASSPATH:$JAVA_HOME/lib </span><br><span class="line"><span class="comment"># 禁用Hbase自带独立Zookeeper集群</span></span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">HBASE_MANAGES_ZK</span>=<span class="literal">false</span></span><br></pre></td></tr></tbody></table></figure>
<ul>
<li>vim hbase-site.xml</li>
</ul>
<figure class="highlight dts"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta"># 添加如下信息</span></span><br><span class="line"></span><br><span class="line"><span class="params">&lt;configuration&gt;</span> </span><br><span class="line">    <span class="params">&lt;property&gt;</span> </span><br><span class="line">        <span class="params">&lt;name&gt;</span>hbase.tmp.dir<span class="params">&lt;/name&gt;</span> </span><br><span class="line">        <span class="params">&lt;value&gt;</span><span class="meta-keyword">/usr/</span>local<span class="meta-keyword">/src/</span>hbase<span class="number">-1.3</span><span class="number">.3</span>/tmp<span class="params">&lt;/value&gt;</span> </span><br><span class="line">    <span class="params">&lt;/property&gt;</span> </span><br><span class="line">    <span class="params">&lt;property&gt;</span> </span><br><span class="line">        <span class="params">&lt;name&gt;</span>hbase.rootdir<span class="params">&lt;/name&gt;</span> </span><br><span class="line">        <span class="params">&lt;value&gt;</span>hdfs:<span class="comment">//master:9000/hbase&lt;/value&gt; </span></span><br><span class="line">    <span class="params">&lt;/property&gt;</span> </span><br><span class="line">    <span class="params">&lt;property&gt;</span> </span><br><span class="line">        <span class="params">&lt;name&gt;</span>hbase.cluster.distributed<span class="params">&lt;/name&gt;</span> </span><br><span class="line">        <span class="params">&lt;value&gt;</span>true<span class="params">&lt;/value&gt;</span> </span><br><span class="line">    <span class="params">&lt;/property&gt;</span> </span><br><span class="line">    <span class="params">&lt;property&gt;</span> </span><br><span class="line">        <span class="params">&lt;name&gt;</span>hbase.zookeeper.quorum<span class="params">&lt;/name&gt;</span> </span><br><span class="line">        <span class="params">&lt;value&gt;</span>master,slave1,slave2<span class="params">&lt;/value&gt;</span> </span><br><span class="line">    <span class="params">&lt;/property&gt;</span> </span><br><span class="line">    <span class="params">&lt;property&gt;</span> </span><br><span class="line">        <span class="params">&lt;name&gt;</span>hbase.zookeeper.property.dataDir<span class="params">&lt;/name&gt;</span> </span><br><span class="line">        <span class="params">&lt;value&gt;</span><span class="meta-keyword">/usr/</span>local<span class="meta-keyword">/src/</span>zookeeper<span class="number">-3.4</span><span class="number">.14</span><span class="params">&lt;/value&gt;</span> </span><br><span class="line">    <span class="params">&lt;/property&gt;</span> </span><br><span class="line">    <span class="params">&lt;property&gt;</span> </span><br><span class="line">        <span class="params">&lt;name&gt;</span>hbase.master.info.port<span class="params">&lt;/name&gt;</span> </span><br><span class="line">        <span class="params">&lt;value&gt;</span><span class="number">60010</span><span class="params">&lt;/value&gt;</span> </span><br><span class="line">    <span class="params">&lt;/property&gt;</span> </span><br><span class="line"><span class="params">&lt;/configuration&gt;</span> </span><br></pre></td></tr></tbody></table></figure>
<h1 id="启动集群">启动集群</h1>
<p><mark class="label danger">仅在 Master</mark></p>
<p><strong>启动 Hbase 服务：</strong></p>
<ul>
<li>start-hbase.sh</li>
</ul>
<p><strong>关闭 Hbase 服务：</strong></p>
<ul>
<li>stop-hbase.sh</li>
</ul>
<p><br></p>
<p><meting-js id="1325898369" server="netease" type="song" preload="none"></meting-js></p>
<hr>
]]></content>
      <categories>
        <category>技术</category>
        <category>大数据</category>
        <category>环境搭建</category>
        <category>HBase</category>
      </categories>
      <tags>
        <tag>BigData</tag>
        <tag>Hadoop环境搭建</tag>
        <tag>HBase</tag>
      </tags>
  </entry>
  <entry>
    <title>Hadoop 集群搭建 (二)：语言环境</title>
    <url>/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/%E8%AF%AD%E8%A8%80/72b5795038d0/</url>
    <content><![CDATA[<p class="description">
Java, Python, Scala
</p>
<figure>
<img data-src="https://image.alessa0.cn/143320.jpg" alt="maximilian-weisbecker-544039-unsplash"><figcaption aria-hidden="true">maximilian-weisbecker-544039-unsplash</figcaption>
</figure>
<span id="more"></span>
<blockquote class="blockquote-center">
<p>人生苦短</p>

</blockquote>
<p>Ps：安装包均存放于 vmware 共享文件夹 Hadoop 中</p>
<div class="text-center">
<a class="btn" href="https://www.oracle.com/technetwork/java/javase/downloads/index.html"><i class="fa fa-home fa-lg fa-fw"></i>Java</a>
<a class="btn" href="https://www.anaconda.com/distribution/#download-section"><i class="fa fa-home fa-lg fa-fw"></i>Anaconda3</a>
<a class="btn" href="https://www.scala-lang.org/"><i class="fa fa-home fa-lg fa-fw"></i>Scala</a>
</div>
<h1 id="安装jdk">安装 JDK</h1>
<ul>
<li>cd /mnt/hgfs/Hadoop</li>
<li>cp jdk-8u212-linux-x64.tar.gz /usr/local/src/</li>
<li>cd /usr/local/src/</li>
<li>tar zxvf jdk-8u212-linux-x64.tar.gz</li>
<li>rm -rf jdk-8u212-linux-x64.tar.gz</li>
</ul>
<p><strong>配置 JDK 环境变量：</strong></p>
<ul>
<li>vim ~/.bashrc</li>
</ul>
<figure class="highlight routeros"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 添加如下信息</span></span><br><span class="line"><span class="comment"># SET JAVA PATH </span></span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">JAVA_HOME</span>=/usr/local/src/jdk1.8.0_212 </span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">CLASSPATH</span>=.:$CLASSPATH:$JAVA_HOME/lib </span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">PATH</span>=<span class="variable">$PATH</span>:$JAVA_HOME/bin  </span><br></pre></td></tr></tbody></table></figure>
<ul>
<li>source ~/.bashrc</li>
</ul>
<h1 id="安装anaconda3">安装 anaconda3</h1>
<ul>
<li>cd /mnt/hgfs/Hadoop</li>
<li>cp Miniconda3-latest-Linux-x86_64.sh /usr/local/src/</li>
<li>cd /usr/local/src</li>
<li>sudo yum -y install bzip2</li>
<li>sh Miniconda3-latest-Linux-x86_64.sh</li>
<li>rm -rf Miniconda3-latest-Linux-x86_64.sh</li>
</ul>
<p><strong>配置环境变量：</strong></p>
<ul>
<li>source ~/.bashrc</li>
</ul>
<p><strong>更新 conda 环境：</strong></p>
<ul>
<li>conda update —all</li>
</ul>
<h1 id="安装scala">安装 Scala</h1>
<ul>
<li>cd /mnt/hgfs/Hadoop</li>
<li>cp scala-2.11.12.tgz /usr/local/src/</li>
<li>cd /usr/local/src/</li>
<li>tar zxvf scala-2.11.12.tgz</li>
<li>rm -rf scala-2.11.12.tgz</li>
</ul>
<p><strong>配置 Scala 环境变量：</strong></p>
<ul>
<li>vim ~/.bashrc</li>
</ul>
<figure class="highlight routeros"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 添加如下信息</span></span><br><span class="line"><span class="comment"># SET SCALA PATH </span></span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">SCALA_HOME</span>=/usr/local/src/scala-2.11.12 </span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">PATH</span>=<span class="variable">$PATH</span>:$SCALA_HOME/bin</span><br></pre></td></tr></tbody></table></figure>
<ul>
<li>source ~/.bashrc</li>
</ul>
<p><br></p>
<p><meting-js id="1325896374" server="netease" type="song" preload="none"></meting-js></p>
<hr>
]]></content>
      <categories>
        <category>技术</category>
        <category>大数据</category>
        <category>环境搭建</category>
        <category>语言</category>
      </categories>
      <tags>
        <tag>BigData</tag>
        <tag>Hadoop环境搭建</tag>
        <tag>Java</tag>
        <tag>Python</tag>
        <tag>Scala</tag>
      </tags>
  </entry>
  <entry>
    <title>Hadoop 集群搭建 (五)：Redis</title>
    <url>/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/Redis/02a03aab4958/</url>
    <content><![CDATA[<p class="description">
Redis：就是这么快！
</p>
<figure>
<img data-src="https://image.alessa0.cn/163221.jpg" alt="shiro-hatori-258976-unsplash"><figcaption aria-hidden="true">shiro-hatori-258976-unsplash</figcaption>
</figure>
<span id="more"></span>
<blockquote class="blockquote-center">
<p>Redis 安装配置</p>

</blockquote>
<div class="text-center">
<a class="btn" href="https://redis.io"><i class="fa fa-home fa-lg fa-fw"></i>Redis</a>
</div>
<h1 id="安装redis">安装 redis</h1>
<ul>
<li>cd /mnt/hgfs/Hadoop</li>
<li>cp redis-5.0.4.tar.gz /usr/local/src/</li>
<li>cd /usr/local/src/</li>
<li>tar zxvf redis-5.0.4.tar.gz</li>
<li>rm -rf redis-5.0.4.tar.gz</li>
</ul>
<h1 id="待续">待续……</h1>
<p><br></p>
<p><meting-js id="494865824" server="netease" type="song" preload="none"></meting-js></p>
<hr>
]]></content>
      <categories>
        <category>技术</category>
        <category>大数据</category>
        <category>环境搭建</category>
        <category>Redis</category>
      </categories>
      <tags>
        <tag>BigData</tag>
        <tag>Hadoop环境搭建</tag>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Hadoop 集群搭建 (八)：Spark</title>
    <url>/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/Spark/e6961dbeedd5/</url>
    <content><![CDATA[<p class="description">
Spark：传说中的星二代
</p>
<figure>
<img data-src="https://image.alessa0.cn/052725.jpg" alt="aziz-acharki-370112-unsplash"><figcaption aria-hidden="true">aziz-acharki-370112-unsplash</figcaption>
</figure>
<span id="more"></span>
<blockquote class="blockquote-center">
<p>Spark 安装配置</p>

</blockquote>
<div class="text-center">
<a class="btn" href="https://spark.apache.org/"><i class="fa fa-home fa-lg fa-fw"></i>Spark</a>
</div>
<h1 id="安装spark">安装 Spark</h1>
<ul>
<li>cd /mnt/hgfs/Hadoop</li>
<li>cp spark-2.3.3-bin-hadoop2.7.tgz /usr/local/src/</li>
<li>cd /usr/local/src/</li>
<li>tar zxvf spark-2.3.3-bin-hadoop2.7.tgz</li>
<li>rm -rf spark-2.3.3-bin-hadoop2.7.tgz</li>
</ul>
<p><strong>配置 Spark 环境变量：</strong></p>
<ul>
<li>vim ~/.bashrc</li>
</ul>
<figure class="highlight routeros"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 添加如下信息</span></span><br><span class="line"><span class="comment"># SET SPARK PATH </span></span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">SPARK_HOME</span>=/usr/local/src/spark-2.3.3-bin-hadoop2.7 </span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">PATH</span>=<span class="variable">$PATH</span>:$SPARK_HOME/bin </span><br></pre></td></tr></tbody></table></figure>
<ul>
<li>source ~/.bashrc</li>
</ul>
<h1 id="修改spark配置文件">修改 spark 配置文件</h1>
<ul>
<li>cd spark-2.3.3-bin-hadoop2.7/conf</li>
<li>cp spark-env.sh.template spark-env.sh</li>
<li>vim spark-env.sh</li>
</ul>
<figure class="highlight routeros"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 添加如下信息</span></span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">SCALA_HOME</span>=/usr/local/src/scala-2.11.12 </span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">JAVA_HOME</span>=/usr/local/src/jdk1.8.0_212 </span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">HADOOP_HOME</span>=/usr/local/src/hadoop-2.8.5 </span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">HADOOP_CONF_DIR</span>=<span class="variable">$HADOOP_HOME</span>/etc/hadoop </span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">SPARK_DAEMON_JAVA_OPTS</span>=<span class="string">"-Dspark.deploy.recoveryMode=ZOOKEEPER -Dspark.deploy.zookeeper.url=master:2181,slave1:2181,slave2:2181"</span> </span><br><span class="line"><span class="attribute">SPARK_MASTER_IP</span>=master </span><br><span class="line"><span class="attribute">SPARK_LOCAL_DIRS</span>=/usr/local/src/spark-2.3.3-bin-hadoop2.7 </span><br><span class="line"><span class="attribute">SPARK_DRIVER_MEMORY</span>=1G</span><br></pre></td></tr></tbody></table></figure>
<ul>
<li>cp slaves.template slaves</li>
<li>vim slaves</li>
</ul>
<figure class="highlight nginx"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 添加如下信息</span></span><br><span class="line"><span class="attribute">slave1</span></span><br><span class="line">slave2</span><br></pre></td></tr></tbody></table></figure>
<h1 id="启动standalone">启动 Standalone</h1>
<mark class="label danger">仅在 Master</mark>
<p><strong>启动集群：</strong></p>
<ul>
<li>cd spark-2.3.3-bin-hadoop2.7/sbin</li>
<li>./start-all.sh</li>
</ul>
<p><strong>WEB 监控页面：</strong></p>
<ul>
<li>Spark：http://master:8080</li>
</ul>
<h1 id="验证">验证</h1>
<ul>
<li>cd spark-2.3.3-bin-hadoop2.7</li>
</ul>
<p><strong>本地模式：</strong></p>
<ul>
<li>./bin/run-example SparkPi 10 --master local[2]</li>
</ul>
<p><strong>集群 Standlone：</strong></p>
<ul>
<li>./bin/spark-submit --class org.apache.spark.examples.SparkPi --master spark://master:7077 examples/jars/spark-examples_2.11-2.3.3.jar 10</li>
</ul>
<p><strong>Spark on yarn：</strong></p>
<ul>
<li>./bin/spark-submit --class org.apache.spark.examples.SparkPi --master yarn-cluster examples/jars/spark-examples_2.11-2.3.3.jar 10</li>
</ul>
<p><br></p>
<p><meting-js id="509512457" server="netease" type="song" preload="none"></meting-js></p>
<hr>
]]></content>
      <categories>
        <category>技术</category>
        <category>大数据</category>
        <category>环境搭建</category>
        <category>Spark</category>
      </categories>
      <tags>
        <tag>BigData</tag>
        <tag>Hadoop环境搭建</tag>
        <tag>Spark</tag>
      </tags>
  </entry>
  <entry>
    <title>Hadoop 集群搭建 (六)：MySQL</title>
    <url>/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/MySQL/f0c090e61ac8/</url>
    <content><![CDATA[<p class="description">
MySQL：我就是个工具人…
</p>
<figure>
<img data-src="https://image.alessa0.cn/024045.jpg" alt="kevin-ku-364843-unsplash"><figcaption aria-hidden="true">kevin-ku-364843-unsplash</figcaption>
</figure>
<span id="more"></span>
<blockquote class="blockquote-center">
<p>MySQL 安装配置</p>

</blockquote>
<div class="text-center">
<a class="btn" href="https://www.mysql.com/cn/"><i class="fa fa-home fa-lg fa-fw"></i>MySQL</a>
</div>
<h1 id="安装mysql">安装 mysql</h1>
<mark class="label danger">仅在 Master</mark>
<p><strong>安装 mariadb：</strong> <mark class="label success">开源版 MySQL</mark></p>
<ul>
<li>yum -y install mariadb-server mariadb</li>
<li>rpm -q mariadb mariadb-server</li>
</ul>
<p><strong>设置开机启动：</strong></p>
<ul>
<li>systemctl enable mariadb</li>
<li>systemctl daemon-reload</li>
</ul>
<p><strong>开启 mysql：</strong></p>
<ul>
<li>systemctl start mariadb</li>
</ul>
<p><strong>关闭 mysql：</strong></p>
<ul>
<li>systemctl stop mariadb</li>
</ul>
<p><strong>重启 mysql：</strong></p>
<ul>
<li>systemctl restart mariadb</li>
</ul>
<p><strong>查看 mysql 状态：</strong></p>
<ul>
<li>systemctl status mariadb</li>
</ul>
<h1 id="通过内置的安全脚本实现对数据库的安全保护">通过内置的安全脚本实现对数据库的安全保护</h1>
<ul>
<li>mysql_secure_installation</li>
</ul>
<h1 id="创建hive账户">创建 Hive 账户</h1>
<p><strong>登录 root 账户：</strong></p>
<ul>
<li>mysql -uroot -p</li>
</ul>
<p><strong>创建账户：</strong></p>
<ul>
<li>CREATE USER 'alessa0'@'%' IDENTIFIED BY '{密码}';</li>
</ul>
<p><strong>设置 mysql 远程登录：</strong></p>
<ul>
<li>GRANT ALL ON <em>.</em> TO 'alessa0'@'%';</li>
</ul>
<p><strong>刷新权限：</strong></p>
<ul>
<li>flush privileges;</li>
</ul>
<p><br></p>
<p><meting-js id="145223" server="netease" type="song" preload="none"></meting-js></p>
<hr>
]]></content>
      <categories>
        <category>技术</category>
        <category>大数据</category>
        <category>环境搭建</category>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>BigData</tag>
        <tag>Hadoop环境搭建</tag>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>Hadoop 集群搭建 (十)：Thrift</title>
    <url>/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/Thrift/3bf7ea46a959/</url>
    <content><![CDATA[<p class="description">
Thrift：行李少的可以从我这儿走…
</p>
<p><img data-src="https://image.alessa0.cn/035105.jpg" alt="alejandro-escamilla-10-unsplash"><span id="more"></span></p>
<blockquote class="blockquote-center">
<p>Thrift 安装配置</p>

</blockquote>
<div class="text-center">
<a class="btn" href="https://thrift.apache.org/"><i class="fa fa-home fa-lg fa-fw"></i>Thrift</a>
</div>
<h1 id="安装thrift">安装 Thrift</h1>
<mark class="label danger">仅在 Master</mark>
<p><strong>安装依赖环境：</strong></p>
<ul>
<li>yum -y install automake libtool flex bison pkgconfig gcc-c++ boost-devel libevent-devel zlib-devel python-devel ruby-devel openssl-devel</li>
<li>yum -y install boost-devel</li>
<li>yum -y install libevent-devel</li>
</ul>
<p><strong>安装：</strong></p>
<ul>
<li>cd /mnt/hgfs/Hadoop</li>
<li>cp thrift-0.12.0.tar.gz /usr/local/src/</li>
<li>cd /usr/local/src/</li>
<li>tar zxvf thrift-0.12.0.tar.gz</li>
<li>rm -rf thrift-0.12.0.tar.gz</li>
</ul>
<p><strong>c++ 三部曲</strong>：</p>
<ul>
<li>cd thrift-0.12.0</li>
<li>./configure --with-cpp=no --with-ruby=no</li>
<li>make</li>
<li>make install</li>
</ul>
<h1 id="hbase源码包">Hbase 源码包</h1>
<ul>
<li>cd /mnt/hgfs/Hadoop</li>
<li>cp hbase-1.3.3-src.tar.gz /usr/local/src/tmp</li>
<li>cd /usr/local/src/tmp</li>
<li>tar zxvf hbase-1.3.3-src.tar.gz</li>
<li>mv hbase-1.3.3 hbase-1.3.3-src</li>
<li>rm -rf hbase-1.3.3-src.tar.gz</li>
<li>mv hbase-1.3.3-src/ ../</li>
</ul>
<h1 id="待续">待续……</h1>
<p><br></p>
<p><meting-js id="438801442" server="netease" type="song" preload="none"></meting-js></p>
<hr>
]]></content>
      <categories>
        <category>技术</category>
        <category>大数据</category>
        <category>环境搭建</category>
        <category>Thrift</category>
      </categories>
      <tags>
        <tag>BigData</tag>
        <tag>Hadoop环境搭建</tag>
        <tag>Thrift</tag>
      </tags>
  </entry>
  <entry>
    <title>Hadoop 集群搭建 (十一)：Flume</title>
    <url>/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/Flume/f5fa7e41641a/</url>
    <content><![CDATA[<p class="description">
Flume：xx 托我给您带个话…
</p>
<figure>
<img data-src="https://image.alessa0.cn/072006.jpg" alt="clark-young-160446-unsplash"><figcaption aria-hidden="true">clark-young-160446-unsplash</figcaption>
</figure>
<span id="more"></span>
<blockquote class="blockquote-center">
<p>Flume 安装配置</p>

</blockquote>
<div class="text-center">
<a class="btn" href="https://flume.apache.org/"><i class="fa fa-home fa-lg fa-fw"></i>Flume</a>
</div>
<h1 id="安装flume">安装 Flume</h1>
<ul>
<li>cd /mnt/hgfs/Hadoop</li>
<li>cp apache-flume-1.9.0-bin.tar.gz /usr/local/src/</li>
<li>cd /usr/local/src/</li>
<li>tar zxvf apache-flume-1.9.0-bin.tar.gz</li>
<li>rm -rf apache-flume-1.9.0-bin.tar.gz</li>
</ul>
<p><strong>Hbase 环境变量：</strong></p>
<ul>
<li>vim ~/.bashrc</li>
</ul>
<figure class="highlight routeros"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 添加如下信息</span></span><br><span class="line"><span class="comment"># SET FLUME PATH </span></span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">FLUME_HOME</span>=/usr/local/src/apache-flume-1.9.0-bin </span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">PATH</span>=<span class="variable">$PATH</span>:$FLUME_HOME/bin </span><br></pre></td></tr></tbody></table></figure>
<ul>
<li>source ~/.bashrc</li>
</ul>
<h1 id="修改flume配置">修改 Flume 配置</h1>
<ul>
<li>cd apache-flume-1.9.0-bin/conf</li>
<li>cp flume-env.sh.template flume-env.sh</li>
<li>vim flume-env.sh</li>
</ul>
<figure class="highlight apache"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 添加如下信息</span></span><br><span class="line"><span class="attribute">export</span> JAVA_HOME=/usr/local/src/jdk<span class="number">1</span>.<span class="number">8</span>.<span class="number">0</span>_<span class="number">212</span> </span><br></pre></td></tr></tbody></table></figure>
<h1 id="新增配置文件">新增配置文件</h1>
<p><strong>NetCat：</strong></p>
<ul>
<li>vim flume-netcat.conf</li>
</ul>
<figure class="highlight ini"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 添加如下信息</span></span><br><span class="line"><span class="comment"># Name the components on this agent</span></span><br><span class="line"><span class="attr">agent.sources</span> = r1</span><br><span class="line"><span class="attr">agent.sinks</span> = k1</span><br><span class="line"><span class="attr">agent.channels</span> = c1</span><br><span class="line"></span><br><span class="line"><span class="comment"># Describe/configuration the source</span></span><br><span class="line"><span class="attr">agent.sources.r1.type</span> = netcat</span><br><span class="line"><span class="attr">agent.sources.r1.bind</span> = <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">agent.sources.r1.port</span> = <span class="number">44444</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Describe the sink</span></span><br><span class="line"><span class="attr">agent.sinks.k1.type</span> = logger</span><br><span class="line"></span><br><span class="line"><span class="comment"># Use a channel which buffers events in memory</span></span><br><span class="line"><span class="attr">agent.channels.c1.type</span> = memory</span><br><span class="line"><span class="attr">agent.channels.c1.capacity</span> = <span class="number">1000</span></span><br><span class="line"><span class="attr">agent.channels.c1.transactionCapacity</span> = <span class="number">100</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Bind the source and sink to the channel</span></span><br><span class="line"><span class="attr">agent.sources.r1.channels</span> = c1</span><br><span class="line"><span class="attr">agent.sinks.k1.channel</span> = c1</span><br></pre></td></tr></tbody></table></figure>
<p><strong>Exec：</strong></p>
<ul>
<li>vim flume-exec.conf</li>
</ul>
<figure class="highlight ini"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 添加如下信息</span></span><br><span class="line"><span class="comment"># Name the components on this agent</span></span><br><span class="line"><span class="attr">agent.sources</span> = r1</span><br><span class="line"><span class="attr">agent.sinks</span> = k1</span><br><span class="line"><span class="attr">agent.channels</span> = c1</span><br><span class="line"></span><br><span class="line"><span class="comment"># Describe/configuration the source</span></span><br><span class="line"><span class="attr">agent.sources.r1.type</span> = exec</span><br><span class="line"><span class="attr">agent.sources.r1.command</span> = tail -f /data/hadoop/flume/test.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># Describe the sink</span></span><br><span class="line"><span class="attr">agent.sinks.k1.type</span> = logger</span><br><span class="line"></span><br><span class="line"><span class="comment"># Use a channel which buffers events in memory</span></span><br><span class="line"><span class="attr">agent.channels.c1.type</span> = memory</span><br><span class="line"><span class="attr">agent.channels.c1.capacity</span> = <span class="number">1000</span></span><br><span class="line"><span class="attr">agent.channels.c1.transactionCapacity</span> = <span class="number">100</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Bind the source and sink to the channel</span></span><br><span class="line"><span class="attr">agent.sources.r1.channels</span> = c1</span><br><span class="line"><span class="attr">agent.sinks.k1.channel</span> = c1</span><br></pre></td></tr></tbody></table></figure>
<p><strong>Avro：</strong></p>
<ul>
<li>vim flume-avro.conf</li>
</ul>
<figure class="highlight ini"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 添加如下信息</span></span><br><span class="line"><span class="comment"># Define a memory channel called c1 on agent</span></span><br><span class="line"><span class="attr">agent.channels.c1.type</span> = memory</span><br><span class="line"></span><br><span class="line"><span class="comment"># Define an avro source alled r1 on agent and  tell it</span></span><br><span class="line"><span class="attr">agent.sources.r1.channels</span> = c1</span><br><span class="line"><span class="attr">agent.sources.r1.type</span> = avro</span><br><span class="line"><span class="attr">agent.sources.r1.bind</span> = <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">agent.sources.r1.port</span> = <span class="number">44444</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Describe/configuration the source</span></span><br><span class="line"><span class="attr">agent.sinks.k1.type</span> = hdfs</span><br><span class="line"><span class="attr">agent.sinks.k1.channel</span> = c1</span><br><span class="line"><span class="attr">agent.sinks.k1.hdfs.path</span> = hdfs://master:<span class="number">9000</span>/flume_data_pool</span><br><span class="line"><span class="attr">agent.sinks.k1.hdfs.filePrefix</span> = events-</span><br><span class="line"><span class="attr">agent.sinks.k1.hdfs.fileType</span> = DataStream</span><br><span class="line"><span class="attr">agent.sinks.k1.hdfs.writeFormat</span> = Text</span><br><span class="line"><span class="attr">agent.sinks.k1.hdfs.rollSize</span> = <span class="number">0</span></span><br><span class="line"><span class="attr">agent.sinks.k1.hdfs.rollCount</span>= <span class="number">600000</span></span><br><span class="line"><span class="attr">agent.sinks.k1.hdfs.rollInterval</span> = <span class="number">600</span></span><br><span class="line"></span><br><span class="line"><span class="attr">agent.channels</span> = c1</span><br><span class="line"><span class="attr">agent.sources</span> = r1</span><br><span class="line"><span class="attr">agent.sinks</span> = k1</span><br></pre></td></tr></tbody></table></figure>
<h1 id="验证">验证</h1>
<p><strong>NetCat：</strong></p>
<p># 服务端</p>
<ul>
<li>flume-ng agent --conf conf --conf-file conf/flume-netcat.conf --name=agent -Dflume.root.logger=INFO,console</li>
</ul>
<p># 客户端</p>
<ul>
<li>flume-ng agent --conf conf --conf-file conf/flume-netcat.conf --name=agent -Dflume.root.logger=INFO,console</li>
</ul>
<p><strong>Exec：</strong></p>
<p># 服务端</p>
<ul>
<li>flume-ng agent --conf conf --conf-file conf/flume-exec.conf --name=agent -Dflume.root.logger=INFO,console</li>
</ul>
<p># 客户端</p>
<p><strong>Avro：</strong></p>
<p># 服务端</p>
<ul>
<li>flume-ng agent --conf conf --conf-file conf/flume-netcat.conf --name=agent -Dflume.root.logger=DEBUG,console</li>
</ul>
<p># 客户端</p>
<ul>
<li>telnet master 44444</li>
</ul>
<p><br></p>
<p><meting-js id="449239668" server="netease" type="song" preload="none"></meting-js></p>
<hr>
]]></content>
      <categories>
        <category>技术</category>
        <category>大数据</category>
        <category>环境搭建</category>
        <category>Flume</category>
      </categories>
      <tags>
        <tag>BigData</tag>
        <tag>Hadoop环境搭建</tag>
        <tag>Flume</tag>
      </tags>
  </entry>
  <entry>
    <title>Hadoop 集群搭建 (十三)：Storm</title>
    <url>/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/Storm/4d687c2e8e7c/</url>
    <content><![CDATA[<p class="description">
Storm：我才是流处理！
</p>
<figure>
<img data-src="https://image.alessa0.cn/084537.jpg" alt="johannes-plenio-247177-unsplash"><figcaption aria-hidden="true">johannes-plenio-247177-unsplash</figcaption>
</figure>
<span id="more"></span>
<blockquote class="blockquote-center">
<p>Storm 安装配置</p>

</blockquote>
<div class="text-center">
<a class="btn" href="https://storm.apache.org/"><i class="fa fa-home fa-lg fa-fw"></i>Storm</a>
</div>
<h1 id="安装storm">安装 Storm</h1>
<ul>
<li>cd /mnt/hgfs/Hadoop</li>
<li>cp apache-storm-1.2.2.tar.gz /usr/local/src/</li>
<li>cd /usr/local/src/</li>
<li>tar zxvf apache-storm-1.2.2.tar.gz</li>
<li>rm -rf apache-storm-1.2.2.tar.gz</li>
</ul>
<p><strong>Storm 环境变量：</strong></p>
<ul>
<li>vim ~/.bashrc</li>
</ul>
<figure class="highlight routeros"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># SET STORM PATH </span></span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">STORM_HOME</span>=/usr/local/src/apache-storm-1.2.2 </span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">PATH</span>=<span class="variable">$PATH</span>:$STORM_HOME/bin</span><br></pre></td></tr></tbody></table></figure>
<ul>
<li>source ~/.bashrc</li>
</ul>
<h1 id="修改storm配置文件">修改 Storm 配置文件</h1>
<ul>
<li>cd apache-storm-1.2.2</li>
</ul>
<p><strong>创建日志文件 / 数据文件：</strong></p>
<ul>
<li>mkdir data</li>
<li>mkdir logs</li>
</ul>
<p><strong>配置文件：</strong></p>
<ul>
<li>cd conf</li>
<li>vim storm.yaml</li>
</ul>
<figure class="highlight yaml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 添加如下信息</span></span><br><span class="line"><span class="attr">storm.zookeeper.servers:</span> </span><br><span class="line"> <span class="bullet">-</span> <span class="string">"master"</span> </span><br><span class="line"> <span class="bullet">-</span> <span class="string">"slave1"</span> </span><br><span class="line"> <span class="bullet">-</span> <span class="string">"slave2"</span> </span><br><span class="line"><span class="attr">storm.zookeeper.port:</span> <span class="number">2181</span> </span><br><span class="line"><span class="attr">storm.local.dir:</span> <span class="string">"/usr/local/storm-1.2.2/data"</span> </span><br><span class="line"><span class="attr">ui.port:</span> <span class="number">8089</span> </span><br><span class="line"><span class="attr">nimbus.seeds:</span> [<span class="string">"master"</span>] </span><br><span class="line"><span class="attr">supervisor.slots.ports:</span> </span><br><span class="line"> <span class="bullet">-</span> <span class="number">6700</span> </span><br><span class="line"> <span class="bullet">-</span> <span class="number">6701</span> </span><br><span class="line"> <span class="bullet">-</span> <span class="number">6702</span> </span><br><span class="line"> <span class="bullet">-</span> <span class="number">6703</span> </span><br><span class="line"> <span class="bullet">-</span> <span class="number">6704</span> </span><br><span class="line"> <span class="bullet">-</span> <span class="number">6705</span> </span><br></pre></td></tr></tbody></table></figure>
<h1 id="启动storm集群">启动 Storm 集群</h1>
<p><strong>主节点启动：</strong></p>
<ul>
<li>storm nimbus &gt;&gt; /usr/local/src/apache-storm-1.2.2/logs/nimbus.out 2&gt;&amp;1 &amp;</li>
<li>storm ui &gt;&gt; /usr/local/src/apache-storm-1.2.2/logs/ui.out 2&gt;&amp;1 &amp;</li>
</ul>
<p><strong>从节点启动：</strong></p>
<ul>
<li>storm supervisor &gt;&gt; /usr/local/src/apache-storm-1.2.2/logs/supervisor.out 2&gt;&amp;1 &amp;</li>
<li>storm logviewer &gt;&gt; /usr/local/src/apache-storm-1.2.2/logs/logviewer.out 2&gt;&amp;1 &amp;</li>
</ul>
<p><strong>主节点关闭：</strong></p>
<ul>
<li>kill -9 `ps -ef | grep ui.core | awk '{print $2}' | head -n 1`</li>
<li>kill -9 `ps -ef | grep daemon.nimbus | awk '{print $2}' | head -n 1`</li>
<li>kill -9 `ps -ef | grep daemon.supervisor | awk '{print $2}' | head -n 1`</li>
<li>kill -9 `ps -ef | grep daemon.logviewer | awk '{print $2}' | head -n 1`</li>
</ul>
<p><strong>WEB 监控页面：</strong></p>
<p>Web： http://master:8089/index.html</p>
<p><br></p>
<p><meting-js id="29836527" server="netease" type="song" preload="none"></meting-js></p>
<hr>
]]></content>
      <categories>
        <category>技术</category>
        <category>大数据</category>
        <category>环境搭建</category>
        <category>Storm</category>
      </categories>
      <tags>
        <tag>BigData</tag>
        <tag>Hadoop环境搭建</tag>
      </tags>
  </entry>
  <entry>
    <title>Hadoop 集群搭建 (十二)：Kafka</title>
    <url>/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/Kafka/c8cb3790afa5/</url>
    <content><![CDATA[<p class="description">
Kafka：我不是写小说那个…
</p>
<figure>
<img data-src="https://image.alessa0.cn/082116.jpg" alt="title-page"><figcaption aria-hidden="true">title-page</figcaption>
</figure>
<span id="more"></span>
<blockquote class="blockquote-center">
<p>Kafka 安装配置</p>

</blockquote>
<div class="text-center">
<a class="btn" href="https://kafka.apache.org/"><i class="fa fa-home fa-lg fa-fw"></i>Kafka</a>
</div>
<h1 id="安装kafka">安装 Kafka</h1>
<ul>
<li>cd /mnt/hgfs/Hadoop</li>
<li>cp kafka_2.11-2.2.0.tgz /usr/local/src/</li>
<li>cd /usr/local/src/</li>
<li>tar zxvf kafka_2.11-2.2.0.tgz</li>
<li>rm -rf kafka_2.11-2.2.0.tgz</li>
</ul>
<p><strong>Kafka 环境变量：</strong></p>
<ul>
<li>vim ~/.bashrc</li>
</ul>
<figure class="highlight routeros"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 添加如下信息</span></span><br><span class="line"><span class="comment"># SET KAFKA PATH </span></span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">KAFKA_HOME</span>=/usr/local/src/kafka_2.11-2.2.0 </span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">PATH</span>=<span class="variable">$PATH</span>:$KAFKA_HOME/bin</span><br></pre></td></tr></tbody></table></figure>
<ul>
<li>source ~/.bashrc</li>
</ul>
<h1 id="修改kafka配置">修改 Kafka 配置</h1>
<ul>
<li>cd kafka_2.11-2.2.0</li>
</ul>
<p><strong>创建日志文件：</strong></p>
<ul>
<li>mkdir logs</li>
</ul>
<p><strong>配置文件：</strong></p>
<ul>
<li>cd config</li>
<li>vim server.properties</li>
</ul>
<figure class="highlight apache"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 添加如下信息</span></span><br><span class="line"><span class="attribute">log</span>.dirs=/usr/local/src/kafka_<span class="number">2</span>.<span class="number">11</span>-<span class="number">2</span>.<span class="number">2</span>.<span class="number">0</span>/logs </span><br><span class="line"><span class="attribute">zookeeper</span>.connect=master:<span class="number">2181</span>,slave<span class="number">1</span>:<span class="number">2181</span>,slave<span class="number">2</span>:<span class="number">2181</span> </span><br></pre></td></tr></tbody></table></figure>
<mark class="label danger">仅在 Master</mark>
<ul>
<li>broker.id=0</li>
</ul>
<mark class="label danger"> 仅在 Slave1</mark>
<ul>
<li>broker.id=1</li>
</ul>
<mark class="label danger"> 仅在 Slave2</mark>
<ul>
<li>broker.id=2</li>
</ul>
<h1 id="启动kafka集群">启动 Kafka 集群</h1>
<p><strong>普通启动：</strong></p>
<ul>
<li>kafka-server-start.sh -daemon /usr/local/src/kafka_2.11-2.2.0/config/server.properties</li>
</ul>
<p><strong>关闭集群：</strong></p>
<ul>
<li>kafka-server-stop.sh</li>
</ul>
<p><br></p>
<p><meting-js id="1293886117" server="netease" type="song" preload="none"></meting-js></p>
<hr>
]]></content>
      <categories>
        <category>技术</category>
        <category>大数据</category>
        <category>环境搭建</category>
        <category>Kafka</category>
      </categories>
      <tags>
        <tag>BigData</tag>
        <tag>Hadoop环境搭建</tag>
        <tag>Kafka</tag>
      </tags>
  </entry>
  <entry>
    <title>Hadoop 集群搭建 (十五)：Flink</title>
    <url>/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/Flink/4706bca13060/</url>
    <content><![CDATA[<p class="description">
Flink：Storm 你该回家了…
</p>
<figure>
<img data-src="https://image.alessa0.cn/090827.jpg" alt="shane-young-769905-unsplash"><figcaption aria-hidden="true">shane-young-769905-unsplash</figcaption>
</figure>
<span id="more"></span>
<blockquote class="blockquote-center">
<p>Flink 安装配置</p>

</blockquote>
<div class="text-center">
<a class="btn" href="https://flink.apache.org/"><i class="fa fa-home fa-lg fa-fw"></i>Flink</a>
</div>
<h1 id="安装flink">安装 Flink</h1>
<ul>
<li>cd /mnt/hgfs/Hadoop</li>
<li>cp flink-1.8.0-bin-scala_2.11.tgz /usr/local/src/</li>
<li>cd /usr/local/src/</li>
<li>tar zxvf flink-1.8.0-bin-scala_2.11.tgz</li>
<li>rm -rf flink-1.8.0-bin-scala_2.11.tgz</li>
</ul>
<p><strong>Flink 环境变量：</strong></p>
<ul>
<li>vim ~/.bashrc</li>
</ul>
<figure class="highlight routeros"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 添加如下信息</span></span><br><span class="line"><span class="comment"># SET FLINK PATH </span></span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">FLINK_HOME</span>=/usr/local/src/flink-1.8.0 </span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">PATH</span>=<span class="variable">$PATH</span>:$FLINK_HOME/bin </span><br></pre></td></tr></tbody></table></figure>
<ul>
<li>source ~/.bashrc</li>
</ul>
<h1 id="修改flink配置">修改 Flink 配置</h1>
<ul>
<li>cd flink-1.8.0/conf</li>
<li>vim flink-conf.yaml</li>
</ul>
<figure class="highlight crmsh"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 修改如下信息</span></span><br><span class="line">jobmanager.rpc.address: <span class="keyword">master</span> <span class="title"></span></span><br></pre></td></tr></tbody></table></figure>
<ul>
<li>vim masters</li>
</ul>
<figure class="highlight apache"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 修改如下信息</span></span><br><span class="line"><span class="attribute">master</span>:<span class="number">8081</span> </span><br></pre></td></tr></tbody></table></figure>
<ul>
<li>vim slaves</li>
</ul>
<figure class="highlight nginx"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attribute">slave1</span> </span><br><span class="line">slave2 </span><br></pre></td></tr></tbody></table></figure>
<h1 id="启动集群">启动集群</h1>
<p><strong>启动服务：</strong></p>
<ul>
<li>start-cluster.sh</li>
</ul>
<p><strong>关闭集群：</strong></p>
<ul>
<li>stop-cluster.sh</li>
</ul>
<p><strong>监控网页：</strong></p>
<p>Web：http://master:8081</p>
<p><br></p>
<p><meting-js id="449235912" server="netease" type="song" preload="none"></meting-js></p>
<hr>
]]></content>
      <categories>
        <category>技术</category>
        <category>大数据</category>
        <category>环境搭建</category>
        <category>Flink</category>
      </categories>
      <tags>
        <tag>BigData</tag>
        <tag>Flink</tag>
        <tag>Hadoop环境搭建</tag>
      </tags>
  </entry>
  <entry>
    <title>Hadoop 集群搭建 (十四)：Storm on Yarn</title>
    <url>/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/Storm-on-Yarn/eded10c6d9e4/</url>
    <content><![CDATA[<p class="description">
Storm-on-Yarn：跟着老大哥有肉吃…
</p>
<figure>
<img data-src="https://image.alessa0.cn/090019.jpg" alt="max-delsid-479103-unsplash"><figcaption aria-hidden="true">max-delsid-479103-unsplash</figcaption>
</figure>
<span id="more"></span>
<blockquote class="blockquote-center">
<p>Storm-on-Yarn 安装配置</p>

</blockquote>
<div class="text-center">
<a class="btn" href="https://github.com/yahoo/storm-yarn"><i class="fa fa-home fa-lg fa-fw"></i>Storm on Yarn</a>
</div>
<h1 id="待续">待续……</h1>
<p><br></p>
<p><meting-js id="27804029" server="netease" type="song" preload="none"></meting-js></p>
<hr>
]]></content>
      <categories>
        <category>技术</category>
        <category>大数据</category>
        <category>环境搭建</category>
        <category>Storm-on-Yarn</category>
      </categories>
      <tags>
        <tag>BigData</tag>
        <tag>Hadoop环境搭建</tag>
        <tag>Storm-on-Yarn</tag>
      </tags>
  </entry>
  <entry>
    <title>Hadoop 集群搭建 (四)：ZooKeeper</title>
    <url>/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/Zookeeper/698dda32d549/</url>
    <content><![CDATA[<p class="description">
ZooKeeper：你们都安分点…
</p>
<figure>
<img data-src="https://image.alessa0.cn/051510.jpg" alt="daiga-ellaby-354470-unsplash"><figcaption aria-hidden="true">daiga-ellaby-354470-unsplash</figcaption>
</figure>
<span id="more"></span>
<blockquote class="blockquote-center">
<p>ZooKeeper 安装配置</p>

</blockquote>
<div class="text-center">
<a class="btn" href="https://zookeeper.apache.org/"><i class="fa fa-home fa-lg fa-fw"></i>Zookeeper</a>
</div>
<h1 id="安装zookeeper">安装 Zookeeper</h1>
<ul>
<li>cd /mnt/hgfs/Hadoop</li>
<li>cp zookeeper-3.4.14.tar.gz /usr/local/src/</li>
<li>cd /usr/local/src</li>
<li>tar zxvf zookeeper-3.4.14.tar.gz</li>
<li>rm -rf zookeeper-3.4.14.tar.gz</li>
</ul>
<p><strong>配置 Zookeeper 环境变量：</strong></p>
<ul>
<li>vim ~/.bashrc</li>
</ul>
<figure class="highlight routeros"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 添加如下信息</span></span><br><span class="line"><span class="comment"># SET ZOOKEEPER PATH </span></span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">ZOOKEEPER_HOME</span>=/usr/local/src/zookeeper-3.4.14 </span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">PATH</span>=<span class="variable">$PATH</span>:$ZOOKEEPER_HOME/bin </span><br></pre></td></tr></tbody></table></figure>
<ul>
<li>source ~/.bashrc</li>
</ul>
<h1 id="修改zookeeper配置">修改 Zookeeper 配置</h1>
<ul>
<li>cd zookeeper-3.4.14</li>
</ul>
<p><strong>创建临时目录 / 日志目录：</strong></p>
<ul>
<li>mkdir data</li>
<li>mkdir logs</li>
</ul>
<p><strong>配置文件：</strong></p>
<ul>
<li>cd conf</li>
<li>cp zoo_sample.cfg zoo.cfg</li>
<li>vim zoo.cfg</li>
</ul>
<figure class="highlight apache"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 添加如下信息</span></span><br><span class="line"><span class="attribute">dataDir</span>=/usr/local/src/zookeeper-<span class="number">3</span>.<span class="number">4</span>.<span class="number">14</span>/data </span><br><span class="line"><span class="attribute">dataLogDir</span>=/usr/local/src/zookeeper-<span class="number">3</span>.<span class="number">4</span>.<span class="number">14</span>/logs </span><br><span class="line"><span class="attribute">server</span>.<span class="number">1</span>=master:<span class="number">2888</span>:<span class="number">3888</span> </span><br><span class="line"><span class="attribute">server</span>.<span class="number">2</span>=slave<span class="number">1</span>:<span class="number">2888</span>:<span class="number">3888</span> </span><br><span class="line"><span class="attribute">server</span>.<span class="number">3</span>=slave<span class="number">2</span>:<span class="number">2888</span>:<span class="number">3888</span> </span><br></pre></td></tr></tbody></table></figure>
<p><strong>分别添加唯一标识 ID：</strong></p>
<mark class="label danger">仅在 Master</mark>
<ul>
<li>echo "1" &gt; /usr/local/src/zookeeper-3.4.14/data/myid</li>
</ul>
<mark class="label danger"> 仅在 Slava1</mark>
<ul>
<li>echo "2" &gt; /usr/local/src/zookeeper-3.4.14/data/myid</li>
</ul>
<mark class="label danger"> 仅在 Slava2</mark>
<ul>
<li>echo "3" &gt; /usr/local/src/zookeeper-3.4.14/data/myid</li>
</ul>
<h1 id="启动zookeeper">启动 Zookeeper</h1>
<p><strong>启动服务：</strong></p>
<ul>
<li>zkServer.sh start</li>
</ul>
<p><strong>查看运行状态：</strong></p>
<ul>
<li>zkServer.sh status</li>
<li>jps</li>
</ul>
<p><strong>关闭服务：</strong></p>
<ul>
<li>zkServer.sh stop</li>
</ul>
<p><br></p>
<p><meting-js id="1359595520" server="netease" type="song" preload="none"></meting-js></p>
<hr>
]]></content>
      <categories>
        <category>技术</category>
        <category>大数据</category>
        <category>环境搭建</category>
        <category>Zookeeper</category>
      </categories>
      <tags>
        <tag>BigData</tag>
        <tag>Hadoop环境搭建</tag>
        <tag>Zookeeper</tag>
      </tags>
  </entry>
  <entry>
    <title>傻瓜式 CDH 集群部署指南</title>
    <url>/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/CDH/e8de8c76ba4e/</url>
    <content><![CDATA[<p class="description">
CDH 环境配置
</p>
<p><img data-src="https://image.alessa0.cn/074403.jpg" alt="clay-banks-1554989-unsplash"><span id="more"></span></p>
<blockquote class="blockquote-center">
<p>单机内存最低 8G</p>

</blockquote>
<div class="text-center">
<a class="btn" href="https://www.cloudera.com/"><i class="fa fa-home fa-lg fa-fw"></i>Cloudera</a>
</div>
<h1 id="集群环境">集群环境</h1>
<h2 id="系统">系统</h2>
<p>CentOS-7-x86_64-Minimal-1810.iso</p>
<ul>
<li><strong>cdh-master</strong> 192.168.69.111 <strong>4core</strong> <strong>16G</strong></li>
<li><strong>cdh-slave1</strong> 192.168.69.112 <strong>4core</strong> <strong>8G</strong></li>
<li><strong>cdh-slave2</strong> 192.168.69.113 <strong>4core</strong> <strong>8G</strong></li>
</ul>
<h1 id="关闭防火墙及修改hosts">关闭防火墙及修改 hosts</h1>
<h2 id="永久关闭内核防火墙">永久关闭内核防火墙</h2>
<ul>
<li>vim /etc/selinux/config</li>
</ul>
<figure class="highlight ini"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 修改如下信息</span></span><br><span class="line"><span class="attr">SELINUX</span>=disabled</span><br></pre></td></tr></tbody></table></figure>
<h2 id="关闭系统防火墙">关闭系统防火墙</h2>
<h3 id="停止firewall">停止 firewall</h3>
<ul>
<li>systemctl stop firewalld.service</li>
</ul>
<h3 id="禁止firewall开机启动">禁止 firewall 开机启动</h3>
<ul>
<li>systemctl disable firewalld.service</li>
</ul>
<h2 id="修改hosts文件">修改 hosts 文件</h2>
<ul>
<li>vim /etc/hosts</li>
</ul>
<figure class="highlight accesslog"><table><tbody><tr><td class="code"><pre><span class="line"># 添加如下信息</span><br><span class="line"><span class="number">192.168.69.111</span> cdh-master </span><br><span class="line"><span class="number">192.168.69.112</span> cdh-slave1 </span><br><span class="line"><span class="number">192.168.69.113</span> cdh-slave2 </span><br></pre></td></tr></tbody></table></figure>
<h1 id="ssh互信">SSH 互信</h1>
<h2 id="生成密钥对公钥和私钥">生成密钥对（公钥和私钥）</h2>
<ul>
<li>ssh-keygen -t rsa -P ''</li>
</ul>
<h2 id="追加authorized_keys">追加 authorized_keys</h2>
<figure class="highlight awk"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 追加authorized_keys</span></span><br><span class="line">cat ~<span class="regexp">/.ssh/i</span>d_rsa.pub &gt; ~<span class="regexp">/.ssh/</span>authorized_keys</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改权限</span></span><br><span class="line">chmod g-w ~</span><br><span class="line">chmod <span class="number">700</span> ~/.ssh </span><br><span class="line">chmod <span class="number">600</span> ~<span class="regexp">/.ssh/</span>authorized_keys</span><br></pre></td></tr></tbody></table></figure>
<h2 id="追加密钥到master">追加密钥到 Master</h2>
<ul>
<li>ssh cdh-slave1 cat ~/.ssh/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys</li>
<li>ssh cdh-slave2 cat ~/.ssh/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys</li>
</ul>
<h2 id="复制密钥到从节点">复制密钥到从节点</h2>
<ul>
<li>scp ~/.ssh/authorized_keys cdh-slave1:~/.ssh/authorized_keys</li>
<li>scp ~/.ssh/authorized_keys cdh-slave2:~/.ssh/authorized_keys</li>
</ul>
<h1 id="ntp时间同步">ntp 时间同步</h1>
<h2 id="所有节点安装相关ntp组件">所有节点安装相关 ntp 组件</h2>
<ul>
<li>yum -y install ntp</li>
</ul>
<h2 id="所有节点设置时区">所有节点设置时区</h2>
<ul>
<li>timedatectl set-timezone Asia/Shanghai</li>
</ul>
<h2 id="启动ntp以及设置开机启动">启动 ntp，以及设置开机启动</h2>
<figure class="highlight routeros"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 启动ntp</span></span><br><span class="line">systemctl start ntpd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置开机启动</span></span><br><span class="line">systemctl <span class="builtin-name">enable</span> ntpd</span><br></pre></td></tr></tbody></table></figure>
<h2 id="配置ntp服务器master节点">配置 ntp 服务器 (master 节点)</h2>
<ul>
<li>vim /etc/ntp.conf</li>
</ul>
<figure class="highlight vala"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta"># 修改如下几行</span></span><br><span class="line"><span class="meta">#server 0.centos.pool.ntp.org iburst</span></span><br><span class="line"><span class="meta">#server 1.centos.pool.ntp.org iburst</span></span><br><span class="line"><span class="meta">#server 2.centos.pool.ntp.org iburst</span></span><br><span class="line"><span class="meta">#server 3.centos.pool.ntp.org iburst</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># 添加如下几行</span></span><br><span class="line">restrict&nbsp;<span class="number">192.168</span><span class="number">.69</span><span class="number">.2</span>&nbsp;mask&nbsp;<span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span>&nbsp;nomodify notrap</span><br><span class="line">server <span class="number">127.127</span><span class="number">.1</span><span class="number">.0</span></span><br><span class="line">fudge <span class="number">127.127</span><span class="number">.1</span><span class="number">.0</span> stratum <span class="number">10</span></span><br></pre></td></tr></tbody></table></figure>
<h2 id="配置ntp服务器slave节点">配置 ntp 服务器 (slave 节点)</h2>
<ul>
<li>vim /etc/ntp.conf</li>
</ul>
<figure class="highlight vala"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta"># 修改如下几行</span></span><br><span class="line"><span class="meta">#server 0.centos.pool.ntp.org iburst</span></span><br><span class="line"><span class="meta">#server 1.centos.pool.ntp.org iburst</span></span><br><span class="line"><span class="meta">#server 2.centos.pool.ntp.org iburst</span></span><br><span class="line"><span class="meta">#server 3.centos.pool.ntp.org iburst</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># 添加如下几行(master节点)</span></span><br><span class="line">restrict&nbsp;<span class="number">192.168</span><span class="number">.69</span><span class="number">.2</span>&nbsp;mask&nbsp;<span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span>&nbsp;nomodify notrap</span><br><span class="line">server <span class="number">192.168</span><span class="number">.69</span><span class="number">.111</span></span><br></pre></td></tr></tbody></table></figure>
<h2 id="重启ntp服务">重启 ntp 服务</h2>
<ul>
<li>systemctl restart ntpd</li>
</ul>
<h2 id="主节点定时服务">主节点定时服务</h2>
<ul>
<li>crontab -e</li>
</ul>
<figure class="highlight awk"><table><tbody><tr><td class="code"><pre><span class="line"><span class="number">0</span>-<span class="number">59</span><span class="regexp">/10 * * * * /u</span>sr<span class="regexp">/sbin/</span>ntpdate -u asia.pool.ntp.org</span><br></pre></td></tr></tbody></table></figure>
<h2 id="手动同步master的时间">手动同步 master 的时间</h2>
<ul>
<li>ntpdate -u 192.168.69.111</li>
</ul>
<h2 id="查看同步状态">查看同步状态</h2>
<ul>
<li>ntpstat</li>
</ul>
<h1 id="配置cloudera-rpm仓库">配置 Cloudera rpm 仓库</h1>
<h2 id="下载repo文件">下载 repo 文件</h2>
<ul>
<li>sudo wget https://archive.cloudera.com/cm6/6.2.0/redhat7/yum/cloudera-manager.repo -P /etc/yum.repos.d/</li>
</ul>
<h2 id="使用gpg-key导入仓库">使用 GPG key 导入仓库</h2>
<ul>
<li>sudo rpm --import https://archive.cloudera.com/cm6/6.2.0/redhat7/yum/RPM-GPG-KEY-cloudera</li>
</ul>
<h2 id="下载parcel文件">下载 parcel 文件</h2>
<ul>
<li>mkdir -p /opt/cloudera/parcel-repo/</li>
<li>sudo wget https://archive.cloudera.com/cdh6/6.2.0/parcels/CDH-6.2.0-1.cdh6.2.0.p0.967373-el7.parcel /opt/cloudera/parcel-repo/</li>
<li>sudo wget https://archive.cloudera.com/cdh6/6.2.0/parcels/CDH-6.2.0-1.cdh6.2.0.p0.967373-el7.parcel.sha256 /opt/cloudera/parcel-repo/</li>
<li>sudo wget https://archive.cloudera.com/cdh6/6.2.0/parcels/manifest.json /opt/cloudera/parcel-repo/</li>
</ul>
<h1 id="安装-java64-bit">安装 Java（64-bit）</h1>
<h2 id="卸载掉自带的-openjdk">卸载掉自带的 OpenJdk</h2>
<ul>
<li>rpm -qa | grep java</li>
</ul>
<h2 id="使用cloudera-manager-安装-java">使用 Cloudera Manager 安装 Java</h2>
<ul>
<li>sudo yum -y install oracle-j2sdk1.8</li>
</ul>
<h2 id="设置环境变量">设置环境变量</h2>
<ul>
<li>vim /etc/profile</li>
</ul>
<figure class="highlight routeros"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># SET JAVA PATH </span></span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">JAVA_HOME</span>=/usr/java/jdk1.8.0_181-cloudera/</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">CLASSPATH</span>=.:$CLASSPATH:$JAVA_HOME/lib </span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">PATH</span>=<span class="variable">$PATH</span>:$JAVA_HOME/bin</span><br></pre></td></tr></tbody></table></figure>
<ul>
<li>source /etc/profile</li>
</ul>
<h3 id="yum-update报错error-delta-rpms-disabled-because-usrbinapplydeltarpm-not-installed.">yum update 报错 <code>Error: Delta RPMs disabled because /usr/bin/applydeltarpm not installed.</code></h3>
<figure class="highlight nginx"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 安装deltarpm</span></span><br><span class="line"><span class="attribute">yum</span> provides <span class="string">'*/applydeltarpm'</span></span><br><span class="line">yum install deltarpm</span><br></pre></td></tr></tbody></table></figure>
<h1 id="安装cloudera-manager-server">安装 Cloudera Manager Server</h1>
<h2 id="安装cloudera-manager包">安装 Cloudera Manager 包</h2>
<ul>
<li>sudo yum -y install cloudera-manager-daemons cloudera-manager-agent cloudera-manager-server</li>
</ul>
<p>Ps：可以在 https://archive.cloudera.com/cm6/6.2.0/redhat7/yum/RPMS/x86_64/ 提前下好 rpm 包进行安装。</p>
<h2 id="启用auto-tls">启用 Auto-TLS</h2>
<p>待续</p>
<h1 id="安装和配置数据库mariadb-for-cloudera-softwaremaster节点">安装和配置数据库 MariaDB for Cloudera Software (master 节点)</h1>
<h2 id="安装mariadb">安装 MariaDB</h2>
<ul>
<li>sudo yum -y install mariadb-server</li>
</ul>
<h2 id="配置mariadb">配置 MariaDB</h2>
<ul>
<li>vim /etc/my.cnf</li>
</ul>
<figure class="highlight nix"><table><tbody><tr><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line"><span class="attr">datadir=/var/lib/mysql</span></span><br><span class="line"><span class="attr">socket=/var/lib/mysql/mysql.sock</span></span><br><span class="line"><span class="attr">transaction-isolation</span> = READ-COMMITTED</span><br><span class="line"><span class="comment"># Disabling symbolic-links is recommended to prevent assorted security risks;</span></span><br><span class="line"><span class="comment"># to do so, uncomment this line:</span></span><br><span class="line"><span class="attr">symbolic-links</span> = <span class="number">0</span></span><br><span class="line"><span class="comment"># Settings user and group are ignored when systemd is used.</span></span><br><span class="line"><span class="comment"># If you need to run mysqld under a different user or group,</span></span><br><span class="line"><span class="comment"># customize your systemd unit file for mariadb according to the</span></span><br><span class="line"><span class="comment"># instructions in http://fedoraproject.org/wiki/Systemd</span></span><br><span class="line"></span><br><span class="line"><span class="attr">key_buffer</span> = <span class="number">16</span>M</span><br><span class="line"><span class="attr">key_buffer_size</span> = <span class="number">32</span>M</span><br><span class="line"><span class="attr">max_allowed_packet</span> = <span class="number">32</span>M</span><br><span class="line"><span class="attr">thread_stack</span> = <span class="number">256</span>K</span><br><span class="line"><span class="attr">thread_cache_size</span> = <span class="number">64</span></span><br><span class="line"><span class="attr">query_cache_limit</span> = <span class="number">8</span>M</span><br><span class="line"><span class="attr">query_cache_size</span> = <span class="number">64</span>M</span><br><span class="line"><span class="attr">query_cache_type</span> = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="attr">max_connections</span> = <span class="number">550</span></span><br><span class="line"><span class="comment">#expire_logs_days = 10</span></span><br><span class="line"><span class="comment">#max_binlog_size = 100M</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#log_bin should be on a disk with enough free space.</span></span><br><span class="line"><span class="comment">#Replace '/var/lib/mysql/mysql_binary_log' with an appropriate path for your</span></span><br><span class="line"><span class="comment">#system and chown the specified folder to the mysql user.</span></span><br><span class="line"><span class="attr">log_bin=/var/lib/mysql/mysql_binary_log</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#In later versions of MariaDB, if you enable the binary log and do not set</span></span><br><span class="line"><span class="comment">#a server_id, MariaDB will not start. The server_id must be unique within</span></span><br><span class="line"><span class="comment">#the replicating group.</span></span><br><span class="line"><span class="attr">server_id=1</span></span><br><span class="line"></span><br><span class="line"><span class="attr">binlog_format</span> = mixed</span><br><span class="line"></span><br><span class="line"><span class="attr">read_buffer_size</span> = <span class="number">2</span>M</span><br><span class="line"><span class="attr">read_rnd_buffer_size</span> = <span class="number">16</span>M</span><br><span class="line"><span class="attr">sort_buffer_size</span> = <span class="number">8</span>M</span><br><span class="line"><span class="attr">join_buffer_size</span> = <span class="number">8</span>M</span><br><span class="line"></span><br><span class="line"><span class="comment"># InnoDB settings</span></span><br><span class="line"><span class="attr">innodb_file_per_table</span> = <span class="number">1</span></span><br><span class="line"><span class="attr">innodb_flush_log_at_trx_commit</span>  = <span class="number">2</span></span><br><span class="line"><span class="attr">innodb_log_buffer_size</span> = <span class="number">64</span>M</span><br><span class="line"><span class="attr">innodb_buffer_pool_size</span> = <span class="number">4</span>G</span><br><span class="line"><span class="attr">innodb_thread_concurrency</span> = <span class="number">8</span></span><br><span class="line"><span class="attr">innodb_flush_method</span> = O_DIRECT</span><br><span class="line"><span class="attr">innodb_log_file_size</span> = <span class="number">512</span>M</span><br><span class="line"></span><br><span class="line">[mysqld_safe]</span><br><span class="line"><span class="attr">log-error=/var/log/mariadb/mariadb.log</span></span><br><span class="line"><span class="attr">pid-file=/var/run/mariadb/mariadb.pid</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># include all files from the config directory</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">!includedir /etc/my.cnf.d</span><br></pre></td></tr></tbody></table></figure>
<h2 id="启动mariadb">启动 MariaDB</h2>
<h3 id="开机启动mariadb">开机启动 MariaDB</h3>
<ul>
<li>sudo systemctl enable mariadb</li>
</ul>
<h3 id="启动mariadb服务">启动 MariaDB 服务</h3>
<ul>
<li>sudo systemctl start mariadb</li>
</ul>
<h2 id="安全设置">安全设置</h2>
<ul>
<li>sudo /usr/bin/mysql_secure_installation</li>
</ul>
<figure class="highlight tp"><table><tbody><tr><td class="code"><pre><span class="line">[...]</span><br><span class="line">Enter current password for root (enter for none):</span><br><span class="line">OK, successfully used password, moving on...</span><br><span class="line">[...]</span><br><span class="line">Set root password? [<span class="keyword">Y</span>/n] <span class="keyword">Y</span></span><br><span class="line">New password: <span class="number">123</span></span><br><span class="line">Re-enter new password: <span class="number">123</span></span><br><span class="line">[...]</span><br><span class="line">Remove anonymous users? [<span class="keyword">Y</span>/n] <span class="keyword">Y</span></span><br><span class="line">[...]</span><br><span class="line">Disallow root login remotely? [<span class="keyword">Y</span>/n] <span class="keyword">Y</span></span><br><span class="line">[...]</span><br><span class="line">Remove test database and access to it [<span class="keyword">Y</span>/n] <span class="keyword">Y</span></span><br><span class="line">[...]</span><br><span class="line">Reload privilege tables now? [<span class="keyword">Y</span>/n] <span class="keyword">Y</span></span><br><span class="line">[...]</span><br><span class="line">All done<span class="comment">!  If you've completed all of the above steps, your MariaDB</span></span><br><span class="line"><span class="comment">installation should now be secure.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Thanks for using MariaDB!</span></span><br></pre></td></tr></tbody></table></figure>
<h2 id="安装mysql-jdbc-driver-for-mariadb">安装 MySQL JDBC Driver for MariaDB</h2>
<h3 id="下载驱动包">下载驱动包</h3>
<ul>
<li>wget https://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-5.1.46.tar.gz</li>
</ul>
<h3 id="解压驱动包">解压驱动包</h3>
<ul>
<li>tar zxvf mysql-connector-java-5.1.46.tar.gz</li>
<li>rm -rf mysql-connector-java-5.1.46.tar.gz</li>
</ul>
<h3 id="复制驱动包">复制驱动包</h3>
<ul>
<li>sudo mkdir -p /usr/share/java/</li>
<li>cd mysql-connector-java-5.1.46</li>
<li>sudo cp mysql-connector-java-5.1.46-bin.jar /usr/share/java/mysql-connector-java.jar</li>
</ul>
<h2 id="创建数据库">创建数据库</h2>
<h3 id="登录root账户">登录 root 账户</h3>
<ul>
<li>mysql -uroot -p</li>
</ul>
<h3 id="创建hive数据库">创建 hive 数据库</h3>
<ul>
<li>CREATE DATABASE metastore DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;</li>
<li>CREATE DATABASE scm DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;</li>
<li>CREATE DATABASE oozie DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;</li>
<li>CREATE DATABASE hue DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;</li>
</ul>
<h3 id="创建账户">创建账户</h3>
<ul>
<li>GRANT ALL ON metastore.* TO 'hive'@'%' IDENTIFIED BY '123';</li>
<li>GRANT ALL ON scm.* TO 'scm'@'%' IDENTIFIED BY '123';</li>
<li>GRANT ALL ON oozie.* TO 'oozie'@'%' IDENTIFIED BY '123';</li>
<li>GRANT ALL ON hue.* TO 'hue'@'%' IDENTIFIED BY '123';</li>
</ul>
<h3 id="刷新权限">刷新权限</h3>
<ul>
<li>flush privileges;</li>
</ul>
<h3 id="查看数据库">查看数据库</h3>
<ul>
<li>SHOW DATABASES;</li>
</ul>
<h3 id="查看权限">查看权限</h3>
<ul>
<li>SHOW GRANTS FOR 'hive'@'%';</li>
</ul>
<h1 id="设置cloudera-manager数据库master节点">设置 Cloudera Manager 数据库 (master 节点)</h1>
<h2 id="设置语法">设置语法</h2>
<ul>
<li>sudo /opt/cloudera/cm/schema/scm_prepare_database.sh mysql scm scm 123</li>
</ul>
<h2 id="准备数据库">准备数据库</h2>
<ul>
<li>sudo /opt/cloudera/cm/schema/scm_prepare_database.sh mysql scm scm</li>
</ul>
<h1 id="安装cdh及其他软件">安装 CDH 及其他软件</h1>
<p>## 【强烈建议】所有节点拍摄快照</p>
<h2 id="启动cloudera-manager-servermaster节点">启动 Cloudera Manager Server (master 节点)</h2>
<ul>
<li>sudo systemctl start cloudera-scm-server</li>
</ul>
<h2 id="查看日志master节点">查看日志 (master 节点)</h2>
<ul>
<li>sudo tail -f /var/log/cloudera-scm-server/cloudera-scm-server.log</li>
</ul>
<p>直至出现 <code>INFO WebServerImpl:com.cloudera.server.cmf.WebServerImpl: Started Jetty server.</code></p>
<h2 id="登录web页面">登录 web 页面</h2>
<ul>
<li>http://cdh-master:7180</li>
</ul>
<p>账户：admin 密码：admin</p>
<h2 id="安装组件">安装组件</h2>
<h3 id="x-接受最终用户许可条款和条件">- [x] 接受最终用户许可条款和条件</h3>
<h3 id="选择cloudera-express免费版">选择 Cloudera Express 免费版</h3>
<h3 id="集群安装">集群安装</h3>
<h4 id="cluster-basics">Cluster Basics</h4>
<ul>
<li>CDH</li>
</ul>
<h4 id="specify-hosts">Specify Hosts</h4>
<ul>
<li>输入 <code>cdh-master, cdh-slave1, cdh-slave2</code> 点击 ' 搜索'</li>
</ul>
<h4 id="选择存储库">选择存储库</h4>
<ul>
<li>选择 <code>Public Cloudera Repository</code></li>
<li>选择 <code>Parcels</code></li>
<li>其他默认</li>
</ul>
<h4 id="jdk-安装选项">JDK 安装选项</h4>
<ul>
<li>选中<code>安装 Oracle Java SE 开发工具包 (JDK)</code></li>
</ul>
<h4 id="设置登录凭据">设置登录凭据</h4>
<ul>
<li>选择 <code>root</code></li>
<li>输入密码</li>
</ul>
<h4 id="安装agents">安装 agents</h4>
<h4 id="安装parcels">安装 Parcels</h4>
<h4 id="inspect-hosts">Inspect Hosts</h4>
<ul>
<li><p>虚拟内存设置</p>
<figure class="highlight vim"><table><tbody><tr><td class="code"><pre><span class="line">sysctl -<span class="keyword">w</span> <span class="keyword">vm</span>.swappiness=<span class="number">10</span></span><br><span class="line"><span class="keyword">echo</span> <span class="keyword">vm</span>.swappiness = <span class="number">10</span> &gt;&gt; /etc/sysctl.<span class="keyword">conf</span></span><br></pre></td></tr></tbody></table></figure></li>
<li><p>大内存页设置</p>
<figure class="highlight awk"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 临时</span></span><br><span class="line">echo never&gt;<span class="regexp">/sys/</span>kernel<span class="regexp">/mm/</span>transparent_hugepage/defrag</span><br><span class="line">echo never&gt;<span class="regexp">/sys/</span>kernel<span class="regexp">/mm/</span>transparent_hugepage/enabled</span><br><span class="line"></span><br><span class="line"><span class="comment"># 永久</span></span><br><span class="line">vim <span class="regexp">/etc/</span>rc.local</span><br><span class="line"><span class="comment"># 加入如下信息</span></span><br><span class="line">echo never&gt;<span class="regexp">/sys/</span>kernel<span class="regexp">/mm/</span>transparent_hugepage/defrag</span><br><span class="line">echo never&gt;<span class="regexp">/sys/</span>kernel<span class="regexp">/mm/</span>transparent_hugepage/enabled</span><br><span class="line"><span class="comment"># 设置权限</span></span><br><span class="line">chmod +x <span class="regexp">/etc/</span>rc.d/rc.local</span><br></pre></td></tr></tbody></table></figure></li>
</ul>
<h4 id="组件列表">组件列表</h4>
<table>
<thead>
<tr class="header">
<th style="text-align: left;">组件</th>
<th style="text-align: left;">版本</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;"> Supervisord</td>
<td style="text-align: left;">3.0</td>
</tr>
<tr class="even">
<td style="text-align: left;">Cloudera Manager Agent</td>
<td style="text-align: left;">6.2.0</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Cloudera Manager Management Daemon</td>
<td style="text-align: left;">6.2.0</td>
</tr>
<tr class="even">
<td style="text-align: left;">Flume NG</td>
<td style="text-align: left;">1.9.0+cdh6.2.0</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Hadoop</td>
<td style="text-align: left;">3.0.0+cdh6.2.0</td>
</tr>
<tr class="even">
<td style="text-align: left;">HDFS</td>
<td style="text-align: left;">3.0.0+cdh6.2.0</td>
</tr>
<tr class="odd">
<td style="text-align: left;">HttpFS</td>
<td style="text-align: left;">3.0.0+cdh6.2.0</td>
</tr>
<tr class="even">
<td style="text-align: left;">hadoop-kms</td>
<td style="text-align: left;">3.0.0+cdh6.2.0</td>
</tr>
<tr class="odd">
<td style="text-align: left;">MapReduce 2</td>
<td style="text-align: left;">3.0.0+cdh6.2.0</td>
</tr>
<tr class="even">
<td style="text-align: left;">YARN</td>
<td style="text-align: left;">3.0.0+cdh6.2.0</td>
</tr>
<tr class="odd">
<td style="text-align: left;">HBase</td>
<td style="text-align: left;">2.1.0+cdh6.2.0</td>
</tr>
<tr class="even">
<td style="text-align: left;">Lily HBase Indexer</td>
<td style="text-align: left;">1.5+cdh6.2.0</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Hive</td>
<td style="text-align: left;">2.1.1+cdh6.2.0</td>
</tr>
<tr class="even">
<td style="text-align: left;">HCatalog</td>
<td style="text-align: left;">2.1.1+cdh6.2.0</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Hue</td>
<td style="text-align: left;">4.2.0+cdh6.2.0</td>
</tr>
<tr class="even">
<td style="text-align: left;">Impala</td>
<td style="text-align: left;">3.2.0+cdh6.2.0</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Java 8</td>
<td style="text-align: left;">1.8.0_181</td>
</tr>
<tr class="even">
<td style="text-align: left;">Kafka</td>
<td style="text-align: left;">2.1.0+cdh6.2.0</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Kite（仅限 CDH 5 ）</td>
<td style="text-align: left;">1.0.0+cdh6.2.0</td>
</tr>
<tr class="even">
<td style="text-align: left;">kudu</td>
<td style="text-align: left;">1.9.0+cdh6.2.0</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Oozie</td>
<td style="text-align: left;">5.1.0+cdh6.2.0</td>
</tr>
<tr class="even">
<td style="text-align: left;">Parquet</td>
<td style="text-align: left;">1.9.0+cdh6.2.0</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Pig</td>
<td style="text-align: left;">0.17.0+cdh6.2.0</td>
</tr>
<tr class="even">
<td style="text-align: left;">sentry</td>
<td style="text-align: left;">2.1.0+cdh6.2.0</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Solr</td>
<td style="text-align: left;">7.4.0+cdh6.2.0</td>
</tr>
<tr class="even">
<td style="text-align: left;">spark</td>
<td style="text-align: left;">2.4.0+cdh6.2.0</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Sqoop</td>
<td style="text-align: left;">1.4.7+cdh6.2.0</td>
</tr>
<tr class="even">
<td style="text-align: left;">ZooKeeper</td>
<td style="text-align: left;">3.4.5+cdh6.2.0</td>
</tr>
</tbody>
</table>
<h1 id="使用向导设置群集">使用向导设置群集</h1>
<h2 id="选择服务">选择服务</h2>
<ul>
<li>选择<code>所有服务</code></li>
<li><del>选择 <code>HBase</code> <code>HDFS</code> <code>Hive</code> <code>Hue</code> <code>Kafka</code> <code>Oozie</code> <code>YARN(MR2 Included)</code> <code>ZooKeeper</code></del></li>
</ul>
<h2 id="自定义角色分配">自定义角色分配</h2>
<ul>
<li>默认</li>
</ul>
<h2 id="数据库设置">数据库设置</h2>
<h3 id="hive">Hive</h3>
<ul>
<li>MySQL &gt; 否 &gt; cdh-master &gt; metastore &gt; hive &gt; 123</li>
</ul>
<h3 id="oozie">Oozie</h3>
<ul>
<li>MySQL &gt; cdh-master &gt; oozie &gt; oozie &gt; 123</li>
</ul>
<h3 id="hue">Hue</h3>
<ul>
<li>MySQL &gt; cdh-master &gt; hue &gt; hue &gt; 123</li>
</ul>
<h2 id="审核更改">审核更改</h2>
<ul>
<li>默认</li>
</ul>
<h2 id="命令详细信息">命令详细信息</h2>
<p>Ps：若搭建过程中多次尝试安装，建议删除 /dfs/nn 下文件，避免 HDFS 服务报错</p>
<h2 id="汇总">汇总</h2>
<h1 id="错误排查">错误排查</h1>
<p>推荐链接 &gt;&gt; https://blog.csdn.net/zzq900503/article/details/53393721</p>
<p><br></p>
<p><meting-js id="31654478" server="netease" type="song" preload="none"></meting-js></p>
<hr>
]]></content>
      <categories>
        <category>技术</category>
        <category>大数据</category>
        <category>CDH</category>
      </categories>
      <tags>
        <tag>BigData</tag>
        <tag>CDH环境搭建</tag>
      </tags>
  </entry>
</search>
